var chineseText = {
	        "score_text"    : "\n当前分数",
	        "hiscore_text"  : "\n最高分",
	        "tutor_text"    : "",
	        "tutor1_text"   : "\n点击屏幕则办公室的两个\n\n小伙伴背着老板谈恋爱。",
	        "tutor2_text"   : "\n小心点！！有时候\n\n老板会回头看你们。",
	        "tutor3_text"   : "\n如果让老板发现，\n\n则你的恋爱宣告结束。",
	        "pause_text"    : "\n暂停",
	        "failed_text"   : "\n失败",
	        "bg_failed_text" : "\n\n老板使出杀手锏，拆散了你们！",
	        "bg_normal_text" : "\n\n就差一点点，就成功了！",
	        "success_text"  : "\n成功",
	        "bg_success_text"  : "\n\n有情人终成眷属！！！"
    	}
window.log = function(a) {
	log.history = log.history || [], log.history.push(arguments), this.console && console.log(a)
}, global = {}, global.addAtlas = function(a, l, e, o) {
	void 0 == e && (e = a), void 0 == o && (o = e), void 0 != l && "" != l ? l += "/" : void 0 == l && (l = ""), game.load.atlas(a, "assets/" + BasicGame.screen + "/" + l + e + ".png", "assets/" + BasicGame.screen + "/" + l + o + ".json"), game.load.json(o, "assets/" + BasicGame.screen + "/" + l + o + ".json")
}, global.findAtlasBySpriteKey = function(a) {
	var l = {},
		e = game.cache.getKeys(Phaser.Cache.JSON);
	for (var o in e)
		for (var i = game.cache.getJSON(e[o]).frames, t = 0; t < i.length; t++) {
			var g = i[t];
			if (g.filename == a) return l.atlasKey = e[o], l.p = g, l
		}
	return null
}, global.loadTexture = function(a, l) {
	var e = global.findAtlasBySpriteKey(l);
	a.loadTexture(e.atlasKey, l); {
		var o = e.p.spriteSourceSize;
		o.w - o.x, o.h - o.y
	}
	a.atlasName = e.atlasKey, a.pivot.x = a.tempPivotX - o.x, a.pivot.y = a.tempPivotY - o.y
}, global.addSprite = function(a, l, e) {
	var o = global.findAtlasBySpriteKey(e);
	null == o && console.log("atlas on global.add.sprite with key |" + e + "| not found on any json files");
	var i = game.add.sprite(a, l, o.atlasKey);
	i.frameName = e; {
		var t = o.p.spriteSourceSize;
		t.w - t.x, t.h - t.y
	}
	return i.atlasName = o.atlasKey, i.tempPivotX = i.pivot.x, i.tempPivotY = i.pivot.y, i.pivot.x -= t.x, i.pivot.y -= t.y, i.dw = t.x, i.dh = t.y, i
}, global.addButton = function(a, l, e, o, i) {
	var t = global.findAtlasBySpriteKey(e);
	null == t && console.log("atlas on global.add.sprite with key |" + e + "| not found on any json files"); {
		var g = game.add.button(a, l, t.atlasKey, o, i, e, e, e, e),
			n = t.p.spriteSourceSize;
		n.w - n.x, n.h - n.y
	}
	return g.atlasName = t.atlasKey, g.tempPivotX = g.pivot.x, g.tempPivotY = g.pivot.y, g.pivot.x -= n.x, g.pivot.y -= n.y, g
}, global.localization = {}, global.addBitmapText = function(a, l, e) {
	game.add.bitmapText(a, l, e, "play", 32)
}, global.switchLanguage = function(a) {
	global.localization.oldLanguage = global.localization.language, global.localization.language = a, global.updateLocalization()
}, global.updateLocalization = function() {
	global.localization.language != global.localization.oldLanguage && game.world.forEach(global.localization.updateAllBitmapTexts, game)
}, global.localization.findNewString = function(a) {
	for (var l in global.localization.json[global.localization.oldLanguage])
		if (global.localization.json[global.localization.oldLanguage][l] == a) return void 0 == global.localization.json[global.localization.language][l] ? (alert("keyString '" + l + "'' on " + global.localization.language + " is not exist on global.localization.json !"), "ERROR") : global.localization.json[global.localization.language][l];
	return alert("keyString '" + a + "'' on " + global.localization.language + " is not exist on global.localization.json !"), "NULL"
}, global.localization.updateAllBitmapTexts = function(a) {
	a instanceof Phaser.BitmapText && (a.text = global.localization.findNewString(a.text))
}, global.getLocalText = function(a) {
	a = chineseText[a]
	return a = a.toLowerCase()//, window.famobi.__(a)
}, global.processScaling = function() {
	var a = new Phaser.Device;
	console.log("begin processScaling global deviceWidth/height : " + global.deviceWidth + " - " + global.deviceHeight), global.isDesktop = a.desktop;
	var l;
	if (1 == global.landscape && 0 == a.desktop) {
		if (global.deviceHeight > global.deviceWidth) {
			global.forceReloadFlag = !0, document.getElementById("orientation").style.display = "block";
			var e = global.deviceWidth;
			global.deviceWidth = global.deviceHeight, global.deviceHeight = e
		}
		BasicGame.srx = Math.max(global.deviceWidth, global.deviceHeight), BasicGame.sry = Math.min(global.deviceWidth, global.deviceHeight), l = BasicGame.srx
	} else if (0 == global.landscape && 0 == a.desktop) {
		if (global.deviceWidth > global.deviceHeight && 0 == a.desktop) {
			global.forceReloadFlag = !0, document.getElementById("orientation").style.display = "block";
			var e = global.deviceHeight;
			global.deviceHeight = global.deviceWidth, global.deviceWidth = e
		}
		BasicGame.srx = Math.min(global.deviceWidth, global.deviceHeight), BasicGame.sry = Math.max(global.deviceWidth, global.deviceHeight), l = BasicGame.sry, console.log(l)
	}
	var o = BasicGame.logicWidth / BasicGame.logicHeight;
	2039 >= l ? (BasicGame.screen = "1020", global.landscape ? BasicGame.gameWidth = 1020 : BasicGame.gameHeight = 1020) : (BasicGame.screen = "2040", global.landscape ? BasicGame.gameWidth = 2040 : BasicGame.gameHeight = 2040), global.forceWidth && (BasicGame.screen = "1020", BasicGame.gameWidth = global.logicWidth, BasicGame.gameHeight = global.logicHeight), global.simulatedMobileOnDesktop = !1, a.desktop && 1 == global.simulatedMobile ? global.simulatedMobileOnDesktop = !0 : a.desktop && 0 == global.simulatedMobile && 0 == global.forceWidth, a = null, global.landscape ? BasicGame.gameHeight = BasicGame.gameWidth / o : BasicGame.gameWidth = BasicGame.gameHeight * o, console.log("BasicGame.gameWidth/height : " + BasicGame.gameWidth + " - " + BasicGame.gameHeight + ", win.inner : " + global.deviceWidth + "-" + global.deviceHeight)
}, global.cw = function(a) {
	return Math.floor(a / BasicGame.logicWidth * BasicGame.gameWidth)
}, global.ch = function(a) {
	return Math.floor(a / BasicGame.logicHeight * BasicGame.gameHeight)
}, global.init = function() {
	global.left = BasicGame.viewX, global.top = BasicGame.viewY, global.right = BasicGame.viewRight, global.bottom = BasicGame.viewBottom, global.centerX = BasicGame.viewX + BasicGame.viewWidth / 2, global.centerY = BasicGame.viewY + BasicGame.viewHeight / 2, global.viewWidth = BasicGame.viewWidth, global.viewHeight = BasicGame.viewHeight
}, global.alignLeftPercent = function(a, l) {
	var e = l;
	a.position.x = global.left + Math.floor(global.viewWidth * (e / 100))
}, global.alignTopPercent = function(a, l) {
	var e = l;
	a.position.y = global.top + Math.floor(global.viewHeight * (e / 100))
}, global.alignLeft = function(a) {
	a.position.x = BasicGame.viewX
}, global.alignTop = function(a) {
	a.position.y = BasicGame.viewY
}, global.alignTopLeft = function(a) {
	global.alignTop(a), global.alignLeft(a)
}, global.alignCenterX = function(a) {
	a.position.x = BasicGame.viewX + BasicGame.viewWidth / 2 - a.width / 2
}, global.alignCenterY = function(a) {
	a.position.y = BasicGame.viewY + BasicGame.viewHeight / 2 - a.height / 2
}, global.alignCenter = function(a) {
	global.alignCenterY(a), global.alignCenterX(a)
}, global.alignBottomRight = function(a) {
	global.alignBottom(a), global.alignRight(a)
}, global.alignBottom = function(a) {
	a.position.y = BasicGame.viewBottom - a.height
}, global.alignRight = function(a) {
	a.position.x = BasicGame.viewRight - a.width
}, global.setPosX = function(a) {
	var l = a;
	return Math.floor(BasicGame.gameWidth * (l / 100))
}, global.setPosY = function(a) {
	var l = a;
	return Math.floor(BasicGame.gameHeight * (l / 100))
}, global.setWordWrap = function(a) {
	return a * BasicGame.gameWidth / 1020
}, global.setFont = function(a) {
	return a * BasicGame.gameWidth / 1020
}, global.setSound = function() {}, global.AngleOfTwoDots = function(a, l, e, o) {
	var i = a - e,
		t = l - o;
	return Math.atan2(t, i)
}, global.RadToDeg = function(a) {
	return 180 * a / Math.PI
}, global.useMobile = !0, global.setX = function(a, l) {
	a.position.x = Math.floor(global.useMobile ? BasicGame.gameWidth * (l / 100) : global.logicWidth * (l / 100))
}, global.setY = function(a, l) {
	a.position.y = Math.floor(global.useMobile ? BasicGame.viewBottom * (l / 100) : global.logicHeight * (l / 100))
}, global.cw2 = function(a) {
	return global.useMobile ? Math.floor(a * (BasicGame.screen / 2040)) : void 0
}, global.ch2 = function(a) {
	return global.useMobile ? Math.floor(a * (BasicGame.screen / 2040)) : void 0
}, global.maxWidthScreen = function() {
	return global.useMobile ? BasicGame.gameWidth : global.logicWidth
}, global.maxHeightScreen = function() {
	return global.useMobile ? BasicGame.gameHeight : global.logicHeight
}, global.setLengthScore = function(a, l) {
	var e = "";
	for (i = 0; i < l - a.toString().length; i++) e += "0";
	return e += a.toString()
};