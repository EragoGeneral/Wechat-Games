function easeOutBounce(t, e, i, r) {
	return (t /= r) < 1 / 2.75 ? 7.5625 * i * t * t + e : 2 / 2.75 > t ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : 2.5 / 2.75 > t ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e
}

function integerize(t, e) {
	return Math.round(t / e * litetween_precision)
}

function easeFunc(t, e, i, r, s, n) {
	var a = 0;
	switch (t) {
		case 0:
			a = r * e / s + i;
			break;
		case 1:
			a = r * (e /= s) * e + i;
			break;
		case 2:
			a = -r * (e /= s) * (e - 2) + i;
			break;
		case 3:
			a = (e /= s / 2) < 1 ? r / 2 * e * e + i : -r / 2 * (--e * (e - 2) - 1) + i;
			break;
		case 4:
			a = r * (e /= s) * e * e + i;
			break;
		case 5:
			a = r * ((e = e / s - 1) * e * e + 1) + i;
			break;
		case 6:
			a = (e /= s / 2) < 1 ? r / 2 * e * e * e + i : r / 2 * ((e -= 2) * e * e + 2) + i;
			break;
		case 7:
			a = r * (e /= s) * e * e * e + i;
			break;
		case 8:
			a = -r * ((e = e / s - 1) * e * e * e - 1) + i;
			break;
		case 9:
			a = (e /= s / 2) < 1 ? r / 2 * e * e * e * e + i : -r / 2 * ((e -= 2) * e * e * e - 2) + i;
			break;
		case 10:
			a = r * (e /= s) * e * e * e * e + i;
			break;
		case 11:
			a = r * ((e = e / s - 1) * e * e * e * e + 1) + i;
			break;
		case 12:
			a = (e /= s / 2) < 1 ? r / 2 * e * e * e * e * e + i : r / 2 * ((e -= 2) * e * e * e * e + 2) + i;
			break;
		case 13:
			a = easeInCircle[integerize(e, s)];
			break;
		case 14:
			a = easeOutCircle[integerize(e, s)];
			break;
		case 15:
			a = easeInOutCircle[integerize(e, s)];
			break;
		case 16:
			var o = 0;
			0 == o && (o = 1.70158), a = r * (e /= s) * e * ((o + 1) * e - o) + i;
			break;
		case 17:
			a = easeOutBack[integerize(e, s)];
			break;
		case 18:
			a = easeInOutBack[integerize(e, s)];
			break;
		case 19:
			a = easeInElasticArray[integerize(e, s)];
			break;
		case 20:
			a = easeOutElasticArray[integerize(e, s)];
			break;
		case 21:
			a = easeInOutElasticArray[integerize(e, s)];
			break;
		case 22:
			a = r - easeOutBounceArray[integerize(s - e, s)] + i;
			break;
		case 23:
			a = easeOutBounceArray[integerize(e, s)];
			break;
		case 24:
			a = s / 2 > e ? .5 * (r - easeOutBounceArray[integerize(s - 2 * e, s)] + i) + i : .5 * easeOutBounceArray[integerize(2 * e - s, s)] + .5 * r + i;
			break;
		case 25:
			var h = e / s / 2;
			a = 2 * h * h * (3 - 2 * h);
			break;
		case 26:
			var h = (e / s + 1) / 2;
			a = 2 * h * h * (3 - 2 * h) - 1;
			break;
		case 27:
			var h = e / s;
			a = h * h * (3 - 2 * h)
	}
	return n ? r - i - a : a
}

function trim(t) {
	return t.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
}
var cr = {};
cr.plugins_ = {}, cr.behaviors = {}, "function" != typeof Object.getPrototypeOf && (Object.getPrototypeOf = "object" == typeof "test".__proto__ ? function(t) {
		return t.__proto__
	} : function(t) {
		return t.constructor.prototype
	}),
	function() {
		function t(t, e) {
			this.x = t, this.y = e, cr.seal(this)
		}

		function e(t, e, i, r) {
			this.set(t, e, i, r), cr.seal(this)
		}

		function i() {
			this.tlx = 0, this.tly = 0, this.trx = 0, this.try_ = 0, this.brx = 0, this.bry = 0, this.blx = 0, this.bly = 0, cr.seal(this)
		}

		function r(t, e, i, r) {
			e > t ? r > i ? (y = i > t ? t : i, _ = e > r ? e : r) : (y = r > t ? t : r, _ = e > i ? e : i) : r > i ? (y = i > e ? e : i, _ = t > r ? t : r) : (y = r > e ? e : r, _ = t > i ? t : i)
		}

		function s() {
			this.s = null, this.items = null, this.item_count = 0, T && (this.s = new Set), this.values_cache = [], this.cache_valid = !0, cr.seal(this)
		}

		function n(t) {
			C[k++] = t
		}

		function a() {
			this.c = 0, this.y = 0, this.t = 0, this.sum = 0, cr.seal(this)
		}

		function o(t) {
			this.pts_cache = [], this.bboxLeft = 0, this.bboxTop = 0, this.bboxRight = 0, this.bboxBottom = 0, this.convexpolys = null, this.set_pts(t), cr.seal(this)
		}

		function h(t, e) {
			this.cellwidth = t, this.cellheight = e, this.cells = {}
		}

		function c(t, e) {
			this.cellwidth = t, this.cellheight = e, this.cells = {}
		}

		function l(t, e, i) {
			var r;
			return h.prototype.totalCellCount++, A.length ? (r = A.pop(), r.grid = t, r.x = e, r.y = i, r) : new cr.GridCell(t, e, i)
		}

		function u(t) {
			h.prototype.totalCellCount--, t.objects.clear(), A.length < 1e3 && A.push(t)
		}

		function p(t, e, i) {
			this.grid = t, this.x = e, this.y = i, this.objects = new cr.ObjectSet
		}

		function d(t, e, i) {
			var r;
			return c.prototype.totalCellCount++, E.length ? (r = E.pop(), r.grid = t, r.x = e, r.y = i, r) : new cr.RenderCell(t, e, i)
		}

		function f(t) {
			c.prototype.totalCellCount--, t.reset(), E.length < 1e3 && E.push(t)
		}

		function g(t, e, i) {
			this.grid = t, this.x = e, this.y = i, this.objects = [], this.is_sorted = !0, this.pending_removal = new cr.ObjectSet, this.any_pending_removal = !1
		}

		function m(t, e) {
			return t.zindex - e.zindex
		}
		cr.logexport = function(t) {
			window.console && window.console.log && window.console.log(t)
		}, cr.logerror = function(t) {
			window.console && window.console.error && window.console.error(t)
		}, cr.seal = function(t) {
			return t
		}, cr.freeze = function(t) {
			return t
		}, cr.is_undefined = function(t) {
			return "undefined" == typeof t
		}, cr.is_number = function(t) {
			return "number" == typeof t
		}, cr.is_string = function(t) {
			return "string" == typeof t
		}, cr.isPOT = function(t) {
			return t > 0 && 0 === (t - 1 & t)
		}, cr.nextHighestPowerOfTwo = function(t) {
			--t;
			for (var e = 1; 32 > e; e <<= 1) t |= t >> e;
			return t + 1
		}, cr.abs = function(t) {
			return 0 > t ? -t : t
		}, cr.max = function(t, e) {
			return t > e ? t : e
		}, cr.min = function(t, e) {
			return e > t ? t : e
		}, cr.PI = Math.PI, cr.round = function(t) {
			return t + .5 | 0
		}, cr.floor = function(t) {
			return t >= 0 ? 0 | t : (0 | t) - 1
		}, cr.ceil = function(t) {
			var e = 0 | t;
			return e === t ? e : e + 1
		}, t.prototype.offset = function(t, e) {
			return this.x += t, this.y += e, this
		}, t.prototype.mul = function(t, e) {
			return this.x *= t, this.y *= e, this
		}, cr.vector2 = t, cr.segments_intersect = function(t, e, i, r, s, n, a, o) {
			var h, c, l, u, p, d, f, g;
			if (i > t ? (c = t, h = i) : (c = i, h = t), a > s ? (d = s, p = a) : (d = a, p = s), d > h || c > p) return !1;
			if (r > e ? (u = e, l = r) : (u = r, l = e), o > n ? (g = n, f = o) : (g = o, f = n), g > l || u > f) return !1;
			var m = s - t + a - i,
				y = n - e + o - r,
				_ = i - t,
				v = r - e,
				b = a - s,
				w = o - n,
				x = cr.abs(v * b - w * _),
				S = b * y - w * m;
			if (cr.abs(S) > x) return !1;
			var T = _ * y - v * m;
			return cr.abs(T) <= x
		}, e.prototype.set = function(t, e, i, r) {
			this.left = t, this.top = e, this.right = i, this.bottom = r
		}, e.prototype.copy = function(t) {
			this.left = t.left, this.top = t.top, this.right = t.right, this.bottom = t.bottom
		}, e.prototype.width = function() {
			return this.right - this.left
		}, e.prototype.height = function() {
			return this.bottom - this.top
		}, e.prototype.offset = function(t, e) {
			return this.left += t, this.top += e, this.right += t, this.bottom += e, this
		}, e.prototype.normalize = function() {
			var t = 0;
			this.left > this.right && (t = this.left, this.left = this.right, this.right = t), this.top > this.bottom && (t = this.top, this.top = this.bottom, this.bottom = t)
		}, e.prototype.intersects_rect = function(t) {
			return !(t.right < this.left || t.bottom < this.top || t.left > this.right || t.top > this.bottom)
		}, e.prototype.intersects_rect_off = function(t, e, i) {
			return !(t.right + e < this.left || t.bottom + i < this.top || t.left + e > this.right || t.top + i > this.bottom)
		}, e.prototype.contains_pt = function(t, e) {
			return t >= this.left && t <= this.right && e >= this.top && e <= this.bottom
		}, e.prototype.equals = function(t) {
			return this.left === t.left && this.top === t.top && this.right === t.right && this.bottom === t.bottom
		}, cr.rect = e, i.prototype.set_from_rect = function(t) {
			this.tlx = t.left, this.tly = t.top, this.trx = t.right, this.try_ = t.top, this.brx = t.right, this.bry = t.bottom, this.blx = t.left, this.bly = t.bottom
		}, i.prototype.set_from_rotated_rect = function(t, e) {
			if (0 === e) this.set_from_rect(t);
			else {
				var i = Math.sin(e),
					r = Math.cos(e),
					s = t.left * i,
					n = t.top * i,
					a = t.right * i,
					o = t.bottom * i,
					h = t.left * r,
					c = t.top * r,
					l = t.right * r,
					u = t.bottom * r;
				this.tlx = h - n, this.tly = c + s, this.trx = l - n, this.try_ = c + a, this.brx = l - o, this.bry = u + a, this.blx = h - o, this.bly = u + s
			}
		}, i.prototype.offset = function(t, e) {
			return this.tlx += t, this.tly += e, this.trx += t, this.try_ += e, this.brx += t, this.bry += e, this.blx += t, this.bly += e, this
		};
		var y = 0,
			_ = 0;
		i.prototype.bounding_box = function(t) {
			r(this.tlx, this.trx, this.brx, this.blx), t.left = y, t.right = _, r(this.tly, this.try_, this.bry, this.bly), t.top = y, t.bottom = _
		}, i.prototype.contains_pt = function(t, e) {
			var i = this.tlx,
				r = this.tly,
				s = this.trx - i,
				n = this.try_ - r,
				a = this.brx - i,
				o = this.bry - r,
				h = t - i,
				c = e - r,
				l = s * s + n * n,
				u = s * a + n * o,
				p = s * h + n * c,
				d = a * a + o * o,
				f = a * h + o * c,
				g = 1 / (l * d - u * u),
				m = (d * p - u * f) * g,
				y = (l * f - u * p) * g;
			if (m >= 0 && y > 0 && 1 > m + y) return !0;
			s = this.blx - i, n = this.bly - r;
			var l = s * s + n * n,
				u = s * a + n * o,
				p = s * h + n * c;
			return g = 1 / (l * d - u * u), m = (d * p - u * f) * g, y = (l * f - u * p) * g, m >= 0 && y > 0 && 1 > m + y
		}, i.prototype.at = function(t, e) {
			if (e) switch (t) {
				case 0:
					return this.tlx;
				case 1:
					return this.trx;
				case 2:
					return this.brx;
				case 3:
					return this.blx;
				case 4:
					return this.tlx;
				default:
					return this.tlx
			} else switch (t) {
				case 0:
					return this.tly;
				case 1:
					return this.try_;
				case 2:
					return this.bry;
				case 3:
					return this.bly;
				case 4:
					return this.tly;
				default:
					return this.tly
			}
		}, i.prototype.midX = function() {
			return (this.tlx + this.trx + this.brx + this.blx) / 4
		}, i.prototype.midY = function() {
			return (this.tly + this.try_ + this.bry + this.bly) / 4
		}, i.prototype.intersects_segment = function(t, e, i, r) {
			if (this.contains_pt(t, e) || this.contains_pt(i, r)) return !0;
			var s, n, a, o, h;
			for (h = 0; 4 > h; h++)
				if (s = this.at(h, !0), n = this.at(h, !1), a = this.at(h + 1, !0), o = this.at(h + 1, !1), cr.segments_intersect(t, e, i, r, s, n, a, o)) return !0;
			return !1
		}, i.prototype.intersects_quad = function(t) {
			var e = t.midX(),
				i = t.midY();
			if (this.contains_pt(e, i)) return !0;
			if (e = this.midX(), i = this.midY(), t.contains_pt(e, i)) return !0;
			var r, s, n, a, o, h, c, l, u, p;
			for (u = 0; 4 > u; u++)
				for (p = 0; 4 > p; p++)
					if (r = this.at(u, !0), s = this.at(u, !1), n = this.at(u + 1, !0), a = this.at(u + 1, !1), o = t.at(p, !0), h = t.at(p, !1), c = t.at(p + 1, !0), l = t.at(p + 1, !1), cr.segments_intersect(r, s, n, a, o, h, c, l)) return !0;
			return !1
		}, cr.quad = i, cr.RGB = function(t, e, i) {
			return Math.max(Math.min(t, 255), 0) | Math.max(Math.min(e, 255), 0) << 8 | Math.max(Math.min(i, 255), 0) << 16
		}, cr.GetRValue = function(t) {
			return 255 & t
		}, cr.GetGValue = function(t) {
			return (65280 & t) >> 8
		}, cr.GetBValue = function(t) {
			return (16711680 & t) >> 16
		}, cr.shallowCopy = function(t, e) {
			var i;
			for (i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
			return t
		}, cr.arrayRemove = function(t, e) {
			var i, r;
			if (e = cr.floor(e), !(0 > e || e >= t.length)) {
				for (i = e, r = t.length - 1; r > i; i++) t[i] = t[i + 1];
				cr.truncateArray(t, r)
			}
		}, cr.truncateArray = function(t, e) {
			t.length = e
		}, cr.clearArray = function(t) {
			cr.truncateArray(t, 0)
		}, cr.shallowAssignArray = function(t, e) {
			cr.clearArray(t);
			var i, r;
			for (i = 0, r = e.length; r > i; ++i) t[i] = e[i]
		}, cr.appendArray = function(t, e) {
			t.push.apply(t, e)
		}, cr.fastIndexOf = function(t, e) {
			var i, r;
			for (i = 0, r = t.length; r > i; ++i)
				if (t[i] === e) return i;
			return -1
		}, cr.arrayFindRemove = function(t, e) {
			var i = cr.fastIndexOf(t, e); - 1 !== i && cr.arrayRemove(t, i)
		}, cr.clamp = function(t, e, i) {
			return e > t ? e : t > i ? i : t
		}, cr.to_radians = function(t) {
			return t / (180 / cr.PI)
		}, cr.to_degrees = function(t) {
			return t * (180 / cr.PI)
		}, cr.clamp_angle_degrees = function(t) {
			return t %= 360, 0 > t && (t += 360), t
		}, cr.clamp_angle = function(t) {
			return t %= 2 * cr.PI, 0 > t && (t += 2 * cr.PI), t
		}, cr.to_clamped_degrees = function(t) {
			return cr.clamp_angle_degrees(cr.to_degrees(t))
		}, cr.to_clamped_radians = function(t) {
			return cr.clamp_angle(cr.to_radians(t))
		}, cr.angleTo = function(t, e, i, r) {
			var s = i - t,
				n = r - e;
			return Math.atan2(n, s)
		}, cr.angleDiff = function(t, e) {
			if (t === e) return 0;
			var i = Math.sin(t),
				r = Math.cos(t),
				s = Math.sin(e),
				n = Math.cos(e),
				a = i * s + r * n;
			return a >= 1 ? 0 : -1 >= a ? cr.PI : Math.acos(a)
		}, cr.angleRotate = function(t, e, i) {
			var r = Math.sin(t),
				s = Math.cos(t),
				n = Math.sin(e),
				a = Math.cos(e);
			return cr.clamp_angle(Math.acos(r * n + s * a) > i ? s * n - r * a > 0 ? t + i : t - i : e)
		}, cr.angleClockwise = function(t, e) {
			var i = Math.sin(t),
				r = Math.cos(t),
				s = Math.sin(e),
				n = Math.cos(e);
			return 0 >= r * s - i * n
		}, cr.rotatePtAround = function(t, e, i, r, s, n) {
			if (0 === i) return n ? t : e;
			var a = Math.sin(i),
				o = Math.cos(i);
			t -= r, e -= s;
			var h = t * a,
				c = e * a,
				l = t * o,
				u = e * o;
			return t = l - c, e = u + h, t += r, e += s, n ? t : e
		}, cr.distanceTo = function(t, e, i, r) {
			var s = i - t,
				n = r - e;
			return Math.sqrt(s * s + n * n)
		}, cr.xor = function(t, e) {
			return !t != !e
		}, cr.lerp = function(t, e, i) {
			return t + (e - t) * i
		}, cr.unlerp = function(t, e, i) {
			return t === e ? 0 : (i - t) / (e - t)
		}, cr.anglelerp = function(t, e, i) {
			var r = cr.angleDiff(t, e);
			return cr.angleClockwise(e, t) ? t + r * i : t - r * i
		}, cr.qarp = function(t, e, i, r) {
			return cr.lerp(cr.lerp(t, e, r), cr.lerp(e, i, r), r)
		}, cr.cubic = function(t, e, i, r, s) {
			return cr.lerp(cr.qarp(t, e, i, s), cr.qarp(e, i, r, s), s)
		}, cr.cosp = function(t, e, i) {
			return (t + e + (t - e) * Math.cos(i * Math.PI)) / 2
		}, cr.hasAnyOwnProperty = function(t) {
			var e;
			for (e in t)
				if (t.hasOwnProperty(e)) return !0;
			return !1
		}, cr.wipe = function(t) {
			var e;
			for (e in t) t.hasOwnProperty(e) && delete t[e]
		};
		var v = +new Date;
		cr.performance_now = function() {
			if ("undefined" != typeof window.performance) {
				var t = window.performance;
				if ("undefined" != typeof t.now) return t.now();
				if ("undefined" != typeof t.webkitNow) return t.webkitNow();
				if ("undefined" != typeof t.mozNow) return t.mozNow();
				if ("undefined" != typeof t.msNow) return t.msNow()
			}
			return Date.now() - v
		};
		var b = !1,
			w = !1,
			x = !1,
			S = !1;
		"undefined" != typeof window && (b = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent), w = !b && /safari/i.test(navigator.userAgent), x = /(iphone|ipod|ipad)/i.test(navigator.userAgent), S = window.c2ejecta);
		var T = !w && !S && !x && "undefined" != typeof Set && "undefined" != typeof Set.prototype.forEach;
		s.prototype.contains = function(t) {
			return this.isEmpty() ? !1 : T ? this.s.has(t) : this.items && this.items.hasOwnProperty(t)
		}, s.prototype.add = function(t) {
			if (T) this.s.has(t) || (this.s.add(t), this.cache_valid = !1);
			else {
				var e = t.toString(),
					i = this.items;
				i ? i.hasOwnProperty(e) || (i[e] = t, this.item_count++, this.cache_valid = !1) : (this.items = {}, this.items[e] = t, this.item_count = 1, this.cache_valid = !1)
			}
		}, s.prototype.remove = function(t) {
			if (!this.isEmpty())
				if (T) this.s.has(t) && (this.s["delete"](t), this.cache_valid = !1);
				else if (this.items) {
				var e = t.toString(),
					i = this.items;
				i.hasOwnProperty(e) && (delete i[e], this.item_count--, this.cache_valid = !1)
			}
		}, s.prototype.clear = function() {
			this.isEmpty() || (T ? this.s.clear() : (this.items = null, this.item_count = 0), cr.clearArray(this.values_cache), this.cache_valid = !0)
		}, s.prototype.isEmpty = function() {
			return 0 === this.count()
		}, s.prototype.count = function() {
			return T ? this.s.size : this.item_count
		};
		var C = null,
			k = 0;
		s.prototype.update_cache = function() {
			if (!this.cache_valid) {
				if (T) cr.clearArray(this.values_cache), C = this.values_cache, k = 0, this.s.forEach(n), C = null, k = 0;
				else {
					var t = this.values_cache;
					cr.clearArray(t);
					var e, i = 0,
						r = this.items;
					if (r)
						for (e in r) r.hasOwnProperty(e) && (t[i++] = r[e])
				}
				this.cache_valid = !0
			}
		}, s.prototype.valuesRef = function() {
			return this.update_cache(), this.values_cache
		}, cr.ObjectSet = s;
		var O = new cr.ObjectSet;
		cr.removeArrayDuplicates = function(t) {
			var e, i;
			for (e = 0, i = t.length; i > e; ++e) O.add(t[e]);
			cr.shallowAssignArray(t, O.valuesRef()), O.clear()
		}, cr.arrayRemoveAllFromObjectSet = function(t, e) {
			T ? cr.arrayRemoveAll_set(t, e.s) : cr.arrayRemoveAll_arr(t, e.valuesRef())
		}, cr.arrayRemoveAll_set = function(t, e) {
			var i, r, s, n;
			for (i = 0, r = 0, s = t.length; s > i; ++i) n = t[i], e.has(n) || (t[r++] = n);
			cr.truncateArray(t, r)
		}, cr.arrayRemoveAll_arr = function(t, e) {
			var i, r, s, n;
			for (i = 0, r = 0, s = t.length; s > i; ++i) n = t[i], -1 === cr.fastIndexOf(e, n) && (t[r++] = n);
			cr.truncateArray(t, r)
		}, a.prototype.add = function(t) {
			this.y = t - this.c, this.t = this.sum + this.y, this.c = this.t - this.sum - this.y, this.sum = this.t
		}, a.prototype.reset = function() {
			this.c = 0, this.y = 0, this.t = 0, this.sum = 0
		}, cr.KahanAdder = a, cr.regexp_escape = function(t) {
			return t.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
		}, o.prototype.set_pts = function(t) {
			this.pts_array = t, this.pts_count = t.length / 2, this.pts_cache.length = t.length, this.cache_width = -1, this.cache_height = -1, this.cache_angle = 0
		}, o.prototype.is_empty = function() {
			return !this.pts_array.length
		}, o.prototype.update_bbox = function() {
			for (var t, e, i, r = this.pts_cache, s = r[0], n = s, a = r[1], o = a, h = 1, c = this.pts_count; c > h; ++h) i = 2 * h, t = r[i], e = r[i + 1], s > t && (s = t), t > n && (n = t), a > e && (a = e), e > o && (o = e);
			this.bboxLeft = s, this.bboxRight = n, this.bboxTop = a, this.bboxBottom = o
		}, o.prototype.set_from_rect = function(t, e, i) {
			this.pts_cache.length = 8, this.pts_count = 4;
			var r = this.pts_cache;
			r[0] = t.left - e, r[1] = t.top - i, r[2] = t.right - e, r[3] = t.top - i, r[4] = t.right - e, r[5] = t.bottom - i, r[6] = t.left - e, r[7] = t.bottom - i, this.cache_width = t.right - t.left, this.cache_height = t.bottom - t.top, this.update_bbox()
		}, o.prototype.set_from_quad = function(t, e, i, r, s) {
			this.pts_cache.length = 8, this.pts_count = 4;
			var n = this.pts_cache;
			n[0] = t.tlx - e, n[1] = t.tly - i, n[2] = t.trx - e, n[3] = t.try_ - i, n[4] = t.brx - e, n[5] = t.bry - i, n[6] = t.blx - e, n[7] = t.bly - i, this.cache_width = r, this.cache_height = s, this.update_bbox()
		}, o.prototype.set_from_poly = function(t) {
			this.pts_count = t.pts_count, cr.shallowAssignArray(this.pts_cache, t.pts_cache), this.bboxLeft = t.bboxLeft, this.bboxTop - t.bboxTop, this.bboxRight = t.bboxRight, this.bboxBottom = t.bboxBottom
		}, o.prototype.cache_poly = function(t, e, i) {
			if (this.cache_width !== t || this.cache_height !== e || this.cache_angle !== i) {
				this.cache_width = t, this.cache_height = e, this.cache_angle = i;
				var r, s, n, a, o, h, c = 0,
					l = 1,
					u = this.pts_array,
					p = this.pts_cache;
				for (0 !== i && (c = Math.sin(i), l = Math.cos(i)), r = 0, a = this.pts_count; a > r; r++) s = 2 * r, n = s + 1, o = u[s] * t, h = u[n] * e, p[s] = o * l - h * c, p[n] = h * l + o * c;
				this.update_bbox()
			}
		}, o.prototype.contains_pt = function(t, e) {
			var i = this.pts_cache;
			if (t === i[0] && e === i[1]) return !0;
			var r, s, n, a, o, h, c, l = this.pts_count,
				u = this.bboxLeft - 110,
				p = this.bboxTop - 101,
				d = this.bboxRight + 131,
				f = this.bboxBottom + 120,
				g = 0,
				m = 0;
			for (r = 0; l > r; r++) s = 2 * r, n = (r + 1) % l * 2, a = i[s], o = i[s + 1], h = i[n], c = i[n + 1], cr.segments_intersect(u, p, t, e, a, o, h, c) && g++, cr.segments_intersect(d, f, t, e, a, o, h, c) && m++;
			return g % 2 === 1 || m % 2 === 1
		}, o.prototype.intersects_poly = function(t, e, i) {
			var r = t.pts_cache,
				s = this.pts_cache;
			if (this.contains_pt(r[0] + e, r[1] + i)) return !0;
			if (t.contains_pt(s[0] - e, s[1] - i)) return !0;
			var n, a, o, h, c, l, u, p, d, f, g, m, y, _, v, b;
			for (n = 0, h = this.pts_count; h > n; n++)
				for (a = 2 * n, o = (n + 1) % h * 2, d = s[a], f = s[a + 1], g = s[o], m = s[o + 1], c = 0, p = t.pts_count; p > c; c++)
					if (l = 2 * c, u = (c + 1) % p * 2, y = r[l] + e, _ = r[l + 1] + i, v = r[u] + e, b = r[u + 1] + i, cr.segments_intersect(d, f, g, m, y, _, v, b)) return !0;
			return !1
		}, o.prototype.intersects_segment = function(t, e, i, r, s, n) {
			var a = this.pts_cache;
			if (this.contains_pt(i - t, r - e)) return !0;
			var o, h, c, l, u, p, d, f;
			for (o = 0, h = this.pts_count; h > o; o++)
				if (c = 2 * o, l = (o + 1) % h * 2, u = a[c] + t, p = a[c + 1] + e, d = a[l] + t, f = a[l + 1] + e, cr.segments_intersect(i, r, s, n, u, p, d, f)) return !0;
			return !1
		}, o.prototype.mirror = function(t) {
			var e, i, r;
			for (e = 0, i = this.pts_count; i > e; ++e) r = 2 * e, this.pts_cache[r] = 2 * t - this.pts_cache[r]
		}, o.prototype.flip = function(t) {
			var e, i, r;
			for (e = 0, i = this.pts_count; i > e; ++e) r = 2 * e + 1, this.pts_cache[r] = 2 * t - this.pts_cache[r]
		}, o.prototype.diag = function() {
			var t, e, i, r, s;
			for (t = 0, e = this.pts_count; e > t; ++t) i = 2 * t, r = i + 1, s = this.pts_cache[i], this.pts_cache[i] = this.pts_cache[r], this.pts_cache[r] = s
		}, cr.CollisionPoly = o, h.prototype.totalCellCount = 0, h.prototype.getCell = function(t, e, i) {
			var r, s = this.cells[t];
			return s ? (r = s[e], r ? r : i ? (r = l(this, t, e), this.cells[t][e] = r, r) : null) : i ? (r = l(this, t, e), this.cells[t] = {}, this.cells[t][e] = r, r) : null
		}, h.prototype.XToCell = function(t) {
			return cr.floor(t / this.cellwidth)
		}, h.prototype.YToCell = function(t) {
			return cr.floor(t / this.cellheight)
		}, h.prototype.update = function(t, e, i) {
			var r, s, n, a, o;
			if (e)
				for (r = e.left, s = e.right; s >= r; ++r)
					for (n = e.top, a = e.bottom; a >= n; ++n) i && i.contains_pt(r, n) || (o = this.getCell(r, n, !1), o && (o.remove(t), o.isEmpty() && (u(o), this.cells[r][n] = null)));
			if (i)
				for (r = i.left, s = i.right; s >= r; ++r)
					for (n = i.top, a = i.bottom; a >= n; ++n) e && e.contains_pt(r, n) || this.getCell(r, n, !0).insert(t)
		}, h.prototype.queryRange = function(t, e) {
			var i, r, s, n, a, o;
			for (i = this.XToCell(t.left), s = this.YToCell(t.top), r = this.XToCell(t.right), a = this.YToCell(t.bottom); r >= i; ++i)
				for (n = s; a >= n; ++n) o = this.getCell(i, n, !1), o && o.dump(e)
		}, cr.SparseGrid = h, c.prototype.totalCellCount = 0, c.prototype.getCell = function(t, e, i) {
			var r, s = this.cells[t];
			return s ? (r = s[e], r ? r : i ? (r = d(this, t, e), this.cells[t][e] = r, r) : null) : i ? (r = d(this, t, e), this.cells[t] = {}, this.cells[t][e] = r, r) : null
		}, c.prototype.XToCell = function(t) {
			return cr.floor(t / this.cellwidth)
		}, c.prototype.YToCell = function(t) {
			return cr.floor(t / this.cellheight)
		}, c.prototype.update = function(t, e, i) {
			var r, s, n, a, o;
			if (e)
				for (r = e.left, s = e.right; s >= r; ++r)
					for (n = e.top, a = e.bottom; a >= n; ++n) i && i.contains_pt(r, n) || (o = this.getCell(r, n, !1), o && (o.remove(t), o.isEmpty() && (f(o), this.cells[r][n] = null)));
			if (i)
				for (r = i.left, s = i.right; s >= r; ++r)
					for (n = i.top, a = i.bottom; a >= n; ++n) e && e.contains_pt(r, n) || this.getCell(r, n, !0).insert(t)
		}, c.prototype.queryRange = function(t, e, i, r, s) {
			var n, a, o, h, c, l;
			for (n = this.XToCell(t), o = this.YToCell(e), a = this.XToCell(i), c = this.YToCell(r); a >= n; ++n)
				for (h = o; c >= h; ++h) l = this.getCell(n, h, !1), l && l.dump(s)
		}, c.prototype.markRangeChanged = function(t) {
			var e, i, r, s, n, a;
			for (e = t.left, r = t.top, i = t.right, n = t.bottom; i >= e; ++e)
				for (s = r; n >= s; ++s) a = this.getCell(e, s, !1), a && (a.is_sorted = !1)
		}, cr.RenderGrid = c;
		var A = [];
		p.prototype.isEmpty = function() {
			return this.objects.isEmpty()
		}, p.prototype.insert = function(t) {
			this.objects.add(t)
		}, p.prototype.remove = function(t) {
			this.objects.remove(t)
		}, p.prototype.dump = function(t) {
			cr.appendArray(t, this.objects.valuesRef())
		}, cr.GridCell = p;
		var E = [];
		g.prototype.isEmpty = function() {
			return this.objects.length ? this.objects.length > this.pending_removal.count() ? !1 : (this.flush_pending(), !0) : !0
		}, g.prototype.insert = function(t) {
			if (this.pending_removal.contains(t)) return this.pending_removal.remove(t), void(this.pending_removal.isEmpty() && (this.any_pending_removal = !1));
			if (this.objects.length) {
				var e = this.objects[this.objects.length - 1];
				e.get_zindex() > t.get_zindex() && (this.is_sorted = !1), this.objects.push(t)
			} else this.objects.push(t), this.is_sorted = !0
		}, g.prototype.remove = function(t) {
			this.pending_removal.add(t), this.any_pending_removal = !0, this.pending_removal.count() >= 30 && this.flush_pending()
		}, g.prototype.flush_pending = function() {
			if (this.any_pending_removal) {
				if (this.pending_removal.count() === this.objects.length) return void this.reset();
				cr.arrayRemoveAllFromObjectSet(this.objects, this.pending_removal), this.pending_removal.clear(), this.any_pending_removal = !1
			}
		}, g.prototype.ensure_sorted = function() {
			this.is_sorted || (this.objects.sort(m), this.is_sorted = !0)
		}, g.prototype.reset = function() {
			cr.clearArray(this.objects), this.is_sorted = !0, this.pending_removal.clear(), this.any_pending_removal = !1
		}, g.prototype.dump = function(t) {
			this.flush_pending(), this.ensure_sorted(), this.objects.length && t.push(this.objects)
		}, cr.RenderCell = g;
		var I = ["lighter", "xor", "copy", "destination-over", "source-in", "destination-in", "source-out", "destination-out", "source-atop", "destination-atop"];
		cr.effectToCompositeOp = function(t) {
			return 0 >= t || t >= 11 ? "source-over" : I[t - 1]
		}, cr.setGLBlend = function(t, e, i) {
			if (i) switch (t.srcBlend = i.ONE, t.destBlend = i.ONE_MINUS_SRC_ALPHA, e) {
				case 1:
					t.srcBlend = i.ONE, t.destBlend = i.ONE;
					break;
				case 2:
					break;
				case 3:
					t.srcBlend = i.ONE, t.destBlend = i.ZERO;
					break;
				case 4:
					t.srcBlend = i.ONE_MINUS_DST_ALPHA, t.destBlend = i.ONE;
					break;
				case 5:
					t.srcBlend = i.DST_ALPHA, t.destBlend = i.ZERO;
					break;
				case 6:
					t.srcBlend = i.ZERO, t.destBlend = i.SRC_ALPHA;
					break;
				case 7:
					t.srcBlend = i.ONE_MINUS_DST_ALPHA, t.destBlend = i.ZERO;
					break;
				case 8:
					t.srcBlend = i.ZERO, t.destBlend = i.ONE_MINUS_SRC_ALPHA;
					break;
				case 9:
					t.srcBlend = i.DST_ALPHA, t.destBlend = i.ONE_MINUS_SRC_ALPHA;
					break;
				case 10:
					t.srcBlend = i.ONE_MINUS_DST_ALPHA, t.destBlend = i.SRC_ALPHA
			}
		}, cr.round6dp = function(t) {
			return Math.round(1e6 * t) / 1e6
		}, cr.equals_nocase = function(t, e) {
			return "string" != typeof t || "string" != typeof e ? !1 : t.length !== e.length ? !1 : t === e ? !0 : t.toLowerCase() === e.toLowerCase()
		}, cr.isCanvasInputEvent = function(t) {
			var e = t.target;
			return e ? e === document || e === window ? !0 : document && document.body && e === document.body ? !0 : cr.equals_nocase(e.tagName, "canvas") ? !0 : !1 : !0
		}
	}();
var MatrixArray = "undefined" != typeof Float32Array ? Float32Array : Array,
	glMatrixArrayType = MatrixArray,
	vec3 = {},
	mat3 = {},
	mat4 = {},
	quat4 = {};
vec3.create = function(t) {
		var e = new MatrixArray(3);
		return t && (e[0] = t[0], e[1] = t[1], e[2] = t[2]), e
	}, vec3.set = function(t, e) {
		return e[0] = t[0], e[1] = t[1], e[2] = t[2], e
	}, vec3.add = function(t, e, i) {
		return i && t !== i ? (i[0] = t[0] + e[0], i[1] = t[1] + e[1], i[2] = t[2] + e[2], i) : (t[0] += e[0], t[1] += e[1], t[2] += e[2], t)
	}, vec3.subtract = function(t, e, i) {
		return i && t !== i ? (i[0] = t[0] - e[0], i[1] = t[1] - e[1], i[2] = t[2] - e[2], i) : (t[0] -= e[0], t[1] -= e[1], t[2] -= e[2], t)
	}, vec3.negate = function(t, e) {
		return e || (e = t), e[0] = -t[0], e[1] = -t[1], e[2] = -t[2], e
	}, vec3.scale = function(t, e, i) {
		return i && t !== i ? (i[0] = t[0] * e, i[1] = t[1] * e, i[2] = t[2] * e, i) : (t[0] *= e, t[1] *= e, t[2] *= e, t)
	}, vec3.normalize = function(t, e) {
		e || (e = t);
		var i = t[0],
			r = t[1],
			s = t[2],
			n = Math.sqrt(i * i + r * r + s * s);
		return n ? 1 === n ? (e[0] = i, e[1] = r, e[2] = s, e) : (n = 1 / n, e[0] = i * n, e[1] = r * n, e[2] = s * n, e) : (e[0] = 0, e[1] = 0, e[2] = 0, e)
	}, vec3.cross = function(t, e, i) {
		i || (i = t);
		var r = t[0],
			s = t[1],
			t = t[2],
			n = e[0],
			a = e[1],
			e = e[2];
		return i[0] = s * e - t * a, i[1] = t * n - r * e, i[2] = r * a - s * n, i
	}, vec3.length = function(t) {
		var e = t[0],
			i = t[1],
			t = t[2];
		return Math.sqrt(e * e + i * i + t * t)
	}, vec3.dot = function(t, e) {
		return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
	}, vec3.direction = function(t, e, i) {
		i || (i = t);
		var r = t[0] - e[0],
			s = t[1] - e[1],
			t = t[2] - e[2],
			e = Math.sqrt(r * r + s * s + t * t);
		return e ? (e = 1 / e, i[0] = r * e, i[1] = s * e, i[2] = t * e, i) : (i[0] = 0, i[1] = 0, i[2] = 0, i)
	}, vec3.lerp = function(t, e, i, r) {
		return r || (r = t), r[0] = t[0] + i * (e[0] - t[0]), r[1] = t[1] + i * (e[1] - t[1]), r[2] = t[2] + i * (e[2] - t[2]), r
	}, vec3.str = function(t) {
		return "[" + t[0] + ", " + t[1] + ", " + t[2] + "]"
	}, mat3.create = function(t) {
		var e = new MatrixArray(9);
		return t && (e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8]), e
	}, mat3.set = function(t, e) {
		return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e
	}, mat3.identity = function(t) {
		return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t
	}, mat3.transpose = function(t, e) {
		if (!e || t === e) {
			var i = t[1],
				r = t[2],
				s = t[5];
			return t[1] = t[3], t[2] = t[6], t[3] = i, t[5] = t[7], t[6] = r, t[7] = s, t
		}
		return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], e
	}, mat3.toMat4 = function(t, e) {
		return e || (e = mat4.create()), e[15] = 1, e[14] = 0, e[13] = 0, e[12] = 0, e[11] = 0, e[10] = t[8], e[9] = t[7], e[8] = t[6], e[7] = 0, e[6] = t[5], e[5] = t[4], e[4] = t[3], e[3] = 0, e[2] = t[2], e[1] = t[1], e[0] = t[0], e
	}, mat3.str = function(t) {
		return "[" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + "]"
	}, mat4.create = function(t) {
		var e = new MatrixArray(16);
		return t && (e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e[9] = t[9], e[10] = t[10], e[11] = t[11], e[12] = t[12], e[13] = t[13], e[14] = t[14], e[15] = t[15]), e
	}, mat4.set = function(t, e) {
		return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e[9] = t[9], e[10] = t[10], e[11] = t[11], e[12] = t[12], e[13] = t[13], e[14] = t[14], e[15] = t[15], e
	}, mat4.identity = function(t) {
		return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
	}, mat4.transpose = function(t, e) {
		if (!e || t === e) {
			var i = t[1],
				r = t[2],
				s = t[3],
				n = t[6],
				a = t[7],
				o = t[11];
			return t[1] = t[4], t[2] = t[8], t[3] = t[12], t[4] = i, t[6] = t[9], t[7] = t[13], t[8] = r, t[9] = n, t[11] = t[14], t[12] = s, t[13] = a, t[14] = o, t
		}
		return e[0] = t[0], e[1] = t[4], e[2] = t[8], e[3] = t[12], e[4] = t[1], e[5] = t[5], e[6] = t[9], e[7] = t[13], e[8] = t[2], e[9] = t[6], e[10] = t[10], e[11] = t[14], e[12] = t[3], e[13] = t[7], e[14] = t[11], e[15] = t[15], e
	}, mat4.determinant = function(t) {
		var e = t[0],
			i = t[1],
			r = t[2],
			s = t[3],
			n = t[4],
			a = t[5],
			o = t[6],
			h = t[7],
			c = t[8],
			l = t[9],
			u = t[10],
			p = t[11],
			d = t[12],
			f = t[13],
			g = t[14],
			t = t[15];
		return d * l * o * s - c * f * o * s - d * a * u * s + n * f * u * s + c * a * g * s - n * l * g * s - d * l * r * h + c * f * r * h + d * i * u * h - e * f * u * h - c * i * g * h + e * l * g * h + d * a * r * p - n * f * r * p - d * i * o * p + e * f * o * p + n * i * g * p - e * a * g * p - c * a * r * t + n * l * r * t + c * i * o * t - e * l * o * t - n * i * u * t + e * a * u * t
	}, mat4.inverse = function(t, e) {
		e || (e = t);
		var i = t[0],
			r = t[1],
			s = t[2],
			n = t[3],
			a = t[4],
			o = t[5],
			h = t[6],
			c = t[7],
			l = t[8],
			u = t[9],
			p = t[10],
			d = t[11],
			f = t[12],
			g = t[13],
			m = t[14],
			y = t[15],
			_ = i * o - r * a,
			v = i * h - s * a,
			b = i * c - n * a,
			w = r * h - s * o,
			x = r * c - n * o,
			S = s * c - n * h,
			T = l * g - u * f,
			C = l * m - p * f,
			k = l * y - d * f,
			O = u * m - p * g,
			A = u * y - d * g,
			E = p * y - d * m,
			I = 1 / (_ * E - v * A + b * O + w * k - x * C + S * T);
		return e[0] = (o * E - h * A + c * O) * I, e[1] = (-r * E + s * A - n * O) * I, e[2] = (g * S - m * x + y * w) * I, e[3] = (-u * S + p * x - d * w) * I, e[4] = (-a * E + h * k - c * C) * I, e[5] = (i * E - s * k + n * C) * I, e[6] = (-f * S + m * b - y * v) * I, e[7] = (l * S - p * b + d * v) * I, e[8] = (a * A - o * k + c * T) * I, e[9] = (-i * A + r * k - n * T) * I, e[10] = (f * x - g * b + y * _) * I, e[11] = (-l * x + u * b - d * _) * I, e[12] = (-a * O + o * C - h * T) * I, e[13] = (i * O - r * C + s * T) * I, e[14] = (-f * w + g * v - m * _) * I, e[15] = (l * w - u * v + p * _) * I, e
	}, mat4.toRotationMat = function(t, e) {
		return e || (e = mat4.create()), e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e[9] = t[9], e[10] = t[10], e[11] = t[11], e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e
	}, mat4.toMat3 = function(t, e) {
		return e || (e = mat3.create()), e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[4], e[4] = t[5], e[5] = t[6], e[6] = t[8], e[7] = t[9], e[8] = t[10], e
	}, mat4.toInverseMat3 = function(t, e) {
		var i = t[0],
			r = t[1],
			s = t[2],
			n = t[4],
			a = t[5],
			o = t[6],
			h = t[8],
			c = t[9],
			l = t[10],
			u = l * a - o * c,
			p = -l * n + o * h,
			d = c * n - a * h,
			f = i * u + r * p + s * d;
		return f ? (f = 1 / f, e || (e = mat3.create()), e[0] = u * f, e[1] = (-l * r + s * c) * f, e[2] = (o * r - s * a) * f, e[3] = p * f, e[4] = (l * i - s * h) * f, e[5] = (-o * i + s * n) * f, e[6] = d * f, e[7] = (-c * i + r * h) * f, e[8] = (a * i - r * n) * f, e) : null
	}, mat4.multiply = function(t, e, i) {
		i || (i = t);
		var r = t[0],
			s = t[1],
			n = t[2],
			a = t[3],
			o = t[4],
			h = t[5],
			c = t[6],
			l = t[7],
			u = t[8],
			p = t[9],
			d = t[10],
			f = t[11],
			g = t[12],
			m = t[13],
			y = t[14],
			t = t[15],
			_ = e[0],
			v = e[1],
			b = e[2],
			w = e[3],
			x = e[4],
			S = e[5],
			T = e[6],
			C = e[7],
			k = e[8],
			O = e[9],
			A = e[10],
			E = e[11],
			I = e[12],
			P = e[13],
			L = e[14],
			e = e[15];
		return i[0] = _ * r + v * o + b * u + w * g, i[1] = _ * s + v * h + b * p + w * m, i[2] = _ * n + v * c + b * d + w * y, i[3] = _ * a + v * l + b * f + w * t, i[4] = x * r + S * o + T * u + C * g, i[5] = x * s + S * h + T * p + C * m, i[6] = x * n + S * c + T * d + C * y, i[7] = x * a + S * l + T * f + C * t, i[8] = k * r + O * o + A * u + E * g, i[9] = k * s + O * h + A * p + E * m, i[10] = k * n + O * c + A * d + E * y, i[11] = k * a + O * l + A * f + E * t, i[12] = I * r + P * o + L * u + e * g, i[13] = I * s + P * h + L * p + e * m, i[14] = I * n + P * c + L * d + e * y, i[15] = I * a + P * l + L * f + e * t, i
	}, mat4.multiplyVec3 = function(t, e, i) {
		i || (i = e);
		var r = e[0],
			s = e[1],
			e = e[2];
		return i[0] = t[0] * r + t[4] * s + t[8] * e + t[12], i[1] = t[1] * r + t[5] * s + t[9] * e + t[13], i[2] = t[2] * r + t[6] * s + t[10] * e + t[14], i
	}, mat4.multiplyVec4 = function(t, e, i) {
		i || (i = e);
		var r = e[0],
			s = e[1],
			n = e[2],
			e = e[3];
		return i[0] = t[0] * r + t[4] * s + t[8] * n + t[12] * e, i[1] = t[1] * r + t[5] * s + t[9] * n + t[13] * e, i[2] = t[2] * r + t[6] * s + t[10] * n + t[14] * e, i[3] = t[3] * r + t[7] * s + t[11] * n + t[15] * e, i
	}, mat4.translate = function(t, e, i) {
		var r, s, n, a, o, h, c, l, u, p, d, f, g = e[0],
			m = e[1],
			e = e[2];
		return i && t !== i ? (r = t[0], s = t[1], n = t[2], a = t[3], o = t[4], h = t[5], c = t[6], l = t[7], u = t[8], p = t[9], d = t[10], f = t[11], i[0] = r, i[1] = s, i[2] = n, i[3] = a, i[4] = o, i[5] = h, i[6] = c, i[7] = l, i[8] = u, i[9] = p, i[10] = d, i[11] = f, i[12] = r * g + o * m + u * e + t[12], i[13] = s * g + h * m + p * e + t[13], i[14] = n * g + c * m + d * e + t[14], i[15] = a * g + l * m + f * e + t[15], i) : (t[12] = t[0] * g + t[4] * m + t[8] * e + t[12], t[13] = t[1] * g + t[5] * m + t[9] * e + t[13], t[14] = t[2] * g + t[6] * m + t[10] * e + t[14], t[15] = t[3] * g + t[7] * m + t[11] * e + t[15], t)
	}, mat4.scale = function(t, e, i) {
		var r = e[0],
			s = e[1],
			e = e[2];
		return i && t !== i ? (i[0] = t[0] * r, i[1] = t[1] * r, i[2] = t[2] * r, i[3] = t[3] * r, i[4] = t[4] * s, i[5] = t[5] * s, i[6] = t[6] * s, i[7] = t[7] * s, i[8] = t[8] * e, i[9] = t[9] * e, i[10] = t[10] * e, i[11] = t[11] * e, i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15], i) : (t[0] *= r, t[1] *= r, t[2] *= r, t[3] *= r, t[4] *= s, t[5] *= s, t[6] *= s, t[7] *= s, t[8] *= e, t[9] *= e, t[10] *= e, t[11] *= e, t)
	}, mat4.rotate = function(t, e, i, r) {
		var s, n, a, o, h, c, l, u, p, d, f, g, m, y, _, v, b, w, x, S, T = i[0],
			C = i[1],
			i = i[2],
			k = Math.sqrt(T * T + C * C + i * i);
		return k ? (1 !== k && (k = 1 / k, T *= k, C *= k, i *= k), s = Math.sin(e), n = Math.cos(e), a = 1 - n, e = t[0], k = t[1], o = t[2], h = t[3], c = t[4], l = t[5], u = t[6], p = t[7], d = t[8], f = t[9], g = t[10], m = t[11], y = T * T * a + n, _ = C * T * a + i * s, v = i * T * a - C * s, b = T * C * a - i * s, w = C * C * a + n, x = i * C * a + T * s, S = T * i * a + C * s, T = C * i * a - T * s, C = i * i * a + n, r ? t !== r && (r[12] = t[12], r[13] = t[13], r[14] = t[14], r[15] = t[15]) : r = t, r[0] = e * y + c * _ + d * v, r[1] = k * y + l * _ + f * v, r[2] = o * y + u * _ + g * v, r[3] = h * y + p * _ + m * v, r[4] = e * b + c * w + d * x, r[5] = k * b + l * w + f * x, r[6] = o * b + u * w + g * x, r[7] = h * b + p * w + m * x, r[8] = e * S + c * T + d * C, r[9] = k * S + l * T + f * C, r[10] = o * S + u * T + g * C, r[11] = h * S + p * T + m * C, r) : null
	}, mat4.rotateX = function(t, e, i) {
		var r = Math.sin(e),
			e = Math.cos(e),
			s = t[4],
			n = t[5],
			a = t[6],
			o = t[7],
			h = t[8],
			c = t[9],
			l = t[10],
			u = t[11];
		return i ? t !== i && (i[0] = t[0], i[1] = t[1], i[2] = t[2], i[3] = t[3], i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15]) : i = t, i[4] = s * e + h * r, i[5] = n * e + c * r, i[6] = a * e + l * r, i[7] = o * e + u * r, i[8] = s * -r + h * e, i[9] = n * -r + c * e, i[10] = a * -r + l * e, i[11] = o * -r + u * e, i
	}, mat4.rotateY = function(t, e, i) {
		var r = Math.sin(e),
			e = Math.cos(e),
			s = t[0],
			n = t[1],
			a = t[2],
			o = t[3],
			h = t[8],
			c = t[9],
			l = t[10],
			u = t[11];
		return i ? t !== i && (i[4] = t[4], i[5] = t[5], i[6] = t[6], i[7] = t[7], i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15]) : i = t, i[0] = s * e + h * -r, i[1] = n * e + c * -r, i[2] = a * e + l * -r, i[3] = o * e + u * -r, i[8] = s * r + h * e, i[9] = n * r + c * e, i[10] = a * r + l * e, i[11] = o * r + u * e, i
	}, mat4.rotateZ = function(t, e, i) {
		var r = Math.sin(e),
			e = Math.cos(e),
			s = t[0],
			n = t[1],
			a = t[2],
			o = t[3],
			h = t[4],
			c = t[5],
			l = t[6],
			u = t[7];
		return i ? t !== i && (i[8] = t[8], i[9] = t[9], i[10] = t[10], i[11] = t[11], i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15]) : i = t, i[0] = s * e + h * r, i[1] = n * e + c * r, i[2] = a * e + l * r, i[3] = o * e + u * r, i[4] = s * -r + h * e, i[5] = n * -r + c * e, i[6] = a * -r + l * e, i[7] = o * -r + u * e, i
	}, mat4.frustum = function(t, e, i, r, s, n, a) {
		a || (a = mat4.create());
		var o = e - t,
			h = r - i,
			c = n - s;
		return a[0] = 2 * s / o, a[1] = 0, a[2] = 0, a[3] = 0, a[4] = 0, a[5] = 2 * s / h, a[6] = 0, a[7] = 0, a[8] = (e + t) / o, a[9] = (r + i) / h, a[10] = -(n + s) / c, a[11] = -1, a[12] = 0, a[13] = 0, a[14] = -(n * s * 2) / c, a[15] = 0, a
	}, mat4.perspective = function(t, e, i, r, s) {
		return t = i * Math.tan(t * Math.PI / 360), e *= t, mat4.frustum(-e, e, -t, t, i, r, s)
	}, mat4.ortho = function(t, e, i, r, s, n, a) {
		a || (a = mat4.create());
		var o = e - t,
			h = r - i,
			c = n - s;
		return a[0] = 2 / o, a[1] = 0, a[2] = 0, a[3] = 0, a[4] = 0, a[5] = 2 / h, a[6] = 0, a[7] = 0, a[8] = 0, a[9] = 0, a[10] = -2 / c, a[11] = 0, a[12] = -(t + e) / o, a[13] = -(r + i) / h, a[14] = -(n + s) / c, a[15] = 1, a
	}, mat4.lookAt = function(t, e, i, r) {
		r || (r = mat4.create());
		var s, n, a, o, h, c, l, u, p = t[0],
			d = t[1],
			t = t[2];
		return n = i[0], a = i[1], s = i[2], i = e[1], c = e[2], p === e[0] && d === i && t === c ? mat4.identity(r) : (i = p - e[0], c = d - e[1], l = t - e[2], u = 1 / Math.sqrt(i * i + c * c + l * l), i *= u, c *= u, l *= u, e = a * l - s * c, s = s * i - n * l, n = n * c - a * i, (u = Math.sqrt(e * e + s * s + n * n)) ? (u = 1 / u, e *= u, s *= u, n *= u) : n = s = e = 0, a = c * n - l * s, o = l * e - i * n, h = i * s - c * e, (u = Math.sqrt(a * a + o * o + h * h)) ? (u = 1 / u, a *= u, o *= u, h *= u) : h = o = a = 0, r[0] = e, r[1] = a, r[2] = i, r[3] = 0, r[4] = s, r[5] = o, r[6] = c, r[7] = 0, r[8] = n, r[9] = h, r[10] = l, r[11] = 0, r[12] = -(e * p + s * d + n * t), r[13] = -(a * p + o * d + h * t), r[14] = -(i * p + c * d + l * t), r[15] = 1, r)
	}, mat4.fromRotationTranslation = function(t, e, i) {
		i || (i = mat4.create());
		var r = t[0],
			s = t[1],
			n = t[2],
			a = t[3],
			o = r + r,
			h = s + s,
			c = n + n,
			t = r * o,
			l = r * h;
		r *= c;
		var u = s * h;
		return s *= c, n *= c, o *= a, h *= a, a *= c, i[0] = 1 - (u + n), i[1] = l + a, i[2] = r - h, i[3] = 0, i[4] = l - a, i[5] = 1 - (t + n), i[6] = s + o, i[7] = 0, i[8] = r + h, i[9] = s - o, i[10] = 1 - (t + u), i[11] = 0, i[12] = e[0], i[13] = e[1], i[14] = e[2], i[15] = 1, i
	}, mat4.str = function(t) {
		return "[" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + "]"
	}, quat4.create = function(t) {
		var e = new MatrixArray(4);
		return t && (e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3]), e
	}, quat4.set = function(t, e) {
		return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e
	}, quat4.calculateW = function(t, e) {
		var i = t[0],
			r = t[1],
			s = t[2];
		return e && t !== e ? (e[0] = i, e[1] = r, e[2] = s, e[3] = -Math.sqrt(Math.abs(1 - i * i - r * r - s * s)), e) : (t[3] = -Math.sqrt(Math.abs(1 - i * i - r * r - s * s)), t)
	}, quat4.inverse = function(t, e) {
		return e && t !== e ? (e[0] = -t[0], e[1] = -t[1], e[2] = -t[2], e[3] = t[3], e) : (t[0] *= -1, t[1] *= -1, t[2] *= -1, t)
	}, quat4.length = function(t) {
		var e = t[0],
			i = t[1],
			r = t[2],
			t = t[3];
		return Math.sqrt(e * e + i * i + r * r + t * t)
	}, quat4.normalize = function(t, e) {
		e || (e = t);
		var i = t[0],
			r = t[1],
			s = t[2],
			n = t[3],
			a = Math.sqrt(i * i + r * r + s * s + n * n);
		return 0 === a ? (e[0] = 0, e[1] = 0, e[2] = 0, e[3] = 0, e) : (a = 1 / a, e[0] = i * a, e[1] = r * a, e[2] = s * a, e[3] = n * a, e)
	}, quat4.multiply = function(t, e, i) {
		i || (i = t);
		var r = t[0],
			s = t[1],
			n = t[2],
			t = t[3],
			a = e[0],
			o = e[1],
			h = e[2],
			e = e[3];
		return i[0] = r * e + t * a + s * h - n * o, i[1] = s * e + t * o + n * a - r * h, i[2] = n * e + t * h + r * o - s * a, i[3] = t * e - r * a - s * o - n * h, i
	}, quat4.multiplyVec3 = function(t, e, i) {
		i || (i = e);
		var r = e[0],
			s = e[1],
			n = e[2],
			e = t[0],
			a = t[1],
			o = t[2],
			t = t[3],
			h = t * r + a * n - o * s,
			c = t * s + o * r - e * n,
			l = t * n + e * s - a * r,
			r = -e * r - a * s - o * n;
		return i[0] = h * t + r * -e + c * -o - l * -a, i[1] = c * t + r * -a + l * -e - h * -o, i[2] = l * t + r * -o + h * -a - c * -e, i
	}, quat4.toMat3 = function(t, e) {
		e || (e = mat3.create());
		var i = t[0],
			r = t[1],
			s = t[2],
			n = t[3],
			a = i + i,
			o = r + r,
			h = s + s,
			c = i * a,
			l = i * o;
		i *= h;
		var u = r * o;
		return r *= h, s *= h, a *= n, o *= n, n *= h, e[0] = 1 - (u + s), e[1] = l + n, e[2] = i - o, e[3] = l - n, e[4] = 1 - (c + s), e[5] = r + a, e[6] = i + o, e[7] = r - a, e[8] = 1 - (c + u), e
	}, quat4.toMat4 = function(t, e) {
		e || (e = mat4.create());
		var i = t[0],
			r = t[1],
			s = t[2],
			n = t[3],
			a = i + i,
			o = r + r,
			h = s + s,
			c = i * a,
			l = i * o;
		i *= h;
		var u = r * o;
		return r *= h, s *= h, a *= n, o *= n, n *= h, e[0] = 1 - (u + s), e[1] = l + n, e[2] = i - o, e[3] = 0, e[4] = l - n, e[5] = 1 - (c + s), e[6] = r + a, e[7] = 0, e[8] = i + o, e[9] = r - a, e[10] = 1 - (c + u), e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e
	}, quat4.slerp = function(t, e, i, r) {
		r || (r = t);
		var s, n, a = t[0] * e[0] + t[1] * e[1] + t[2] * e[2] + t[3] * e[3];
		return Math.abs(a) >= 1 ? (r !== t && (r[0] = t[0], r[1] = t[1], r[2] = t[2], r[3] = t[3]), r) : (s = Math.acos(a), n = Math.sqrt(1 - a * a), Math.abs(n) < .001 ? (r[0] = .5 * t[0] + .5 * e[0], r[1] = .5 * t[1] + .5 * e[1], r[2] = .5 * t[2] + .5 * e[2], r[3] = .5 * t[3] + .5 * e[3], r) : (a = Math.sin((1 - i) * s) / n, i = Math.sin(i * s) / n, r[0] = t[0] * a + e[0] * i, r[1] = t[1] * a + e[1] * i, r[2] = t[2] * a + e[2] * i, r[3] = t[3] * a + e[3] * i, r))
	}, quat4.str = function(t) {
		return "[" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + "]"
	},
	function() {
		function t(t, e, i) {
			this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent), this.width = 0, this.height = 0, this.enableFrontToBack = !!i, this.isEarlyZPass = !1, this.isBatchInEarlyZPass = !1, this.currentZ = 0, this.zNear = 1, this.zFar = 1e3, this.zIncrement = (this.zFar - this.zNear) / 32768, this.zA = this.zFar / (this.zFar - this.zNear), this.zB = this.zFar * this.zNear / (this.zNear - this.zFar), this.kzA = 65536 * this.zA, this.kzB = 65536 * this.zB, this.cam = vec3.create([0, 0, 100]), this.look = vec3.create([0, 0, 0]), this.up = vec3.create([0, 1, 0]), this.worldScale = vec3.create([1, 1, 1]), this.enable_mipmaps = !0, this.matP = mat4.create(), this.matMV = mat4.create(), this.lastMV = mat4.create(), this.currentMV = mat4.create(), this.gl = t, this.initState()
		}

		function e(t, e, i) {
			this.gl = t, this.shaderProgram = e, this.name = i, this.locAPos = t.getAttribLocation(e, "aPos"), this.locATex = t.getAttribLocation(e, "aTex"), this.locMatP = t.getUniformLocation(e, "matP"), this.locMatMV = t.getUniformLocation(e, "matMV"), this.locOpacity = t.getUniformLocation(e, "opacity"), this.locColorFill = t.getUniformLocation(e, "colorFill"), this.locSamplerFront = t.getUniformLocation(e, "samplerFront"), this.locSamplerBack = t.getUniformLocation(e, "samplerBack"), this.locDestStart = t.getUniformLocation(e, "destStart"), this.locDestEnd = t.getUniformLocation(e, "destEnd"), this.locSeconds = t.getUniformLocation(e, "seconds"), this.locPixelWidth = t.getUniformLocation(e, "pixelWidth"), this.locPixelHeight = t.getUniformLocation(e, "pixelHeight"), this.locLayerScale = t.getUniformLocation(e, "layerScale"), this.locLayerAngle = t.getUniformLocation(e, "layerAngle"), this.locViewOrigin = t.getUniformLocation(e, "viewOrigin"), this.locScrollPos = t.getUniformLocation(e, "scrollPos"), this.hasAnyOptionalUniforms = !!(this.locPixelWidth || this.locPixelHeight || this.locSeconds || this.locSamplerBack || this.locDestStart || this.locDestEnd || this.locLayerScale || this.locLayerAngle || this.locViewOrigin || this.locScrollPos), this.lpPixelWidth = -999, this.lpPixelHeight = -999, this.lpOpacity = 1, this.lpDestStartX = 0, this.lpDestStartY = 0, this.lpDestEndX = 1, this.lpDestEndY = 1, this.lpLayerScale = 1, this.lpLayerAngle = 0, this.lpViewOriginX = 0, this.lpViewOriginY = 0, this.lpScrollPosX = 0, this.lpScrollPosY = 0, this.lpSeconds = 0, this.lastCustomParams = [], this.lpMatMV = mat4.create(), this.locOpacity && t.uniform1f(this.locOpacity, 1), this.locColorFill && t.uniform4f(this.locColorFill, 1, 1, 1, 1), this.locSamplerFront && t.uniform1i(this.locSamplerFront, 0), this.locSamplerBack && t.uniform1i(this.locSamplerBack, 1), this.locDestStart && t.uniform2f(this.locDestStart, 0, 0), this.locDestEnd && t.uniform2f(this.locDestEnd, 1, 1), this.locLayerScale && t.uniform1f(this.locLayerScale, 1), this.locLayerAngle && t.uniform1f(this.locLayerAngle, 0), this.locViewOrigin && t.uniform2f(this.locViewOrigin, 0, 0), this.locScrollPos && t.uniform2f(this.locScrollPos, 0, 0), this.locSeconds && t.uniform1f(this.locSeconds, 0), this.hasCurrentMatMV = !1
		}

		function i(t, e) {
			return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8] && t[9] === e[9] && t[10] === e[10] && t[11] === e[11] && t[12] === e[12] && t[13] === e[13] && t[14] === e[14] && t[15] === e[15]
		}

		function r(t, e) {
			this.type = t, this.glwrap = e, this.gl = e.gl, this.opacityParam = 0, this.startIndex = 0, this.indexCount = 0, this.texParam = null, this.mat4param = null, this.shaderParams = [], cr.seal(this)
		}
		var s = 8e3,
			n = s / 2 * 3,
			a = 8e3,
			o = 4,
			h = 0,
			c = 1,
			l = 2,
			u = 3,
			p = 4,
			d = 5,
			f = 6,
			g = 7,
			m = 8,
			y = 9,
			_ = 10,
			v = 12,
			b = 13,
			w = 14,
			x = mat4.create();
		t.prototype.initState = function() {
			var t, e, i = this.gl;
			for (this.lastOpacity = 1, this.lastTexture0 = null, this.lastTexture1 = null, this.currentOpacity = 1, i.clearColor(0, 0, 0, 0), i.clear(i.COLOR_BUFFER_BIT), i.enable(i.BLEND), i.blendFunc(i.ONE, i.ONE_MINUS_SRC_ALPHA), i.disable(i.CULL_FACE), i.disable(i.STENCIL_TEST), i.disable(i.DITHER), this.enableFrontToBack ? (i.enable(i.DEPTH_TEST), i.depthFunc(i.LEQUAL)) : i.disable(i.DEPTH_TEST), this.maxTextureSize = i.getParameter(i.MAX_TEXTURE_SIZE), this.lastSrcBlend = i.ONE, this.lastDestBlend = i.ONE_MINUS_SRC_ALPHA, this.vertexData = new Float32Array(s * (this.enableFrontToBack ? 3 : 2)), this.texcoordData = new Float32Array(2 * s), this.pointData = new Float32Array(4 * a), this.pointBuffer = i.createBuffer(), i.bindBuffer(i.ARRAY_BUFFER, this.pointBuffer), i.bufferData(i.ARRAY_BUFFER, this.pointData.byteLength, i.DYNAMIC_DRAW), this.vertexBuffers = new Array(o), this.texcoordBuffers = new Array(o), t = 0; o > t; t++) this.vertexBuffers[t] = i.createBuffer(), i.bindBuffer(i.ARRAY_BUFFER, this.vertexBuffers[t]), i.bufferData(i.ARRAY_BUFFER, this.vertexData.byteLength, i.DYNAMIC_DRAW), this.texcoordBuffers[t] = i.createBuffer(), i.bindBuffer(i.ARRAY_BUFFER, this.texcoordBuffers[t]), i.bufferData(i.ARRAY_BUFFER, this.texcoordData.byteLength, i.DYNAMIC_DRAW);
			this.curBuffer = 0, this.indexBuffer = i.createBuffer(), i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
			var r = new Uint16Array(n);
			t = 0, e = n;
			for (var h = 0; e > t;) r[t++] = h, r[t++] = h + 1, r[t++] = h + 2, r[t++] = h, r[t++] = h + 2, r[t++] = h + 3, h += 4;
			i.bufferData(i.ELEMENT_ARRAY_BUFFER, r, i.STATIC_DRAW), this.vertexPtr = 0, this.texPtr = 0, this.pointPtr = 0;
			var c, l;
			this.shaderPrograms = [], c = ["varying mediump vec2 vTex;", "uniform lowp float opacity;", "uniform lowp sampler2D samplerFront;", "void main(void) {", "	gl_FragColor = texture2D(samplerFront, vTex);", "	gl_FragColor *= opacity;", "}"].join("\n"), l = this.enableFrontToBack ? ["attribute highp vec3 aPos;", "attribute mediump vec2 aTex;", "varying mediump vec2 vTex;", "uniform highp mat4 matP;", "uniform highp mat4 matMV;", "void main(void) {", "	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, aPos.z, 1.0);", "	vTex = aTex;", "}"].join("\n") : ["attribute highp vec2 aPos;", "attribute mediump vec2 aTex;", "varying mediump vec2 vTex;", "uniform highp mat4 matP;", "uniform highp mat4 matMV;", "void main(void) {", "	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);", "	vTex = aTex;", "}"].join("\n");
			var u = this.createShaderProgram({
				src: c
			}, l, "<default>");
			this.shaderPrograms.push(u), c = ["uniform mediump sampler2D samplerFront;", "varying lowp float opacity;", "void main(void) {", "	gl_FragColor = texture2D(samplerFront, gl_PointCoord);", "	gl_FragColor *= opacity;", "}"].join("\n");
			var p = ["attribute vec4 aPos;", "varying float opacity;", "uniform mat4 matP;", "uniform mat4 matMV;", "void main(void) {", "	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);", "	gl_PointSize = aPos.z;", "	opacity = aPos.w;", "}"].join("\n");
			u = this.createShaderProgram({
				src: c
			}, p, "<point>"), this.shaderPrograms.push(u), c = ["varying mediump vec2 vTex;", "uniform lowp sampler2D samplerFront;", "void main(void) {", "	if (texture2D(samplerFront, vTex).a < 1.0)", "		discard;", "}"].join("\n");
			var u = this.createShaderProgram({
				src: c
			}, l, "<earlyz>");
			this.shaderPrograms.push(u), c = ["uniform lowp vec4 colorFill;", "void main(void) {", "	gl_FragColor = colorFill;", "}"].join("\n");
			var u = this.createShaderProgram({
				src: c
			}, l, "<fill>");
			this.shaderPrograms.push(u);
			for (var d in cr.shaders) cr.shaders.hasOwnProperty(d) && this.shaderPrograms.push(this.createShaderProgram(cr.shaders[d], l, d));
			i.activeTexture(i.TEXTURE0), i.bindTexture(i.TEXTURE_2D, null), this.batch = [], this.batchPtr = 0, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1, this.lastProgram = -1, this.currentProgram = -1, this.currentShader = null, this.fbo = i.createFramebuffer(), this.renderToTex = null, this.depthBuffer = null, this.attachedDepthBuffer = !1, this.enableFrontToBack && (this.depthBuffer = i.createRenderbuffer()), this.tmpVec3 = vec3.create([0, 0, 0]);
			var f = i.getParameter(i.ALIASED_POINT_SIZE_RANGE);
			this.minPointSize = f[0], this.maxPointSize = f[1], this.maxPointSize > 2048 && (this.maxPointSize = 2048), this.switchProgram(0), cr.seal(this)
		}, e.prototype.updateMatMV = function(t) {
			i(this.lpMatMV, t) || (mat4.set(t, this.lpMatMV), this.gl.uniformMatrix4fv(this.locMatMV, !1, t))
		}, t.prototype.createShaderProgram = function(t, i, r) {
			var s = this.gl,
				n = s.createShader(s.FRAGMENT_SHADER);
			if (s.shaderSource(n, t.src), s.compileShader(n), !s.getShaderParameter(n, s.COMPILE_STATUS)) return s.deleteShader(n), null;
			var a = s.createShader(s.VERTEX_SHADER);
			if (s.shaderSource(a, i), s.compileShader(a), !s.getShaderParameter(a, s.COMPILE_STATUS)) return s.deleteShader(n), s.deleteShader(a), null;
			var o = s.createProgram();
			if (s.attachShader(o, n), s.attachShader(o, a), s.linkProgram(o), !s.getProgramParameter(o, s.LINK_STATUS)) return s.deleteShader(n), s.deleteShader(a), s.deleteProgram(o), null;
			s.useProgram(o), s.deleteShader(n), s.deleteShader(a);
			var h = new e(s, o, r);
			h.extendBoxHorizontal = t.extendBoxHorizontal || 0, h.extendBoxVertical = t.extendBoxVertical || 0, h.crossSampling = !!t.crossSampling, h.preservesOpaqueness = !!t.preservesOpaqueness, h.animated = !!t.animated, h.parameters = t.parameters || [];
			var c, l;
			for (c = 0, l = h.parameters.length; l > c; c++) h.parameters[c][1] = s.getUniformLocation(o, h.parameters[c][0]), h.lastCustomParams.push(0), s.uniform1f(h.parameters[c][1], 0);
			return cr.seal(h), h
		}, t.prototype.getShaderIndex = function(t) {
			var e, i;
			for (e = 0, i = this.shaderPrograms.length; i > e; e++)
				if (this.shaderPrograms[e].name === t) return e;
			return -1
		}, t.prototype.project = function(t, e, i) {
			var r = this.matMV,
				s = this.matP,
				n = [0, 0, 0, 0, 0, 0, 0, 0];
			n[0] = r[0] * t + r[4] * e + r[12], n[1] = r[1] * t + r[5] * e + r[13], n[2] = r[2] * t + r[6] * e + r[14], n[3] = r[3] * t + r[7] * e + r[15], n[4] = s[0] * n[0] + s[4] * n[1] + s[8] * n[2] + s[12] * n[3], n[5] = s[1] * n[0] + s[5] * n[1] + s[9] * n[2] + s[13] * n[3], n[6] = s[2] * n[0] + s[6] * n[1] + s[10] * n[2] + s[14] * n[3], n[7] = -n[2], 0 !== n[7] && (n[7] = 1 / n[7], n[4] *= n[7], n[5] *= n[7], n[6] *= n[7], i[0] = (.5 * n[4] + .5) * this.width, i[1] = (.5 * n[5] + .5) * this.height)
		}, t.prototype.setSize = function(t, e, i) {
			if (this.width !== t || this.height !== e || i) {
				this.endBatch();
				var r = this.gl;
				if (this.width = t, this.height = e, r.viewport(0, 0, t, e), mat4.lookAt(this.cam, this.look, this.up, this.matMV), this.enableFrontToBack) mat4.ortho(-t / 2, t / 2, e / 2, -e / 2, this.zNear, this.zFar, this.matP), this.worldScale[0] = 1, this.worldScale[1] = 1;
				else {
					mat4.perspective(45, t / e, this.zNear, this.zFar, this.matP);
					var s = [0, 0],
						n = [0, 0];
					this.project(0, 0, s), this.project(1, 1, n), this.worldScale[0] = 1 / (n[0] - s[0]), this.worldScale[1] = -1 / (n[1] - s[1])
				}
				var a, o, h;
				for (a = 0, o = this.shaderPrograms.length; o > a; a++) h = this.shaderPrograms[a], h.hasCurrentMatMV = !1, h.locMatP && (r.useProgram(h.shaderProgram), r.uniformMatrix4fv(h.locMatP, !1, this.matP));
				r.useProgram(this.shaderPrograms[this.lastProgram].shaderProgram), r.bindTexture(r.TEXTURE_2D, null), r.activeTexture(r.TEXTURE1), r.bindTexture(r.TEXTURE_2D, null), r.activeTexture(r.TEXTURE0), this.lastTexture0 = null, this.lastTexture1 = null, this.depthBuffer && (r.bindFramebuffer(r.FRAMEBUFFER, this.fbo), r.bindRenderbuffer(r.RENDERBUFFER, this.depthBuffer), r.renderbufferStorage(r.RENDERBUFFER, r.DEPTH_COMPONENT16, this.width, this.height), this.attachedDepthBuffer || (r.framebufferRenderbuffer(r.FRAMEBUFFER, r.DEPTH_ATTACHMENT, r.RENDERBUFFER, this.depthBuffer), this.attachedDepthBuffer = !0), r.bindRenderbuffer(r.RENDERBUFFER, null), r.bindFramebuffer(r.FRAMEBUFFER, null), this.renderToTex = null)
			}
		}, t.prototype.resetModelView = function() {
			mat4.lookAt(this.cam, this.look, this.up, this.matMV), mat4.scale(this.matMV, this.worldScale)
		}, t.prototype.translate = function(t, e) {
			(0 !== t || 0 !== e) && (this.tmpVec3[0] = t, this.tmpVec3[1] = e, this.tmpVec3[2] = 0, mat4.translate(this.matMV, this.tmpVec3))
		}, t.prototype.scale = function(t, e) {
			(1 !== t || 1 !== e) && (this.tmpVec3[0] = t, this.tmpVec3[1] = e, this.tmpVec3[2] = 1, mat4.scale(this.matMV, this.tmpVec3))
		}, t.prototype.rotateZ = function(t) {
			0 !== t && mat4.rotateZ(this.matMV, t)
		}, t.prototype.updateModelView = function() {
			if (!i(this.lastMV, this.matMV)) {
				var t = this.pushBatch();
				t.type = d, t.mat4param ? mat4.set(this.matMV, t.mat4param) : t.mat4param = mat4.create(this.matMV), mat4.set(this.matMV, this.lastMV), this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.setEarlyZIndex = function(t) {
			this.enableFrontToBack && (t > 32760 && (t = 32760), this.currentZ = this.cam[2] - this.zNear - t * this.zIncrement)
		}, r.prototype.doSetEarlyZPass = function() {
			var t = this.gl,
				e = this.glwrap;
			0 !== this.startIndex ? (t.depthMask(!0), t.colorMask(!1, !1, !1, !1), t.disable(t.BLEND), t.bindFramebuffer(t.FRAMEBUFFER, e.fbo), t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, null, 0), t.clear(t.DEPTH_BUFFER_BIT), t.bindFramebuffer(t.FRAMEBUFFER, null), e.isBatchInEarlyZPass = !0) : (t.depthMask(!1), t.colorMask(!0, !0, !0, !0), t.enable(t.BLEND), e.isBatchInEarlyZPass = !1)
		}, r.prototype.doSetTexture = function() {
			this.gl.bindTexture(this.gl.TEXTURE_2D, this.texParam)
		}, r.prototype.doSetTexture1 = function() {
			var t = this.gl;
			t.activeTexture(t.TEXTURE1), t.bindTexture(t.TEXTURE_2D, this.texParam), t.activeTexture(t.TEXTURE0)
		}, r.prototype.doSetOpacity = function() {
			var t = this.opacityParam,
				e = this.glwrap;
			e.currentOpacity = t;
			var i = e.currentShader;
			i.locOpacity && i.lpOpacity !== t && (i.lpOpacity = t, this.gl.uniform1f(i.locOpacity, t))
		}, r.prototype.doQuad = function() {
			this.gl.drawElements(this.gl.TRIANGLES, this.indexCount, this.gl.UNSIGNED_SHORT, this.startIndex)
		}, r.prototype.doSetBlend = function() {
			this.gl.blendFunc(this.startIndex, this.indexCount)
		}, r.prototype.doUpdateModelView = function() {
			var t, e, i, r = this.glwrap.shaderPrograms,
				s = this.glwrap.currentProgram;
			for (t = 0, e = r.length; e > t; t++) i = r[t], t === s && i.locMatMV ? (i.updateMatMV(this.mat4param), i.hasCurrentMatMV = !0) : i.hasCurrentMatMV = !1;
			mat4.set(this.mat4param, this.glwrap.currentMV)
		}, r.prototype.doRenderToTexture = function() {
			var t = this.gl,
				e = this.glwrap;
			this.texParam ? (e.lastTexture1 === this.texParam && (t.activeTexture(t.TEXTURE1), t.bindTexture(t.TEXTURE_2D, null), e.lastTexture1 = null, t.activeTexture(t.TEXTURE0)), t.bindFramebuffer(t.FRAMEBUFFER, e.fbo), e.isBatchInEarlyZPass || t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, this.texParam, 0)) : (e.enableFrontToBack || t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, null, 0), t.bindFramebuffer(t.FRAMEBUFFER, null))
		}, r.prototype.doClear = function() {
			var t = this.gl,
				e = this.startIndex;
			0 === e ? (t.clearColor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]), t.clear(t.COLOR_BUFFER_BIT)) : 1 === e ? (t.enable(t.SCISSOR_TEST), t.scissor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]), t.clearColor(0, 0, 0, 0), t.clear(t.COLOR_BUFFER_BIT), t.disable(t.SCISSOR_TEST)) : t.clear(t.DEPTH_BUFFER_BIT)
		}, r.prototype.doSetDepthTestEnabled = function() {
			var t = this.gl,
				e = this.startIndex;
			0 !== e ? t.enable(t.DEPTH_TEST) : t.disable(t.DEPTH_TEST)
		}, r.prototype.doPoints = function() {
			var t = this.gl,
				e = this.glwrap;
			e.enableFrontToBack && t.disable(t.DEPTH_TEST);
			var i = e.shaderPrograms[1];
			t.useProgram(i.shaderProgram), !i.hasCurrentMatMV && i.locMatMV && (i.updateMatMV(e.currentMV), i.hasCurrentMatMV = !0), t.enableVertexAttribArray(i.locAPos), t.bindBuffer(t.ARRAY_BUFFER, e.pointBuffer), t.vertexAttribPointer(i.locAPos, 4, t.FLOAT, !1, 0, 0), t.drawArrays(t.POINTS, this.startIndex / 4, this.indexCount), i = e.currentShader, t.useProgram(i.shaderProgram), i.locAPos >= 0 && (t.enableVertexAttribArray(i.locAPos), t.bindBuffer(t.ARRAY_BUFFER, e.vertexBuffers[e.curBuffer]), t.vertexAttribPointer(i.locAPos, e.enableFrontToBack ? 3 : 2, t.FLOAT, !1, 0, 0)), i.locATex >= 0 && (t.enableVertexAttribArray(i.locATex), t.bindBuffer(t.ARRAY_BUFFER, e.texcoordBuffers[e.curBuffer]), t.vertexAttribPointer(i.locATex, 2, t.FLOAT, !1, 0, 0)), e.enableFrontToBack && t.enable(t.DEPTH_TEST)
		}, r.prototype.doSetProgram = function() {
			var t = this.gl,
				e = this.glwrap,
				i = e.shaderPrograms[this.startIndex];
			e.currentProgram = this.startIndex, e.currentShader = i, t.useProgram(i.shaderProgram), !i.hasCurrentMatMV && i.locMatMV && (i.updateMatMV(e.currentMV), i.hasCurrentMatMV = !0), i.locOpacity && i.lpOpacity !== e.currentOpacity && (i.lpOpacity = e.currentOpacity, t.uniform1f(i.locOpacity, e.currentOpacity)), i.locAPos >= 0 && (t.enableVertexAttribArray(i.locAPos), t.bindBuffer(t.ARRAY_BUFFER, e.vertexBuffers[e.curBuffer]), t.vertexAttribPointer(i.locAPos, e.enableFrontToBack ? 3 : 2, t.FLOAT, !1, 0, 0)), i.locATex >= 0 && (t.enableVertexAttribArray(i.locATex), t.bindBuffer(t.ARRAY_BUFFER, e.texcoordBuffers[e.curBuffer]), t.vertexAttribPointer(i.locATex, 2, t.FLOAT, !1, 0, 0))
		}, r.prototype.doSetColor = function() {
			var t = this.glwrap.currentShader,
				e = this.mat4param;
			this.gl.uniform4f(t.locColorFill, e[0], e[1], e[2], e[3])
		}, r.prototype.doSetProgramParameters = function() {
			var t, e, i = this.glwrap.currentShader,
				r = this.gl,
				s = this.mat4param;
			i.locSamplerBack && this.glwrap.lastTexture1 !== this.texParam && (r.activeTexture(r.TEXTURE1), r.bindTexture(r.TEXTURE_2D, this.texParam), this.glwrap.lastTexture1 = this.texParam, r.activeTexture(r.TEXTURE0));
			var n, a = s[0];
			if (i.locPixelWidth && a !== i.lpPixelWidth && (i.lpPixelWidth = a, r.uniform1f(i.locPixelWidth, a)), a = s[1], i.locPixelHeight && a !== i.lpPixelHeight && (i.lpPixelHeight = a, r.uniform1f(i.locPixelHeight, a)), a = s[2], n = s[3], !i.locDestStart || a === i.lpDestStartX && n === i.lpDestStartY || (i.lpDestStartX = a, i.lpDestStartY = n, r.uniform2f(i.locDestStart, a, n)), a = s[4], n = s[5], !i.locDestEnd || a === i.lpDestEndX && n === i.lpDestEndY || (i.lpDestEndX = a, i.lpDestEndY = a, r.uniform2f(i.locDestEnd, a, n)), a = s[6], i.locLayerScale && a !== i.lpLayerScale && (i.lpLayerScale = a, r.uniform1f(i.locLayerScale, a)), a = s[7], i.locLayerAngle && a !== i.lpLayerAngle && (i.lpLayerAngle = a, r.uniform1f(i.locLayerAngle, a)), a = s[8], n = s[9], !i.locViewOrigin || a === i.lpViewOriginX && n === i.lpViewOriginY || (i.lpViewOriginX = a, i.lpViewOriginY = n, r.uniform2f(i.locViewOrigin, a, n)), a = s[10], n = s[11], !i.locScrollPos || a === i.lpScrollPosX && n === i.lpScrollPosY || (i.lpScrollPosX = a, i.lpScrollPosY = n, r.uniform2f(i.locScrollPos, a, n)), a = s[12], i.locSeconds && a !== i.lpSeconds && (i.lpSeconds = a, r.uniform1f(i.locSeconds, a)), i.parameters.length)
				for (t = 0, e = i.parameters.length; e > t; t++) a = this.shaderParams[t], a !== i.lastCustomParams[t] && (i.lastCustomParams[t] = a, r.uniform1f(i.parameters[t][1], a))
		}, t.prototype.pushBatch = function() {
			return this.batchPtr === this.batch.length && this.batch.push(new r(h, this)), this.batch[this.batchPtr++]
		}, t.prototype.endBatch = function() {
			if (0 !== this.batchPtr && !this.gl.isContextLost()) {
				var t = this.gl;
				if (this.pointPtr > 0 && (t.bindBuffer(t.ARRAY_BUFFER, this.pointBuffer), t.bufferSubData(t.ARRAY_BUFFER, 0, this.pointData.subarray(0, this.pointPtr)), e && e.locAPos >= 0 && "<point>" === e.name && t.vertexAttribPointer(e.locAPos, 4, t.FLOAT, !1, 0, 0)), this.vertexPtr > 0) {
					var e = this.currentShader;
					t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffers[this.curBuffer]), t.bufferSubData(t.ARRAY_BUFFER, 0, this.vertexData.subarray(0, this.vertexPtr)), e && e.locAPos >= 0 && "<point>" !== e.name && t.vertexAttribPointer(e.locAPos, this.enableFrontToBack ? 3 : 2, t.FLOAT, !1, 0, 0), t.bindBuffer(t.ARRAY_BUFFER, this.texcoordBuffers[this.curBuffer]), t.bufferSubData(t.ARRAY_BUFFER, 0, this.texcoordData.subarray(0, this.texPtr)), e && e.locATex >= 0 && "<point>" !== e.name && t.vertexAttribPointer(e.locATex, 2, t.FLOAT, !1, 0, 0)
				}
				var i, r, s;
				for (i = 0, r = this.batchPtr; r > i; i++) switch (s = this.batch[i], s.type) {
					case 1:
						s.doQuad();
						break;
					case 2:
						s.doSetTexture();
						break;
					case 3:
						s.doSetOpacity();
						break;
					case 4:
						s.doSetBlend();
						break;
					case 5:
						s.doUpdateModelView();
						break;
					case 6:
						s.doRenderToTexture();
						break;
					case 7:
						s.doClear();
						break;
					case 8:
						s.doPoints();
						break;
					case 9:
						s.doSetProgram();
						break;
					case 10:
						s.doSetProgramParameters();
						break;
					case 11:
						s.doSetTexture1();
						break;
					case 12:
						s.doSetColor();
						break;
					case 13:
						s.doSetDepthTestEnabled();
						break;
					case 14:
						s.doSetEarlyZPass()
				}
				this.batchPtr = 0, this.vertexPtr = 0, this.texPtr = 0, this.pointPtr = 0, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1, this.isBatchInEarlyZPass = !1, this.curBuffer++, this.curBuffer >= o && (this.curBuffer = 0)
			}
		}, t.prototype.setOpacity = function(t) {
			if (t !== this.lastOpacity && !this.isEarlyZPass) {
				var e = this.pushBatch();
				e.type = u, e.opacityParam = t, this.lastOpacity = t, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.setTexture = function(t) {
			if (t !== this.lastTexture0) {
				var e = this.pushBatch();
				e.type = l, e.texParam = t, this.lastTexture0 = t, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.setBlend = function(t, e) {
			if ((t !== this.lastSrcBlend || e !== this.lastDestBlend) && !this.isEarlyZPass) {
				var i = this.pushBatch();
				i.type = p, i.startIndex = t, i.indexCount = e, this.lastSrcBlend = t, this.lastDestBlend = e, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.isPremultipliedAlphaBlend = function() {
			return this.lastSrcBlend === this.gl.ONE && this.lastDestBlend === this.gl.ONE_MINUS_SRC_ALPHA
		}, t.prototype.setAlphaBlend = function() {
			this.setBlend(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA)
		}, t.prototype.setNoPremultiplyAlphaBlend = function() {
			this.setBlend(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA)
		};
		var S = 2 * s - 8;
		t.prototype.quad = function(t, e, i, r, s, n, a, o) {
			this.vertexPtr >= S && this.endBatch();
			var h = this.vertexPtr,
				l = this.texPtr,
				u = this.vertexData,
				p = this.texcoordData,
				d = this.currentZ;
			if (this.hasQuadBatchTop) this.batch[this.batchPtr - 1].indexCount += 6;
			else {
				var f = this.pushBatch();
				f.type = c, f.startIndex = this.enableFrontToBack ? h : h / 2 * 3, f.indexCount = 6, this.hasQuadBatchTop = !0, this.hasPointBatchTop = !1
			}
			this.enableFrontToBack ? (u[h++] = t, u[h++] = e, u[h++] = d, u[h++] = i, u[h++] = r, u[h++] = d, u[h++] = s, u[h++] = n, u[h++] = d, u[h++] = a, u[h++] = o, u[h++] = d) : (u[h++] = t, u[h++] = e, u[h++] = i, u[h++] = r, u[h++] = s, u[h++] = n, u[h++] = a, u[h++] = o), p[l++] = 0, p[l++] = 0, p[l++] = 1, p[l++] = 0, p[l++] = 1, p[l++] = 1, p[l++] = 0, p[l++] = 1, this.vertexPtr = h, this.texPtr = l
		}, t.prototype.quadTex = function(t, e, i, r, s, n, a, o, h) {
			this.vertexPtr >= S && this.endBatch();
			var l = this.vertexPtr,
				u = this.texPtr,
				p = this.vertexData,
				d = this.texcoordData,
				f = this.currentZ;
			if (this.hasQuadBatchTop) this.batch[this.batchPtr - 1].indexCount += 6;
			else {
				var g = this.pushBatch();
				g.type = c, g.startIndex = this.enableFrontToBack ? l : l / 2 * 3, g.indexCount = 6, this.hasQuadBatchTop = !0, this.hasPointBatchTop = !1
			}
			var m = h.left,
				y = h.top,
				_ = h.right,
				v = h.bottom;
			this.enableFrontToBack ? (p[l++] = t, p[l++] = e, p[l++] = f, p[l++] = i, p[l++] = r, p[l++] = f, p[l++] = s, p[l++] = n, p[l++] = f, p[l++] = a, p[l++] = o, p[l++] = f) : (p[l++] = t, p[l++] = e, p[l++] = i, p[l++] = r, p[l++] = s, p[l++] = n, p[l++] = a, p[l++] = o), d[u++] = m, d[u++] = y, d[u++] = _, d[u++] = y, d[u++] = _, d[u++] = v, d[u++] = m, d[u++] = v, this.vertexPtr = l, this.texPtr = u
		}, t.prototype.quadTexUV = function(t, e, i, r, s, n, a, o, h, l, u, p, d, f, g, m) {
			this.vertexPtr >= S && this.endBatch();
			var y = this.vertexPtr,
				_ = this.texPtr,
				v = this.vertexData,
				b = this.texcoordData,
				w = this.currentZ;
			if (this.hasQuadBatchTop) this.batch[this.batchPtr - 1].indexCount += 6;
			else {
				var x = this.pushBatch();
				x.type = c, x.startIndex = this.enableFrontToBack ? y : y / 2 * 3, x.indexCount = 6, this.hasQuadBatchTop = !0, this.hasPointBatchTop = !1
			}
			this.enableFrontToBack ? (v[y++] = t, v[y++] = e, v[y++] = w, v[y++] = i, v[y++] = r, v[y++] = w, v[y++] = s, v[y++] = n, v[y++] = w, v[y++] = a, v[y++] = o, v[y++] = w) : (v[y++] = t, v[y++] = e, v[y++] = i, v[y++] = r, v[y++] = s, v[y++] = n, v[y++] = a, v[y++] = o), b[_++] = h, b[_++] = l, b[_++] = u, b[_++] = p, b[_++] = d, b[_++] = f, b[_++] = g, b[_++] = m, this.vertexPtr = y, this.texPtr = _
		}, t.prototype.convexPoly = function(t) {
			var e, i, r, s, n, a, o, h, c = t.length / 2,
				l = c - 2,
				u = l - 1,
				p = t[0],
				d = t[1];
			for (e = 0; l > e; e += 2) i = 2 * e, r = t[i + 2], s = t[i + 3], n = t[i + 4], a = t[i + 5], e === u ? this.quad(p, d, r, s, n, a, n, a) : (o = t[i + 6], h = t[i + 7], this.quad(p, d, r, s, n, a, o, h))
		};
		var T = a - 4;
		t.prototype.point = function(t, e, i, r) {
			this.pointPtr >= T && this.endBatch();
			var s = this.pointPtr,
				n = this.pointData;
			if (this.hasPointBatchTop) this.batch[this.batchPtr - 1].indexCount++;
			else {
				var a = this.pushBatch();
				a.type = m, a.startIndex = s, a.indexCount = 1, this.hasPointBatchTop = !0, this.hasQuadBatchTop = !1
			}
			n[s++] = t, n[s++] = e, n[s++] = i, n[s++] = r, this.pointPtr = s
		}, t.prototype.switchProgram = function(t) {
			if (this.lastProgram !== t) {
				var e = this.shaderPrograms[t];
				if (!e) {
					if (0 === this.lastProgram) return;
					t = 0, e = this.shaderPrograms[0]
				}
				var i = this.pushBatch();
				i.type = y, i.startIndex = t, this.lastProgram = t, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.programUsesDest = function(t) {
			var e = this.shaderPrograms[t];
			return !(!e.locDestStart && !e.locDestEnd)
		}, t.prototype.programUsesCrossSampling = function(t) {
			var e = this.shaderPrograms[t];
			return !!(e.locDestStart || e.locDestEnd || e.crossSampling)
		}, t.prototype.programPreservesOpaqueness = function(t) {
			return this.shaderPrograms[t].preservesOpaqueness
		}, t.prototype.programExtendsBox = function(t) {
			var e = this.shaderPrograms[t];
			return 0 !== e.extendBoxHorizontal || 0 !== e.extendBoxVertical
		}, t.prototype.getProgramBoxExtendHorizontal = function(t) {
			return this.shaderPrograms[t].extendBoxHorizontal
		}, t.prototype.getProgramBoxExtendVertical = function(t) {
			return this.shaderPrograms[t].extendBoxVertical
		}, t.prototype.getProgramParameterType = function(t, e) {
			return this.shaderPrograms[t].parameters[e][2]
		}, t.prototype.programIsAnimated = function(t) {
			return this.shaderPrograms[t].animated
		}, t.prototype.setProgramParameters = function(t, e, i, r, s, n, a, o, h, c, l, u, p, d, f) {
			var g, m, y, v, b, w = this.shaderPrograms[this.lastProgram];
			if (w.hasAnyOptionalUniforms || f.length) {
				if (y = this.pushBatch(), y.type = _, y.mat4param ? mat4.set(this.matMV, y.mat4param) : y.mat4param = mat4.create(), v = y.mat4param, v[0] = e, v[1] = i, v[2] = r, v[3] = s, v[4] = n, v[5] = a, v[6] = o, v[7] = h, v[8] = c, v[9] = l, v[10] = u, v[11] = p, v[12] = d, y.texParam = w.locSamplerBack ? t : null, f.length)
					for (b = y.shaderParams, b.length = f.length, g = 0, m = f.length; m > g; g++) b[g] = f[g];
				this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.clear = function(t, e, i, r) {
			var s = this.pushBatch();
			s.type = g, s.startIndex = 0, s.mat4param || (s.mat4param = mat4.create()), s.mat4param[0] = t, s.mat4param[1] = e, s.mat4param[2] = i, s.mat4param[3] = r, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
		}, t.prototype.clearRect = function(t, e, i, r) {
			if (!(0 > i || 0 > r)) {
				var s = this.pushBatch();
				s.type = g, s.startIndex = 1, s.mat4param || (s.mat4param = mat4.create()), s.mat4param[0] = t, s.mat4param[1] = e, s.mat4param[2] = i, s.mat4param[3] = r, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.clearDepth = function() {
			var t = this.pushBatch();
			t.type = g, t.startIndex = 2, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
		}, t.prototype.setEarlyZPass = function(t) {
			if (this.enableFrontToBack && (t = !!t, this.isEarlyZPass !== t)) {
				var e = this.pushBatch();
				e.type = w, e.startIndex = t ? 1 : 0, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1, this.isEarlyZPass = t, this.renderToTex = null, this.switchProgram(this.isEarlyZPass ? 2 : 0)
			}
		}, t.prototype.setDepthTestEnabled = function(t) {
			if (this.enableFrontToBack) {
				var e = this.pushBatch();
				e.type = b, e.startIndex = t ? 1 : 0, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, t.prototype.fullscreenQuad = function() {
			mat4.set(this.lastMV, x), this.resetModelView(), this.updateModelView();
			var t = this.width / 2,
				e = this.height / 2;
			this.quad(-t, e, t, e, t, -e, -t, -e), mat4.set(x, this.matMV), this.updateModelView()
		}, t.prototype.setColorFillMode = function(t, e, i, r) {
			this.switchProgram(3);
			var s = this.pushBatch();
			s.type = v, s.mat4param || (s.mat4param = mat4.create()), s.mat4param[0] = t, s.mat4param[1] = e, s.mat4param[2] = i, s.mat4param[3] = r, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
		}, t.prototype.setTextureFillMode = function() {
			this.switchProgram(0)
		}, t.prototype.restoreEarlyZMode = function() {
			this.switchProgram(2)
		}, t.prototype.present = function() {
			this.endBatch(), this.gl.flush()
		};
		var C = [],
			k = {};
		t.prototype.contextLost = function() {
			cr.clearArray(C), k = {}
		};
		var O = 1,
			A = 2,
			E = 3,
			I = 4;
		t.prototype.loadTexture = function(t, e, i, r, s, n) {
			e = !!e, i = !!i;
			var a = t.src + "," + e + "," + i + (e ? "," + s : ""),
				o = null;
			if ("undefined" != typeof t.src && k.hasOwnProperty(a)) return o = k[a], o.c2refcount++, o;
			this.endBatch();
			var h = this.gl,
				c = cr.isPOT(t.width) && cr.isPOT(t.height);
			o = h.createTexture(), h.bindTexture(h.TEXTURE_2D, o), h.pixelStorei(h.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !0);
			var l = h.RGBA,
				u = h.RGBA,
				p = h.UNSIGNED_BYTE;
			if (r && !this.isIE) switch (r) {
				case O:
					l = h.RGB, u = h.RGB;
					break;
				case A:
					p = h.UNSIGNED_SHORT_4_4_4_4;
					break;
				case E:
					p = h.UNSIGNED_SHORT_5_5_5_1;
					break;
				case I:
					l = h.RGB, u = h.RGB, p = h.UNSIGNED_SHORT_5_6_5
			}
			if (!c && e) {
				var d = document.createElement("canvas");
				d.width = cr.nextHighestPowerOfTwo(t.width), d.height = cr.nextHighestPowerOfTwo(t.height);
				var f = d.getContext("2d");
				f.webkitImageSmoothingEnabled = i, f.mozImageSmoothingEnabled = i, f.msImageSmoothingEnabled = i, f.imageSmoothingEnabled = i, f.drawImage(t, 0, 0, t.width, t.height, 0, 0, d.width, d.height), h.texImage2D(h.TEXTURE_2D, 0, l, u, p, d)
			} else h.texImage2D(h.TEXTURE_2D, 0, l, u, p, t);
			return e ? "repeat-x" === s ? (h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_S, h.REPEAT), h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_T, h.CLAMP_TO_EDGE)) : "repeat-y" === s ? (h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_S, h.CLAMP_TO_EDGE), h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_T, h.REPEAT)) : (h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_S, h.REPEAT), h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_T, h.REPEAT)) : (h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_S, h.CLAMP_TO_EDGE), h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_T, h.CLAMP_TO_EDGE)), i ? (h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MAG_FILTER, h.LINEAR), c && this.enable_mipmaps && !n ? (h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MIN_FILTER, h.LINEAR_MIPMAP_LINEAR), h.generateMipmap(h.TEXTURE_2D)) : h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MIN_FILTER, h.LINEAR)) : (h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MAG_FILTER, h.NEAREST), h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MIN_FILTER, h.NEAREST)), h.bindTexture(h.TEXTURE_2D, null), this.lastTexture0 = null, o.c2width = t.width, o.c2height = t.height, o.c2refcount = 1, o.c2texkey = a, C.push(o), k[a] = o, o
		}, t.prototype.createEmptyTexture = function(t, e, i, r, s) {
			this.endBatch();
			var n = this.gl;
			this.isIE && (r = !1);
			var a = n.createTexture();
			return n.bindTexture(n.TEXTURE_2D, a), n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, t, e, 0, n.RGBA, r ? n.UNSIGNED_SHORT_4_4_4_4 : n.UNSIGNED_BYTE, null), s ? (n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_S, n.REPEAT), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_T, n.REPEAT)) : (n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE)), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MAG_FILTER, i ? n.LINEAR : n.NEAREST), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MIN_FILTER, i ? n.LINEAR : n.NEAREST), n.bindTexture(n.TEXTURE_2D, null), this.lastTexture0 = null, a.c2width = t, a.c2height = e, C.push(a), a
		}, t.prototype.videoToTexture = function(t, e, i) {
			this.endBatch();
			var r = this.gl;
			this.isIE && (i = !1), r.bindTexture(r.TEXTURE_2D, e), r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !0);
			try {
				r.texImage2D(r.TEXTURE_2D, 0, r.RGBA, r.RGBA, i ? r.UNSIGNED_SHORT_4_4_4_4 : r.UNSIGNED_BYTE, t)
			} catch (s) {
				console && console.error && console.error("Error updating WebGL texture: ", s)
			}
			r.bindTexture(r.TEXTURE_2D, null), this.lastTexture0 = null
		}, t.prototype.deleteTexture = function(t) {
			if (t) {
				if ("undefined" != typeof t.c2refcount && t.c2refcount > 1) return void t.c2refcount--;
				this.endBatch(), t === this.lastTexture0 && (this.gl.bindTexture(this.gl.TEXTURE_2D, null), this.lastTexture0 = null), t === this.lastTexture1 && (this.gl.activeTexture(this.gl.TEXTURE1), this.gl.bindTexture(this.gl.TEXTURE_2D, null), this.gl.activeTexture(this.gl.TEXTURE0), this.lastTexture1 = null), cr.arrayFindRemove(C, t), "undefined" != typeof t.c2texkey && delete k[t.c2texkey], this.gl.deleteTexture(t)
			}
		}, t.prototype.estimateVRAM = function() {
			var t, e, i, r = this.width * this.height * 4 * 2;
			for (t = 0, e = C.length; e > t; t++) i = C[t], r += i.c2width * i.c2height * 4;
			return r
		}, t.prototype.textureCount = function() {
			return C.length
		}, t.prototype.setRenderingToTexture = function(t) {
			if (t !== this.renderToTex) {
				var e = this.pushBatch();
				e.type = f, e.texParam = t, this.renderToTex = t, this.hasQuadBatchTop = !1, this.hasPointBatchTop = !1
			}
		}, cr.GLWrap = t
	}(),
	function() {
		function t() {
			return "undefined" != typeof jQuery ? jQuery(window).width() : window.innerWidth
		}

		function e() {
			return "undefined" != typeof jQuery ? jQuery(window).height() : window.innerHeight
		}

		function i(t) {
			if (t && (t.getContext || t.dc) && !t.c2runtime) {
				t.c2runtime = this;
				var e = this;
				this.isCrosswalk = /crosswalk/i.test(navigator.userAgent) || /xwalk/i.test(navigator.userAgent) || !("undefined" == typeof window.c2isCrosswalk || !window.c2isCrosswalk), this.isCordova = this.isCrosswalk || "undefined" != typeof window.device && ("undefined" != typeof window.device.cordova || "undefined" != typeof window.device.phonegap) || "undefined" != typeof window.c2iscordova && window.c2iscordova, this.isPhoneGap = this.isCordova, this.isDirectCanvas = !!t.dc, this.isAppMobi = "undefined" != typeof window.AppMobi || this.isDirectCanvas, this.isCocoonJs = !!window.c2cocoonjs, this.isEjecta = !!window.c2ejecta, this.isCocoonJs && (CocoonJS.App.onSuspended.addEventListener(function() {
					e.setSuspended(!0)
				}), CocoonJS.App.onActivated.addEventListener(function() {
					e.setSuspended(!1)
				})), this.isEjecta && (document.addEventListener("pagehide", function() {
					e.setSuspended(!0)
				}), document.addEventListener("pageshow", function() {
					e.setSuspended(!1)
				}), document.addEventListener("resize", function() {
					e.setSize(window.innerWidth, window.innerHeight)
				})), this.isDomFree = this.isDirectCanvas || this.isCocoonJs || this.isEjecta, this.isMicrosoftEdge = /edge\//i.test(navigator.userAgent), this.isIE = (/msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent) || /iemobile/i.test(navigator.userAgent)) && !this.isMicrosoftEdge, this.isTizen = /tizen/i.test(navigator.userAgent), this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen && !this.isIE && !this.isMicrosoftEdge, this.isiPhone = (/iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent)) && !this.isIE && !this.isMicrosoftEdge, this.isiPad = /ipad/i.test(navigator.userAgent), this.isiOS = this.isiPhone || this.isiPad || this.isEjecta, this.isiPhoneiOS6 = this.isiPhone && /os\s6/i.test(navigator.userAgent), this.isChrome = (/chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent)) && !this.isIE && !this.isMicrosoftEdge, this.isAmazonWebApp = /amazonwebappplatform/i.test(navigator.userAgent), this.isFirefox = /firefox/i.test(navigator.userAgent), this.isSafari = /safari/i.test(navigator.userAgent) && !this.isChrome && !this.isIE && !this.isMicrosoftEdge, this.isWindows = /windows/i.test(navigator.userAgent), this.isNWjs = "undefined" != typeof window.c2nodewebkit || "undefined" != typeof window.c2nwjs || /nodewebkit/i.test(navigator.userAgent) || /nwjs/i.test(navigator.userAgent), this.isNodeWebkit = this.isNWjs, this.isArcade = "undefined" != typeof window.is_scirra_arcade, this.isWindows8App = !("undefined" == typeof window.c2isWindows8 || !window.c2isWindows8), this.isWindows8Capable = !("undefined" == typeof window.c2isWindows8Capable || !window.c2isWindows8Capable), this.isWindowsPhone8 = !("undefined" == typeof window.c2isWindowsPhone8 || !window.c2isWindowsPhone8), this.isWindowsPhone81 = !("undefined" == typeof window.c2isWindowsPhone81 || !window.c2isWindowsPhone81), this.isWindows10 = !!window.cr_windows10, this.isWinJS = this.isWindows8App || this.isWindows8Capable || this.isWindowsPhone81 || this.isWindows10, this.isBlackberry10 = !("undefined" == typeof window.c2isBlackberry10 || !window.c2isBlackberry10), this.isAndroidStockBrowser = !(!this.isAndroid || this.isChrome || this.isCrosswalk || this.isFirefox || this.isAmazonWebApp || this.isDomFree), this.devicePixelRatio = 1, this.isMobile = this.isCordova || this.isCrosswalk || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isWindowsPhone81 || this.isBlackberry10 || this.isTizen || this.isEjecta, this.isMobile || (this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet|kindle|silk)/i.test(navigator.userAgent)), "undefined" == typeof cr_is_preview || this.isNWjs || "?nw" !== window.location.search && !/nodewebkit/i.test(navigator.userAgent) && !/nwjs/i.test(navigator.userAgent) || (this.isNWjs = !0), this.isDebug = "undefined" != typeof cr_is_preview && window.location.search.indexOf("debug") > -1, this.canvas = t, this.canvasdiv = document.getElementById("c2canvasdiv"), this.gl = null, this.glwrap = null, this.glUnmaskedRenderer = "(unavailable)", this.enableFrontToBack = !1, this.earlyz_index = 0, this.ctx = null, this.fullscreenOldMarginCss = "", this.firstInFullscreen = !1, this.oldWidth = 0, this.oldHeight = 0, this.canvas.oncontextmenu = function(t) {
					return t.preventDefault && t.preventDefault(), !1
				}, this.canvas.onselectstart = function(t) {
					return t.preventDefault && t.preventDefault(), !1
				}, this.isDirectCanvas && (window.c2runtime = this), this.isNWjs && (window.ondragover = function(t) {
					return t.preventDefault(), !1
				}, window.ondrop = function(t) {
					return t.preventDefault(), !1
				}, require("nw.gui").App.clearCache()), this.isAndroidStockBrowser && "undefined" != typeof jQuery && jQuery("canvas").parents("*").css("overflow", "visible"), this.width = t.width, this.height = t.height, this.draw_width = this.width, this.draw_height = this.height, this.cssWidth = this.width, this.cssHeight = this.height, this.lastWindowWidth = window.innerWidth, this.lastWindowHeight = window.innerHeight, this.forceCanvasAlpha = !1, this.redraw = !0, this.isSuspended = !1, Date.now || (Date.now = function() {
					return +new Date
				}), this.plugins = [], this.types = {}, this.types_by_index = [], this.behaviors = [], this.layouts = {}, this.layouts_by_index = [], this.eventsheets = {}, this.eventsheets_by_index = [], this.wait_for_textures = [], this.triggers_to_postinit = [], this.all_global_vars = [], this.all_local_vars = [], this.solidBehavior = null, this.jumpthruBehavior = null, this.shadowcasterBehavior = null, this.deathRow = {}, this.hasPendingInstances = !1, this.isInClearDeathRow = !1, this.isInOnDestroy = 0, this.isRunningEvents = !1, this.isEndingLayout = !1, this.createRow = [], this.isLoadingState = !1, this.saveToSlot = "", this.loadFromSlot = "", this.loadFromJson = "", this.lastSaveJson = "", this.signalledContinuousPreview = !1, this.suspendDrawing = !1, this.dt = 0, this.dt1 = 0, this.logictime = 0, this.cpuutilisation = 0, this.timescale = 1, this.kahanTime = new cr.KahanAdder, this.wallTime = new cr.KahanAdder, this.last_tick_time = 0, this.fps = 0, this.last_fps_time = 0, this.tickcount = 0, this.execcount = 0, this.framecount = 0, this.objectcount = 0, this.changelayout = null, this.destroycallbacks = [], this.event_stack = [], this.event_stack_index = -1, this.localvar_stack = [
					[]
				], this.localvar_stack_index = 0, this.trigger_depth = 0, this.pushEventStack(null), this.loop_stack = [], this.loop_stack_index = -1, this.next_uid = 0, this.next_puid = 0, this.layout_first_tick = !0, this.family_count = 0, this.suspend_events = [], this.raf_id = -1, this.timeout_id = -1, this.isloading = !0, this.loadingprogress = 0, this.isNodeFullscreen = !1, this.stackLocalCount = 0, this.audioInstance = null, this.had_a_click = !1, this.isInUserInputEvent = !1, this.objects_to_pretick = new cr.ObjectSet, this.objects_to_tick = new cr.ObjectSet, this.objects_to_tick2 = new cr.ObjectSet, this.registered_collisions = [], this.temp_poly = new cr.CollisionPoly([]), this.temp_poly2 = new cr.CollisionPoly([]), this.allGroups = [], this.groups_by_name = {}, this.cndsBySid = {}, this.actsBySid = {}, this.varsBySid = {}, this.blocksBySid = {}, this.running_layout = null, this.layer_canvas = null, this.layer_ctx = null, this.layer_tex = null, this.layout_tex = null, this.layout_canvas = null, this.layout_ctx = null, this.is_WebGL_context_lost = !1, this.uses_background_blending = !1, this.fx_tex = [null, null], this.fullscreen_scaling = 0, this.files_subfolder = "", this.objectsByUid = {}, this.loaderlogos = null, this.snapshotCanvas = null, this.snapshotData = "", this.objectRefTable = [], this.requestProjectData()
			}
		}

		function r(t, e) {
			O && O.width === t && O.height === e || (O = document.createElement("canvas"), O.width = t, O.height = e, A = O.getContext("2d"))
		}

		function s(t, e) {
			return 128 >= e ? t[3] : 256 >= e ? t[2] : 512 >= e ? t[1] : t[0]
		}

		function n() {
			return I.length ? I.pop() : new cr.ObjectSet
		}

		function a(t) {
			t.clear(), I.push(t)
		}

		function o(t) {
			var e = t.target.result;
			e.createObjectStore("saves", {
				keyPath: "slot"
			})
		}

		function h(t, e, i, r) {
			var s = indexedDB.open("_C2SaveStates");
			s.onupgradeneeded = o, s.onerror = r, s.onsuccess = function(s) {
				var n = s.target.result;
				n.onerror = r;
				var a = n.transaction(["saves"], "readwrite"),
					o = a.objectStore("saves"),
					h = o.put({
						slot: t,
						data: e
					});
				h.onsuccess = i
			}
		}

		function c(t, e, i) {
			var r = indexedDB.open("_C2SaveStates");
			r.onupgradeneeded = o, r.onerror = i, r.onsuccess = function(r) {
				var s = r.target.result;
				s.onerror = i;
				var n = s.transaction(["saves"]),
					a = n.objectStore("saves"),
					o = a.get(t);
				o.onsuccess = function() {
					e(o.result ? o.result.data : null)
				}
			}
		}

		function l() {
			cr.logexport("Reloading for continuous preview"), window.c2cocoonjs ? CocoonJS.App.reload() : window.location.search.indexOf("continuous") > -1 ? window.location.reload(!0) : window.location = window.location + "?continuous"
		}

		function u(t) {
			var e, i = {};
			for (e in t)
				if (t.hasOwnProperty(e)) {
					if (t[e] instanceof cr.ObjectSet) continue;
					if (t[e] && "undefined" != typeof t[e].c2userdata) continue;
					i[e] = t[e]
				}
			return i
		}
		var p = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;
		i.prototype.requestProjectData = function() {
			var t, e = this;
			t = this.isWindowsPhone8 ? new ActiveXObject("Microsoft.XMLHTTP") : new XMLHttpRequest;
			var i = "data.js";
			(this.isWindows8App || this.isWindowsPhone8 || this.isWindowsPhone81 || this.isWindows10) && (i = "data.json"), t.open("GET", i, !0);
			var r = !1;
			if (!this.isDomFree && "response" in t && "responseType" in t) try {
				t.responseType = "json", r = "json" === t.responseType
			} catch (s) {
				r = !1
			}
			if (!r && "responseType" in t) try {
				t.responseType = "text"
			} catch (s) {}
			if ("overrideMimeType" in t) try {
				t.overrideMimeType("application/json; charset=utf-8")
			} catch (s) {}
			this.isWindowsPhone8 ? t.onreadystatechange = function() {
				4 === t.readyState && e.loadProject(JSON.parse(t.responseText))
			} : (t.onload = function() {
				if (r) e.loadProject(t.response);
				else if (e.isEjecta) {
					var i = t.responseText;
					i = i.substr(i.indexOf("{")), e.loadProject(JSON.parse(i))
				} else e.loadProject(JSON.parse(t.responseText))
			}, t.onerror = function(t) {
				cr.logerror("Error requesting " + i + ":"), cr.logerror(t)
			}), t.send()
		}, i.prototype.initRendererAndLoader = function() {
			var i, r, s, n, a, o, h, c, l, u, p = this;
			this.isRetina = (!this.isDomFree || this.isEjecta) && this.useHighDpi && !this.isAndroidStockBrowser, 0 === this.fullscreen_mode && this.isiOS && (this.isRetina = !1), this.devicePixelRatio = this.isRetina ? window.devicePixelRatio || window.webkitDevicePixelRatio || window.mozDevicePixelRatio || window.msDevicePixelRatio || 1 : 1, this.ClearDeathRow();
			var d, f = !!(this.forceCanvasAlpha || this.alphaBackground && !(this.isNWjs || this.isWinJS || this.isWindowsPhone8 || this.isCrosswalk || this.isCordova || this.isAmazonWebApp));
			this.fullscreen_mode > 0 && this.setSize(t(), e(), !0);
			try {
				this.enableWebGL && (this.isCocoonJs || this.isEjecta || !this.isDomFree) && (d = {
					alpha: f,
					depth: !1,
					antialias: !1,
					failIfMajorPerformanceCaveat: !0
				}, this.gl = this.canvas.getContext("webgl", d) || this.canvas.getContext("experimental-webgl", d))
			} catch (g) {}
			if (this.gl) {
				var m = this.gl.getExtension("WEBGL_debug_renderer_info");
				if (m) {
					var y = this.gl.getParameter(m.UNMASKED_VENDOR_WEBGL),
						_ = this.gl.getParameter(m.UNMASKED_RENDERER_WEBGL);
					this.glUnmaskedRenderer = _ + " [" + y + "]"
				}
				for (this.enableFrontToBack && (this.glUnmaskedRenderer += " [front-to-back enabled]"), this.isDomFree || (this.overlay_canvas = document.createElement("canvas"), jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode), this.overlay_canvas.oncontextmenu = function() {
						return !1
					}, this.overlay_canvas.onselectstart = function() {
						return !1
					}, this.overlay_canvas.width = Math.round(this.cssWidth * this.devicePixelRatio), this.overlay_canvas.height = Math.round(this.cssHeight * this.devicePixelRatio), jQuery(this.overlay_canvas).css({
						width: this.cssWidth + "px",
						height: this.cssHeight + "px"
					}), this.positionOverlayCanvas(), this.overlay_ctx = this.overlay_canvas.getContext("2d")), this.glwrap = new cr.GLWrap(this.gl, this.isMobile, this.enableFrontToBack), this.glwrap.setSize(this.canvas.width, this.canvas.height), this.glwrap.enable_mipmaps = 0 !== this.downscalingQuality, this.ctx = null, this.canvas.addEventListener("webglcontextlost", function(t) {
						t.preventDefault(), p.onContextLost(), cr.logexport("[Construct 2] WebGL context lost"), window.cr_setSuspended(!0)
					}, !1), this.canvas.addEventListener("webglcontextrestored", function() {
						p.glwrap.initState(), p.glwrap.setSize(p.glwrap.width, p.glwrap.height, !0), p.layer_tex = null, p.layout_tex = null, p.fx_tex[0] = null, p.fx_tex[1] = null, p.onContextRestored(), p.redraw = !0, cr.logexport("[Construct 2] WebGL context restored"), window.cr_setSuspended(!1)
					}, !1), i = 0, r = this.types_by_index.length; r > i; i++)
					for (h = this.types_by_index[i], s = 0, n = h.effect_types.length; n > s; s++) c = h.effect_types[s], c.shaderindex = this.glwrap.getShaderIndex(c.id), c.preservesOpaqueness = this.glwrap.programPreservesOpaqueness(c.shaderindex), this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(c.shaderindex);
				for (i = 0, r = this.layouts_by_index.length; r > i; i++) {
					for (l = this.layouts_by_index[i], s = 0, n = l.effect_types.length; n > s; s++) c = l.effect_types[s], c.shaderindex = this.glwrap.getShaderIndex(c.id), c.preservesOpaqueness = this.glwrap.programPreservesOpaqueness(c.shaderindex);
					for (l.updateActiveEffects(), s = 0, n = l.layers.length; n > s; s++) {
						for (u = l.layers[s], a = 0, o = u.effect_types.length; o > a; a++) c = u.effect_types[a], c.shaderindex = this.glwrap.getShaderIndex(c.id), c.preservesOpaqueness = this.glwrap.programPreservesOpaqueness(c.shaderindex), this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(c.shaderindex);
						u.updateActiveEffects()
					}
				}
			} else {
				if (this.fullscreen_mode > 0 && this.isDirectCanvas) {
					this.canvas = null, document.oncontextmenu = function() {
						return !1
					}, document.onselectstart = function() {
						return !1
					}, this.ctx = AppMobi.canvas.getContext("2d");
					try {
						this.ctx.samplingMode = this.linearSampling ? "smooth" : "sharp", this.ctx.globalScale = 1, this.ctx.HTML5CompatibilityMode = !0, this.ctx.imageSmoothingEnabled = this.linearSampling
					} catch (g) {}
					0 !== this.width && 0 !== this.height && (this.ctx.width = this.width, this.ctx.height = this.height)
				}
				this.ctx || (this.isCocoonJs ? (d = {
					antialias: !!this.linearSampling,
					alpha: f
				}, this.ctx = this.canvas.getContext("2d", d)) : (d = {
					alpha: f
				}, this.ctx = this.canvas.getContext("2d", d)), this.ctx.webkitImageSmoothingEnabled = this.linearSampling, this.ctx.mozImageSmoothingEnabled = this.linearSampling, this.ctx.msImageSmoothingEnabled = this.linearSampling, this.ctx.imageSmoothingEnabled = this.linearSampling), this.overlay_canvas = null, this.overlay_ctx = null
			}
			if (this.tickFunc = function(t) {
					p.tick(!1, t)
				}, window == window.top || this.isDomFree || this.isWinJS || this.isWindowsPhone8 || (document.addEventListener("mousedown", function() {
					window.focus()
				}, !0), document.addEventListener("touchstart", function() {
					window.focus()
				}, !0)), "undefined" != typeof cr_is_preview && (this.isCocoonJs && console.log("[Construct 2] In preview-over-wifi via CocoonJS mode"), window.location.search.indexOf("continuous") > -1 && (cr.logexport("Reloading for continuous preview"), this.loadFromSlot = "__c2_continuouspreview", this.suspendDrawing = !0), this.pauseOnBlur && !this.isMobile && (jQuery(window).focus(function() {
					p.setSuspended(!1)
				}), jQuery(window).blur(function() {
					p.setSuspended(!0)
				}))), !this.isDomFree) {
				var v = function(t) {
					if (cr.isCanvasInputEvent(t) && document.activeElement && document.activeElement !== document.getElementsByTagName("body")[0] && document.activeElement.blur) try {
						document.activeElement.blur()
					} catch (t) {}
				};
				window.navigator.pointerEnabled ? document.addEventListener("pointerdown", v) : window.navigator.msPointerEnabled ? document.addEventListener("MSPointerDown", v) : document.addEventListener("touchstart", v), document.addEventListener("mousedown", v)
			}
			0 === this.fullscreen_mode && this.isRetina && this.devicePixelRatio > 1 && this.setSize(this.original_width, this.original_height, !0), this.tryLockOrientation(), this.getready(), this.go(), this.extra = {}, cr.seal(this)
		};
		i.prototype.setSize = function(t, e, i) {
			var r = 0,
				s = 0,
				n = 0,
				a = 0,
				o = 0,
				h = this.isiPhoneiOS6 && this.isSafari && !navigator.standalone && !this.isDomFree && !this.isCordova;
			if (h && (e += 60), this.lastWindowWidth !== t || this.lastWindowHeight !== e || i) {
				this.lastWindowWidth = t, this.lastWindowHeight = e;
				var c, l, u = this.fullscreen_mode,
					p = (document.mozFullScreen || document.webkitIsFullScreen || !!document.msFullscreenElement || document.fullScreen || this.isNodeFullscreen) && !this.isCordova;
				if (p || 0 !== this.fullscreen_mode || i) {
					p && this.fullscreen_scaling > 0 && (u = this.fullscreen_scaling);
					var d = this.devicePixelRatio;
					u >= 4 ? (c = this.original_width / this.original_height, l = t / e, l > c ? (n = e * c, 5 === u ? (o = n * d / this.original_width, o > 1 ? o = Math.floor(o) : 1 > o && (o = 1 / Math.ceil(1 / o)), n = this.original_width * o / d, a = this.original_height * o / d, r = (t - n) / 2, s = (e - a) / 2, t = n, e = a) : (r = (t - n) / 2, t = n)) : (a = t / c, 5 === u ? (o = a * d / this.original_height, o > 1 ? o = Math.floor(o) : 1 > o && (o = 1 / Math.ceil(1 / o)), n = this.original_width * o / d, a = this.original_height * o / d, r = (t - n) / 2, s = (e - a) / 2, t = n, e = a) : (s = (e - a) / 2, e = a)), p && !this.isNWjs && (r = 0, s = 0)) : this.isNWjs && this.isNodeFullscreen && 0 === this.fullscreen_mode_set && (r = Math.floor((t - this.original_width) / 2), s = Math.floor((e - this.original_height) / 2), t = this.original_width, e = this.original_height), 2 > u && (this.aspect_scale = d), this.isRetina && this.isiPad && d > 1 && (t >= 1024 && (t = 1023), e >= 1024 && (e = 1023)), this.cssWidth = Math.round(t), this.cssHeight = Math.round(e), this.width = Math.round(t * d), this.height = Math.round(e * d), this.redraw = !0, this.wantFullscreenScalingQuality ? (this.draw_width = this.width, this.draw_height = this.height, this.fullscreenScalingQuality = !0) : this.width < this.original_width && this.height < this.original_height || 1 === u ? (this.draw_width = this.width, this.draw_height = this.height, this.fullscreenScalingQuality = !0) : (this.draw_width = this.original_width, this.draw_height = this.original_height, this.fullscreenScalingQuality = !1, 2 === u ? (c = this.original_width / this.original_height, l = this.lastWindowWidth / this.lastWindowHeight, c > l ? this.draw_width = this.draw_height * l : l > c && (this.draw_height = this.draw_width / l)) : 3 === u && (c = this.original_width / this.original_height, l = this.lastWindowWidth / this.lastWindowHeight, l > c ? this.draw_width = this.draw_height * l : c > l && (this.draw_height = this.draw_width / l))), this.canvasdiv && !this.isDomFree && (jQuery(this.canvasdiv).css({
						width: Math.round(t) + "px",
						height: Math.round(e) + "px",
						"margin-left": Math.floor(r) + "px",
						"margin-top": Math.floor(s) + "px"
					}), "undefined" != typeof cr_is_preview && jQuery("#borderwrap").css({
						width: Math.round(t) + "px",
						height: Math.round(e) + "px"
					})), this.canvas && (this.canvas.width = Math.round(t * d), this.canvas.height = Math.round(e * d), this.isEjecta ? (this.canvas.style.left = Math.floor(r) + "px", this.canvas.style.top = Math.floor(s) + "px", this.canvas.style.width = Math.round(t) + "px", this.canvas.style.height = Math.round(e) + "px") : this.isRetina && !this.isDomFree && (this.canvas.style.width = Math.round(t) + "px", this.canvas.style.height = Math.round(e) + "px")), this.overlay_canvas && (this.overlay_canvas.width = Math.round(t * d), this.overlay_canvas.height = Math.round(e * d), this.overlay_canvas.style.width = this.cssWidth + "px", this.overlay_canvas.style.height = this.cssHeight + "px"), this.glwrap && this.glwrap.setSize(Math.round(t * d), Math.round(e * d)), this.isDirectCanvas && this.ctx && (this.ctx.width = Math.round(t), this.ctx.height = Math.round(e)), this.ctx && (this.ctx.webkitImageSmoothingEnabled = this.linearSampling, this.ctx.mozImageSmoothingEnabled = this.linearSampling, this.ctx.msImageSmoothingEnabled = this.linearSampling, this.ctx.imageSmoothingEnabled = this.linearSampling), this.tryLockOrientation(), this.isDomFree || !h && !this.isiPhone || window.setTimeout(function() {
						window.scrollTo(0, 1)
					}, 100)
				}
			}
		}, i.prototype.tryLockOrientation = function() {
			if (this.autoLockOrientation && 0 !== this.orientations) {
				var t = "portrait";
				2 === this.orientations && (t = "landscape"), screen.orientation && screen.orientation.lock ? screen.orientation.lock(t) : screen.lockOrientation ? screen.lockOrientation(t) : screen.webkitLockOrientation ? screen.webkitLockOrientation(t) : screen.mozLockOrientation ? screen.mozLockOrientation(t) : screen.msLockOrientation && screen.msLockOrientation(t)
			}
		}, i.prototype.onContextLost = function() {
			this.glwrap.contextLost(), this.is_WebGL_context_lost = !0;
			var t, e, i;
			for (t = 0, e = this.types_by_index.length; e > t; t++) i = this.types_by_index[t], i.onLostWebGLContext && i.onLostWebGLContext()
		}, i.prototype.onContextRestored = function() {
			this.is_WebGL_context_lost = !1;
			var t, e, i;
			for (t = 0, e = this.types_by_index.length; e > t; t++) i = this.types_by_index[t], i.onRestoreWebGLContext && i.onRestoreWebGLContext()
		}, i.prototype.positionOverlayCanvas = function() {
			if (!this.isDomFree) {
				var t = (document.mozFullScreen || document.webkitIsFullScreen || document.fullScreen || !!document.msFullscreenElement || this.isNodeFullscreen) && !this.isCordova,
					e = t ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
				e.position = "absolute", jQuery(this.overlay_canvas).css(e)
			}
		};
		var d = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame;
		i.prototype.setSuspended = function(t) {
			var e, i;
			if (t && !this.isSuspended)
				for (cr.logexport("[Construct 2] Suspending"), this.isSuspended = !0, -1 !== this.raf_id && d && d(this.raf_id), -1 !== this.timeout_id && clearTimeout(this.timeout_id), e = 0, i = this.suspend_events.length; i > e; e++) this.suspend_events[e](!0);
			else if (!t && this.isSuspended) {
				for (cr.logexport("[Construct 2] Resuming"), this.isSuspended = !1, this.last_tick_time = cr.performance_now(), this.last_fps_time = cr.performance_now(), this.framecount = 0, this.logictime = 0, e = 0, i = this.suspend_events.length; i > e; e++) this.suspend_events[e](!1);
				this.tick(!1)
			}
		}, i.prototype.addSuspendCallback = function(t) {
			this.suspend_events.push(t)
		}, i.prototype.GetObjectReference = function(t) {
			return this.objectRefTable[t]
		}, i.prototype.loadProject = function(t) {
			t && t.project || cr.logerror("Project model unavailable");
			var e = t.project;
			if (this.name = e[0], this.first_layout = e[1], this.fullscreen_mode = e[12], this.fullscreen_mode_set = e[12], this.original_width = e[10], this.original_height = e[11], this.parallax_x_origin = this.original_width / 2, this.parallax_y_origin = this.original_height / 2, this.isDomFree && !this.isEjecta && (e[12] >= 4 || 0 === e[12]) && (cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'"), this.fullscreen_mode = 3, this.fullscreen_mode_set = 3), this.uses_loader_layout = e[18], this.loaderstyle = e[19], 0 === this.loaderstyle) {
				var i = new Image;
				i.crossOrigin = "anonymous", i.src = "loading-logo.png", this.loaderlogos = {
					logo: i
				}
			} else if (4 === this.loaderstyle) {
				var r = new Image;
				r.src = "";
				var s = new Image;
				s.src = "";
				var n = new Image;
				n.src = "";
				var a = new Image;
				a.src = "";
				var o = new Image;
				o.src = "";
				var h = new Image;
				h.src = "";
				var c = new Image;
				c.src = "";
				var l = new Image;
				l.src = "";
				var u = new Image;
				u.src = "";
				var p = new Image;
				p.src = "";
				var d = new Image;
				d.src = "";
				var f = new Image;
				f.src = "", this.loaderlogos = {
					logo: [r, s, n, a],
					powered: [o, h, c, l],
					website: [u, p, d, f]
				}
			}
			this.next_uid = e[21], this.objectRefTable = cr.getObjectRefTable(), this.system = new cr.system_object(this);
			var g, m, y, _, v, b, w, x, S, T, C, k, O;
			for (g = 0, m = e[2].length; m > g; g++) w = e[2][g], C = this.GetObjectReference(w[0]), cr.add_common_aces(w, C.prototype), k = new C(this), k.singleglobal = w[1], k.is_world = w[2], k.must_predraw = w[9], k.onCreate && k.onCreate(), cr.seal(k), this.plugins.push(k);
			for (this.objectRefTable = cr.getObjectRefTable(), g = 0, m = e[3].length; m > g; g++) {
				for (w = e[3][g], O = this.GetObjectReference(w[1]), k = null, y = 0, _ = this.plugins.length; _ > y; y++)
					if (this.plugins[y] instanceof O) {
						k = this.plugins[y];
						break
					}
				var A = new k.Type(k);
				for (A.name = w[0], A.is_family = w[2], A.instvar_sids = w[3].slice(0), A.vars_count = w[3].length, A.behs_count = w[4], A.fx_count = w[5], A.sid = w[11], A.is_family ? (A.members = [], A.family_index = this.family_count++, A.families = null) : (A.members = null, A.family_index = -1, A.families = []), A.family_var_map = null, A.family_beh_map = null, A.family_fx_map = null, A.is_contained = !1, A.container = null, w[6] ? (A.texture_file = w[6][0], A.texture_filesize = w[6][1], A.texture_pixelformat = w[6][2]) : (A.texture_file = null, A.texture_filesize = 0, A.texture_pixelformat = 0), A.animations = w[7] ? w[7] : null, A.index = g, A.instances = [], A.deadCache = [], A.solstack = [new cr.selection(A)], A.cur_sol = 0, A.default_instance = null, A.default_layerindex = 0, A.stale_iids = !0, A.updateIIDs = cr.type_updateIIDs, A.getFirstPicked = cr.type_getFirstPicked, A.getPairedInstance = cr.type_getPairedInstance, A.getCurrentSol = cr.type_getCurrentSol, A.pushCleanSol = cr.type_pushCleanSol, A.pushCopySol = cr.type_pushCopySol, A.popSol = cr.type_popSol, A.getBehaviorByName = cr.type_getBehaviorByName, A.getBehaviorIndexByName = cr.type_getBehaviorIndexByName, A.getEffectIndexByName = cr.type_getEffectIndexByName, A.applySolToContainer = cr.type_applySolToContainer, A.getInstanceByIID = cr.type_getInstanceByIID, A.collision_grid = new cr.SparseGrid(this.original_width, this.original_height), A.any_cell_changed = !0, A.any_instance_parallaxed = !1, A.extra = {}, A.toString = cr.type_toString, A.behaviors = [], y = 0, _ = w[8].length; _ > y; y++) {
					x = w[8][y];
					var E = this.GetObjectReference(x[1]),
						I = null;
					for (v = 0, b = this.behaviors.length; b > v; v++)
						if (this.behaviors[v] instanceof E) {
							I = this.behaviors[v];
							break
						}
					I || (I = new E(this), I.my_types = [], I.my_instances = new cr.ObjectSet, I.onCreate && I.onCreate(), cr.seal(I), this.behaviors.push(I), cr.behaviors.solid && I instanceof cr.behaviors.solid && (this.solidBehavior = I), cr.behaviors.jumpthru && I instanceof cr.behaviors.jumpthru && (this.jumpthruBehavior = I), cr.behaviors.shadowcaster && I instanceof cr.behaviors.shadowcaster && (this.shadowcasterBehavior = I)), -1 === I.my_types.indexOf(A) && I.my_types.push(A);
					var P = new I.Type(I, A);
					P.name = x[0], P.sid = x[2], P.onCreate(), cr.seal(P), A.behaviors.push(P)
				}
				for (A.global = w[9], A.isOnLoaderLayout = w[10], A.effect_types = [], y = 0, _ = w[12].length; _ > y; y++) A.effect_types.push({
					id: w[12][y][0],
					name: w[12][y][1],
					shaderindex: -1,
					preservesOpaqueness: !1,
					active: !0,
					index: y
				});
				if (A.tile_poly_data = w[13], (!this.uses_loader_layout || A.is_family || A.isOnLoaderLayout || !k.is_world) && (A.onCreate(), cr.seal(A)), A.name && (this.types[A.name] = A), this.types_by_index.push(A), k.singleglobal) {
					var L = new k.Instance(A);
					L.uid = this.next_uid++, L.puid = this.next_puid++, L.iid = 0, L.get_iid = cr.inst_get_iid, L.toString = cr.inst_toString, L.properties = w[14], L.onCreate(), cr.seal(L), A.instances.push(L), this.objectsByUid[L.uid.toString()] = L
				}
			}
			for (g = 0, m = e[4].length; m > g; g++) {
				var R, M = e[4][g],
					N = this.types_by_index[M[0]];
				for (y = 1, _ = M.length; _ > y; y++) R = this.types_by_index[M[y]], R.families.push(N), N.members.push(R)
			}
			for (g = 0, m = e[28].length; m > g; g++) {
				var B = e[28][g],
					F = [];
				for (y = 0, _ = B.length; _ > y; y++) F.push(this.types_by_index[B[y]]);
				for (y = 0, _ = F.length; _ > y; y++) F[y].is_contained = !0, F[y].container = F
			}
			if (this.family_count > 0)
				for (g = 0, m = this.types_by_index.length; m > g; g++)
					if (S = this.types_by_index[g], !S.is_family && S.families.length) {
						S.family_var_map = new Array(this.family_count), S.family_beh_map = new Array(this.family_count), S.family_fx_map = new Array(this.family_count);
						var j = [],
							D = 0,
							W = 0,
							z = 0;
						for (y = 0, _ = S.families.length; _ > y; y++)
							for (T = S.families[y], S.family_var_map[T.family_index] = D, D += T.vars_count, S.family_beh_map[T.family_index] = W, W += T.behs_count, S.family_fx_map[T.family_index] = z, z += T.fx_count, v = 0, b = T.effect_types.length; b > v; v++) j.push(cr.shallowCopy({}, T.effect_types[v]));
						for (S.effect_types = j.concat(S.effect_types), y = 0, _ = S.effect_types.length; _ > y; y++) S.effect_types[y].index = y
					}
			for (g = 0, m = e[5].length; m > g; g++) {
				w = e[5][g];
				var G = new cr.layout(this, w);
				cr.seal(G), this.layouts[G.name] = G, this.layouts_by_index.push(G)
			}
			for (g = 0, m = e[6].length; m > g; g++) {
				w = e[6][g];
				var U = new cr.eventsheet(this, w);
				cr.seal(U), this.eventsheets[U.name] = U, this.eventsheets_by_index.push(U)
			}
			for (g = 0, m = this.eventsheets_by_index.length; m > g; g++) this.eventsheets_by_index[g].postInit();
			for (g = 0, m = this.eventsheets_by_index.length; m > g; g++) this.eventsheets_by_index[g].updateDeepIncludes();
			for (g = 0, m = this.triggers_to_postinit.length; m > g; g++) this.triggers_to_postinit[g].postInit();
			cr.clearArray(this.triggers_to_postinit), this.audio_to_preload = e[7], this.files_subfolder = e[8], this.pixel_rounding = e[9], this.aspect_scale = 1, this.enableWebGL = e[13], this.linearSampling = e[14], this.alphaBackground = e[15], this.versionstr = e[16], this.useHighDpi = e[17], this.orientations = e[20], this.autoLockOrientation = this.orientations > 0, this.pauseOnBlur = e[22], this.wantFullscreenScalingQuality = e[23], this.fullscreenScalingQuality = this.wantFullscreenScalingQuality, this.downscalingQuality = e[24], this.preloadSounds = e[25], this.projectName = e[26], this.enableFrontToBack = e[27] && !this.isIE, this.start_time = Date.now(), cr.clearArray(this.objectRefTable), this.initRendererAndLoader()
		};
		var f = !1;
		i.prototype.waitForImageLoad = function(t, e) {
			t.cocoonLazyLoad = !0, t.onerror = function(e) {
				t.c2error = !0, f = !0, console && console.error && console.error("Error loading image '" + t.src + "': ", e)
			}, this.isEjecta ? t.src = e : t.src || ("undefined" != typeof XAPKReader ? XAPKReader.get(e, function(e) {
				t.src = e
			}, function(i) {
				t.c2error = !0, f = !0, console && console.error && console.error("Error extracting image '" + e + "' from expansion file: ", i)
			}) : (t.crossOrigin = "anonymous", t.src = e)), this.wait_for_textures.push(t)
		}, i.prototype.findWaitingTexture = function(t) {
			var e, i;
			for (e = 0, i = this.wait_for_textures.length; i > e; e++)
				if (this.wait_for_textures[e].cr_src === t) return this.wait_for_textures[e];
			return null
		};
		var g = 0,
			m = !1;
		i.prototype.getready = function() {
			this.audioInstance && (g = this.audioInstance.setPreloadList(this.audio_to_preload))
		}, i.prototype.areAllTexturesAndSoundsLoaded = function() {
			var t, e, i, r = g,
				s = 0,
				n = 0,
				a = !0;
			for (t = 0, e = this.wait_for_textures.length; e > t; t++) {
				i = this.wait_for_textures[t];
				var o = i.cr_filesize;
				(!o || 0 >= o) && (o = 5e4), r += o, i.src && (i.complete || i.loaded) && !i.c2error ? s += o : a = !1
			}
			return a && this.preloadSounds && this.audioInstance && (m || (this.audioInstance.startPreloads(), m = !0), n = this.audioInstance.getPreloadedSize(), s += n, g > n && (a = !1)), this.progress = 0 == r ? 0 : s / r, a
		};
		var y = !1;
		i.prototype.go = function() {
			if (this.ctx || this.glwrap) {
				var t = this.ctx || this.overlay_ctx;
				this.overlay_canvas && this.positionOverlayCanvas(), this.progress = 0, this.last_progress = -1;
				var e = this;
				if (this.areAllTexturesAndSoundsLoaded() && (4 !== this.loaderstyle || y)) this.go_loading_finished();
				else {
					var i = Date.now() - this.start_time;
					if (t) {
						var r = this.width,
							s = this.height,
							n = this.devicePixelRatio;
						if (this.loaderstyle < 3 && (this.isCocoonJs || i >= 500 && this.last_progress != this.progress)) {
							t.clearRect(0, 0, r, s);
							var a, o = r / 2,
								h = s / 2,
								c = 0 === this.loaderstyle && this.loaderlogos.logo.complete,
								l = 40 * n,
								u = 0,
								d = 80 * n;
							if (c) {
								var g = this.loaderlogos.logo;
								d = g.width * n, a = g.height * n, l = d / 2, u = a / 2, t.drawImage(g, cr.floor(o - l), cr.floor(h - u), d, a)
							}
							if (this.loaderstyle <= 1) h += u + (c ? 12 * n : 0), o -= l, o = cr.floor(o) + .5, h = cr.floor(h) + .5, t.fillStyle = f ? "red" : "DodgerBlue", t.fillRect(o, h, Math.floor(d * this.progress), 6 * n), t.strokeStyle = "black", t.strokeRect(o, h, d, 6 * n), t.strokeStyle = "white", t.strokeRect(o - 1 * n, h - 1 * n, d + 2 * n, 8 * n);
							else if (2 === this.loaderstyle) {
								t.font = this.isEjecta ? "12pt ArialMT" : "12pt Arial", t.fillStyle = f ? "#f00" : "#999", t.textBaseLine = "middle";
								var m = Math.round(100 * this.progress) + "%",
									_ = t.measureText ? t.measureText(m) : null,
									v = _ ? _.width : 0;
								t.fillText(m, o - v / 2, h)
							}
							this.last_progress = this.progress
						} else if (4 === this.loaderstyle) return this.draw_c2_splash_loader(t), void(p ? p(function() {
							e.go()
						}) : setTimeout(function() {
							e.go()
						}, 16))
					}
					setTimeout(function() {
						e.go()
					}, this.isCocoonJs ? 10 : 100)
				}
			}
		};
		var _ = -1,
			v = 300,
			b = 300,
			w = "undefined" == typeof cr_is_preview ? 200 : 0,
			x = !0,
			S = !1,
			T = 0,
			C = 0,
			k = "undefined" == typeof cr_is_preview ? 3e3 : 300,
			O = null,
			A = null,
			E = 0;
		i.prototype.draw_c2_splash_loader = function(t) {
			if (!y) {
				for (var e = Math.ceil(this.width), i = Math.ceil(this.height), n = (this.devicePixelRatio, this.loaderlogos.logo), a = this.loaderlogos.powered, o = this.loaderlogos.website, h = 0; 4 > h; ++h)
					if (!n[h].complete || !a[h].complete || !o[h].complete) return;
				0 === E && (_ = Date.now());
				var c, l, u = Date.now(),
					p = !1,
					d = t;
				x || S ? (t.clearRect(0, 0, e, i), r(e, i), d = A, p = !0, x && 1 === E && (_ = Date.now())) : t.globalAlpha = 1, d.fillStyle = "#333333", d.fillRect(0, 0, e, i), this.cssHeight > 256 ? (c = cr.clamp(.22 * i, 105, .6 * e), l = .25 * c, d.drawImage(s(a, c), .5 * e - c / 2, .2 * i - l / 2, c, l), c = Math.min(.395 * i, .95 * e), l = c, d.drawImage(s(n, c), .5 * e - c / 2, .485 * i - l / 2, c, l), c = cr.clamp(.22 * i, 105, .6 * e), l = .25 * c, d.drawImage(s(o, c), .5 * e - c / 2, .868 * i - l / 2, c, l), d.fillStyle = "#3C3C3C", c = e, l = Math.max(.005 * i, 2), d.fillRect(0, .8 * i - l / 2, c, l), d.fillStyle = f ? "red" : "#E0FF65", c = e * this.progress, d.fillRect(.5 * e - c / 2, .8 * i - l / 2, c, l)) : (c = .55 * i, l = c, d.drawImage(s(n, c), .5 * e - c / 2, .45 * i - l / 2, c, l), d.fillStyle = "#3C3C3C", c = e, l = Math.max(.005 * i, 2), d.fillRect(0, .85 * i - l / 2, c, l), d.fillStyle = f ? "red" : "#E0FF65", c = e * this.progress, d.fillRect(.5 * e - c / 2, .85 * i - l / 2, c, l)), p && (x ? t.globalAlpha = 0 === E ? 0 : Math.min((u - _) / v, 1) : S && (t.globalAlpha = Math.max(1 - (u - C) / b, 0)), t.drawImage(O, 0, 0, e, i)), x && u - _ >= v && E >= 2 && (x = !1, T = u), !x && u - T >= k && !S && this.progress >= 1 && (S = !0, C = u), S && u - C >= b + w && (y = !0, O = null, A = null, this.loaderlogos = null), ++E
			}
		}, i.prototype.go_loading_finished = function() {
			this.overlay_canvas && (this.canvas.parentNode.removeChild(this.overlay_canvas), this.overlay_ctx = null, this.overlay_canvas = null), this.start_time = Date.now(), this.last_fps_time = cr.performance_now();
			var t, e, i;
			if (this.uses_loader_layout)
				for (t = 0, e = this.types_by_index.length; e > t; t++) i = this.types_by_index[t], i.is_family || i.isOnLoaderLayout || !i.plugin.is_world || (i.onCreate(), cr.seal(i));
			else this.isloading = !1;
			for (t = 0, e = this.layouts_by_index.length; e > t; t++) this.layouts_by_index[t].createGlobalNonWorlds();
			if (this.fullscreen_mode >= 2) {
				var r = this.original_width / this.original_height,
					s = this.width / this.height;
				this.aspect_scale = 2 !== this.fullscreen_mode && s > r || 2 === this.fullscreen_mode && r > s ? this.height / this.original_height : this.width / this.original_width
			}
			for (this.first_layout ? this.layouts[this.first_layout].startRunning() : this.layouts_by_index[0].startRunning(), this.uses_loader_layout || (this.loadingprogress = 1, this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null)), navigator.splashscreen && navigator.splashscreen.hide && navigator.splashscreen.hide(), t = 0, e = this.types_by_index.length; e > t; t++) i = this.types_by_index[t], i.onAppBegin && i.onAppBegin();
			document.hidden || document.webkitHidden || document.mozHidden || document.msHidden ? window.cr_setSuspended(!0) : this.tick(!1), this.isDirectCanvas && AppMobi.webview.execute("onGameReady();")
		}, i.prototype.tick = function(i, r, s) {
			if (this.running_layout) {
				var n = cr.performance_now(),
					a = n;
				if (s || !this.isSuspended || i) {
					i || (p ? this.raf_id = p(this.tickFunc) : this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16));
					var o = r || n,
						h = this.fullscreen_mode,
						c = (document.mozFullScreen || document.webkitIsFullScreen || document.fullScreen || !!document.msFullscreenElement) && !this.isCordova;
					if ((c || this.isNodeFullscreen) && this.fullscreen_scaling > 0 && (h = this.fullscreen_scaling), h > 0 && (!this.isiOS || window.self !== window.top)) {
						var l = window.innerWidth,
							u = window.innerHeight;
						(this.lastWindowWidth !== l || this.lastWindowHeight !== u) && this.setSize(t(), e())
					}
					if (this.isDomFree || (c ? (this.firstInFullscreen || (this.fullscreenOldMarginCss = jQuery(this.canvas).css("margin") || "0", this.firstInFullscreen = !0), this.isChrome || this.isNWjs || jQuery(this.canvas).css({
							"margin-left": "" + Math.floor((screen.width - this.width / this.devicePixelRatio) / 2) + "px",
							"margin-top": "" + Math.floor((screen.height - this.height / this.devicePixelRatio) / 2) + "px"
						})) : this.firstInFullscreen ? (this.isChrome || this.isNWjs || jQuery(this.canvas).css("margin", this.fullscreenOldMarginCss), this.fullscreenOldMarginCss = "", this.firstInFullscreen = !1, 0 === this.fullscreen_mode && this.setSize(Math.round(this.oldWidth / this.devicePixelRatio), Math.round(this.oldHeight / this.devicePixelRatio), !0)) : (this.oldWidth = this.width, this.oldHeight = this.height)), this.isloading) {
						var d = this.areAllTexturesAndSoundsLoaded();
						this.loadingprogress = this.progress, d && (this.isloading = !1, this.progress = 1, this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null))
					}
					this.logic(o), !this.redraw && !this.isCocoonJs || this.is_WebGL_context_lost || this.suspendDrawing || i || (this.redraw = !1, this.glwrap ? this.drawGL() : this.draw(), this.snapshotCanvas && (this.canvas && this.canvas.toDataURL && (this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]), window.cr_onSnapshot && window.cr_onSnapshot(this.snapshotData), this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null)), this.snapshotCanvas = null)), this.hit_breakpoint || (this.tickcount++, this.execcount++, this.framecount++), this.logictime += cr.performance_now() - a
				}
			}
		}, i.prototype.logic = function(t) {
			var e, i, r, s, n, a, o, h, c;
			if (t - this.last_fps_time >= 1e3 && (this.last_fps_time += 1e3, t - this.last_fps_time >= 1e3 && (this.last_fps_time = t), this.fps = this.framecount, this.framecount = 0, this.cpuutilisation = this.logictime, this.logictime = 0), 0 !== this.last_tick_time) {
				var l = t - this.last_tick_time;
				0 > l && (l = 0), this.dt1 = l / 1e3, this.dt1 > .5 ? this.dt1 = 0 : this.dt1 > .1 && (this.dt1 = .1)
			}
			this.last_tick_time = t, this.dt = this.dt1 * this.timescale, this.kahanTime.add(this.dt), this.wallTime.add(this.dt1);
			var u = (document.mozFullScreen || document.webkitIsFullScreen || document.fullScreen || !!document.msFullscreenElement || this.isNodeFullscreen) && !this.isCordova;
			if (this.fullscreen_mode >= 2 || u && this.fullscreen_scaling > 0) {
				var p = this.original_width / this.original_height,
					d = this.width / this.height,
					f = this.fullscreen_mode;
				u && this.fullscreen_scaling > 0 && (f = this.fullscreen_scaling), this.aspect_scale = 2 !== f && d > p || 2 === f && p > d ? this.height / this.original_height : this.width / this.original_width, this.running_layout && (this.running_layout.scrollToX(this.running_layout.scrollX), this.running_layout.scrollToY(this.running_layout.scrollY))
			} else this.aspect_scale = this.isRetina ? this.devicePixelRatio : 1;
			this.ClearDeathRow(), this.isInOnDestroy++, this.system.runWaits(), this.isInOnDestroy--, this.ClearDeathRow(), this.isInOnDestroy++;
			var g = this.objects_to_pretick.valuesRef();
			for (e = 0, i = g.length; i > e; e++) g[e].pretick();
			for (e = 0, i = this.types_by_index.length; i > e; e++)
				if (o = this.types_by_index[e], !o.is_family && (o.behaviors.length || o.families.length))
					for (r = 0, s = o.instances.length; s > r; r++)
						for (h = o.instances[r], n = 0, a = h.behavior_insts.length; a > n; n++) h.behavior_insts[n].tick();
			for (e = 0, i = this.types_by_index.length; i > e; e++)
				if (o = this.types_by_index[e], !o.is_family && (o.behaviors.length || o.families.length))
					for (r = 0, s = o.instances.length; s > r; r++)
						for (h = o.instances[r], n = 0, a = h.behavior_insts.length; a > n; n++) c = h.behavior_insts[n], c.posttick && c.posttick();
			for (g = this.objects_to_tick.valuesRef(), e = 0, i = g.length; i > e; e++) g[e].tick();
			for (this.isInOnDestroy--, this.handleSaveLoad(), e = 0; this.changelayout && e++ < 10;) this.doChangeLayout(this.changelayout);
			for (e = 0, i = this.eventsheets_by_index.length; i > e; e++) this.eventsheets_by_index[e].hasRun = !1;
			for (this.running_layout.event_sheet && this.running_layout.event_sheet.run(), cr.clearArray(this.registered_collisions), this.layout_first_tick = !1, this.isInOnDestroy++, e = 0, i = this.types_by_index.length; i > e; e++)
				if (o = this.types_by_index[e], !o.is_family && (o.behaviors.length || o.families.length))
					for (r = 0, s = o.instances.length; s > r; r++) {
						var h = o.instances[r];
						for (n = 0, a = h.behavior_insts.length; a > n; n++) c = h.behavior_insts[n], c.tick2 && c.tick2()
					}
				for (g = this.objects_to_tick2.valuesRef(), e = 0, i = g.length; i > e; e++) g[e].tick2();
			this.isInOnDestroy--
		}, i.prototype.doChangeLayout = function(t) {
			var e = this.running_layout;
			this.running_layout.stopRunning();
			var i, r, s, n, a, o, h, c, l;
			if (this.glwrap)
				for (i = 0, r = this.types_by_index.length; r > i; i++) h = this.types_by_index[i], h.is_family || !h.unloadTextures || h.global && 0 !== h.instances.length || -1 !== t.initial_types.indexOf(h) || h.unloadTextures();
			for (e == t && cr.clearArray(this.system.waits), cr.clearArray(this.registered_collisions), t.startRunning(), i = 0, r = this.types_by_index.length; r > i; i++)
				if (h = this.types_by_index[i], h.global || h.plugin.singleglobal)
					for (s = 0, n = h.instances.length; n > s; s++)
						if (c = h.instances[s], c.onLayoutChange && c.onLayoutChange(), c.behavior_insts)
							for (a = 0, o = c.behavior_insts.length; o > a; a++) l = c.behavior_insts[a], l.onLayoutChange && l.onLayoutChange();
			this.redraw = !0, this.layout_first_tick = !0, this.ClearDeathRow()
		}, i.prototype.pretickMe = function(t) {
			this.objects_to_pretick.add(t)
		}, i.prototype.unpretickMe = function(t) {
			this.objects_to_pretick.remove(t)
		}, i.prototype.tickMe = function(t) {
			this.objects_to_tick.add(t)
		}, i.prototype.untickMe = function(t) {
			this.objects_to_tick.remove(t)
		}, i.prototype.tick2Me = function(t) {
			this.objects_to_tick2.add(t)
		}, i.prototype.untick2Me = function(t) {
			this.objects_to_tick2.remove(t)
		}, i.prototype.getDt = function(t) {
			return t && -1 !== t.my_timescale ? this.dt1 * t.my_timescale : this.dt
		}, i.prototype.draw = function() {
			this.running_layout.draw(this.ctx), this.isDirectCanvas && this.ctx.present()
		}, i.prototype.drawGL = function() {
			this.enableFrontToBack && (this.earlyz_index = 1, this.running_layout.drawGL_earlyZPass(this.glwrap)), this.running_layout.drawGL(this.glwrap), this.glwrap.present()
		}, i.prototype.addDestroyCallback = function(t) {
			t && this.destroycallbacks.push(t)
		}, i.prototype.removeDestroyCallback = function(t) {
			cr.arrayFindRemove(this.destroycallbacks, t)
		}, i.prototype.getObjectByUID = function(t) {
			var e = t.toString();
			return this.objectsByUid.hasOwnProperty(e) ? this.objectsByUid[e] : null
		};
		var I = [];
		i.prototype.DestroyInstance = function(t) {
			var e, i, r = t.type,
				s = r.name,
				a = this.deathRow.hasOwnProperty(s),
				o = null;
			if (a) {
				if (o = this.deathRow[s], o.contains(t)) return
			} else o = n(), this.deathRow[s] = o;
			if (o.add(t), this.hasPendingInstances = !0, t.is_contained)
				for (e = 0, i = t.siblings.length; i > e; e++) this.DestroyInstance(t.siblings[e]);
			this.isInClearDeathRow && o.values_cache.push(t), this.isEndingLayout || (this.isInOnDestroy++, this.trigger(Object.getPrototypeOf(t.type.plugin).cnds.OnDestroyed, t), this.isInOnDestroy--)
		}, i.prototype.ClearDeathRow = function() {
			if (this.hasPendingInstances) {
				var t, e, i, r, s, n;
				for (this.isInClearDeathRow = !0, i = 0, s = this.createRow.length; s > i; ++i)
					for (t = this.createRow[i], e = t.type, e.instances.push(t), r = 0, n = e.families.length; n > r; ++r) e.families[r].instances.push(t), e.families[r].stale_iids = !0;
				cr.clearArray(this.createRow), this.IterateDeathRow(), cr.wipe(this.deathRow), this.isInClearDeathRow = !1, this.hasPendingInstances = !1
			}
		}, i.prototype.IterateDeathRow = function() {
			for (var t in this.deathRow) this.deathRow.hasOwnProperty(t) && this.ClearDeathRowForType(this.deathRow[t])
		}, i.prototype.ClearDeathRowForType = function(t) {
			var e, i, r, s, n, o, h, c, l = t.valuesRef(),
				u = l[0].type;
			for (cr.arrayRemoveAllFromObjectSet(u.instances, t), u.stale_iids = !0, 0 === u.instances.length && (u.any_instance_parallaxed = !1), e = 0, i = u.families.length; i > e; ++e) o = u.families[e], cr.arrayRemoveAllFromObjectSet(o.instances, t), o.stale_iids = !0;
			for (e = 0, i = this.system.waits.length; i > e; ++e)
				if (n = this.system.waits[e], n.sols.hasOwnProperty(u.index) && cr.arrayRemoveAllFromObjectSet(n.sols[u.index].insts, t), !u.is_family)
					for (r = 0, s = u.families.length; s > r; ++r) o = u.families[r], n.sols.hasOwnProperty(o.index) && cr.arrayRemoveAllFromObjectSet(n.sols[o.index].insts, t);
			var p = l[0].layer;
			if (p) {
				if (p.useRenderCells)
					for (h = p.instances, e = 0, i = h.length; i > e; ++e) c = h[e], t.contains(c) && (c.update_bbox(), p.render_grid.update(c, c.rendercells, null), c.rendercells.set(0, 0, -1, -1));
				cr.arrayRemoveAllFromObjectSet(p.instances, t), p.setZIndicesStaleFrom(0)
			}
			for (e = 0; e < l.length; ++e) this.ClearDeathRowForSingleInstance(l[e], u);
			a(t), this.redraw = !0
		}, i.prototype.ClearDeathRowForSingleInstance = function(t, e) {
			var i, r, s;
			for (i = 0, r = this.destroycallbacks.length; r > i; ++i) this.destroycallbacks[i](t);
			t.collcells && e.collision_grid.update(t, t.collcells, null);
			var n = t.layer;
			if (n && n.removeFromInstanceList(t, !0), t.behavior_insts)
				for (i = 0, r = t.behavior_insts.length; r > i; ++i) s = t.behavior_insts[i], s.onDestroy && s.onDestroy(), s.behavior.my_instances.remove(t);
			this.objects_to_pretick.remove(t), this.objects_to_tick.remove(t), this.objects_to_tick2.remove(t), t.onDestroy && t.onDestroy(), this.objectsByUid.hasOwnProperty(t.uid.toString()) && delete this.objectsByUid[t.uid.toString()], this.objectcount--, e.deadCache.length < 100 && e.deadCache.push(t)
		}, i.prototype.createInstance = function(t, e, i, r) {
			if (t.is_family) {
				var s = cr.floor(Math.random() * t.members.length);
				return this.createInstance(t.members[s], e, i, r)
			}
			return t.default_instance ? this.createInstanceFromInit(t.default_instance, e, !1, i, r, !1) : null
		};
		var P = [];
		i.prototype.createInstanceFromInit = function(t, e, i, r, s, n) {
			var a, o, h, c, l;
			if (!t) return null;
			var u = this.types_by_index[t[1]],
				p = u.plugin.is_world;
			if (this.isloading && p && !u.isOnLoaderLayout) return null;
			if (p && !this.glwrap && 11 === t[0][11]) return null;
			var d = e;
			p || (e = null);
			var f;
			for (u.deadCache.length ? (f = u.deadCache.pop(), f.recycled = !0, u.plugin.Instance.call(f, u)) : (f = new u.plugin.Instance(u), f.recycled = !1), f.uid = !i || n || this.objectsByUid.hasOwnProperty(t[2].toString()) ? this.next_uid++ : t[2], this.objectsByUid[f.uid.toString()] = f, f.puid = this.next_puid++, f.iid = u.instances.length, a = 0, o = this.createRow.length; o > a; ++a) this.createRow[a].type === u && f.iid++;
			f.get_iid = cr.inst_get_iid, f.toString = cr.inst_toString;
			var g = t[3];
			if (f.recycled) cr.wipe(f.extra);
			else {
				if (f.extra = {}, "undefined" != typeof cr_is_preview)
					for (f.instance_var_names = [], f.instance_var_names.length = g.length, a = 0, o = g.length; o > a; a++) f.instance_var_names[a] = g[a][1];
				f.instance_vars = [], f.instance_vars.length = g.length
			}
			for (a = 0, o = g.length; o > a; a++) f.instance_vars[a] = g[a][0];
			if (p) {
				var m = t[0];
				if (f.x = cr.is_undefined(r) ? m[0] : r, f.y = cr.is_undefined(s) ? m[1] : s, f.z = m[2], f.width = m[3], f.height = m[4], f.depth = m[5], f.angle = m[6], f.opacity = m[7], f.hotspotX = m[8], f.hotspotY = m[9], f.blend_mode = m[10], l = m[11], !this.glwrap && u.effect_types.length && (f.blend_mode = l), f.compositeOp = cr.effectToCompositeOp(f.blend_mode), this.gl && cr.setGLBlend(f, f.blend_mode, this.gl), f.recycled) {
					for (a = 0, o = m[12].length; o > a; a++)
						for (h = 0, c = m[12][a].length; c > h; h++) f.effect_params[a][h] = m[12][a][h];
					f.bbox.set(0, 0, 0, 0), f.collcells.set(0, 0, -1, -1), f.rendercells.set(0, 0, -1, -1), f.bquad.set_from_rect(f.bbox), cr.clearArray(f.bbox_changed_callbacks)
				} else {
					for (f.effect_params = m[12].slice(0), a = 0, o = f.effect_params.length; o > a; a++) f.effect_params[a] = m[12][a].slice(0);
					f.active_effect_types = [], f.active_effect_flags = [], f.active_effect_flags.length = u.effect_types.length, f.bbox = new cr.rect(0, 0, 0, 0), f.collcells = new cr.rect(0, 0, -1, -1), f.rendercells = new cr.rect(0, 0, -1, -1), f.bquad = new cr.quad, f.bbox_changed_callbacks = [], f.set_bbox_changed = cr.set_bbox_changed, f.add_bbox_changed_callback = cr.add_bbox_changed_callback, f.contains_pt = cr.inst_contains_pt, f.update_bbox = cr.update_bbox, f.update_render_cell = cr.update_render_cell, f.update_collision_cell = cr.update_collision_cell, f.get_zindex = cr.inst_get_zindex
				}
				for (f.tilemap_exists = !1, f.tilemap_width = 0, f.tilemap_height = 0, f.tilemap_data = null, 14 === m.length && (f.tilemap_exists = !0, f.tilemap_width = m[13][0], f.tilemap_height = m[13][1], f.tilemap_data = m[13][2]), a = 0, o = u.effect_types.length; o > a; a++) f.active_effect_flags[a] = !0;
				f.shaders_preserve_opaqueness = !0, f.updateActiveEffects = cr.inst_updateActiveEffects, f.updateActiveEffects(), f.uses_shaders = !!f.active_effect_types.length, f.bbox_changed = !0, f.cell_changed = !0, u.any_cell_changed = !0, f.visible = !0, f.my_timescale = -1, f.layer = e, f.zindex = e.instances.length, f.earlyz_index = 0, "undefined" == typeof f.collision_poly && (f.collision_poly = null), f.collisionsEnabled = !0, this.redraw = !0
			}
			var y, _;
			for (cr.clearArray(P), a = 0, o = u.families.length; o > a; a++) P.push.apply(P, u.families[a].behaviors);
			if (P.push.apply(P, u.behaviors), f.recycled)
				for (a = 0, o = P.length; o > a; a++) {
					var v = P[a];
					for (_ = f.behavior_insts[a], _.recycled = !0, v.behavior.Instance.call(_, v, f), y = t[4][a], h = 0, c = y.length; c > h; h++) _.properties[h] = y[h];
					_.onCreate(), v.behavior.my_instances.add(f)
				} else
					for (f.behavior_insts = [], a = 0, o = P.length; o > a; a++) {
						var v = P[a],
							_ = new v.behavior.Instance(v, f);
						_.recycled = !1, _.properties = t[4][a].slice(0), _.onCreate(), cr.seal(_), f.behavior_insts.push(_), v.behavior.my_instances.add(f)
					}
			if (y = t[5], f.recycled)
				for (a = 0, o = y.length; o > a; a++) f.properties[a] = y[a];
			else f.properties = y.slice(0);
			if (this.createRow.push(f), this.hasPendingInstances = !0, e && (e.appendToInstanceList(f, !0), (1 !== e.parallaxX || 1 !== e.parallaxY) && (u.any_instance_parallaxed = !0)), this.objectcount++, u.is_contained) {
				if (f.is_contained = !0, f.recycled ? cr.clearArray(f.siblings) : f.siblings = [], !i && !n) {
					for (a = 0, o = u.container.length; o > a; a++)
						if (u.container[a] !== u) {
							if (!u.container[a].default_instance) return null;
							f.siblings.push(this.createInstanceFromInit(u.container[a].default_instance, d, !1, p ? f.x : r, p ? f.y : s, !0))
						}
					for (a = 0, o = f.siblings.length; o > a; a++)
						for (f.siblings[a].siblings.push(f), h = 0; o > h; h++) a !== h && f.siblings[a].siblings.push(f.siblings[h])
				}
			} else f.is_contained = !1, f.siblings = null;
			for (f.onCreate(), f.recycled || cr.seal(f), a = 0, o = f.behavior_insts.length; o > a; a++) f.behavior_insts[a].postCreate && f.behavior_insts[a].postCreate();
			return f
		}, i.prototype.getLayerByName = function(t) {
			var e, i;
			for (e = 0, i = this.running_layout.layers.length; i > e; e++) {
				var r = this.running_layout.layers[e];
				if (cr.equals_nocase(r.name, t)) return r
			}
			return null
		}, i.prototype.getLayerByNumber = function(t) {
			return t = cr.floor(t), 0 > t && (t = 0), t >= this.running_layout.layers.length && (t = this.running_layout.layers.length - 1), this.running_layout.layers[t]
		}, i.prototype.getLayer = function(t) {
			return cr.is_number(t) ? this.getLayerByNumber(t) : this.getLayerByName(t.toString())
		}, i.prototype.clearSol = function(t) {
			var e, i;
			for (e = 0, i = t.length; i > e; e++) t[e].getCurrentSol().select_all = !0
		}, i.prototype.pushCleanSol = function(t) {
			var e, i;
			for (e = 0, i = t.length; i > e; e++) t[e].pushCleanSol()
		}, i.prototype.pushCopySol = function(t) {
			var e, i;
			for (e = 0, i = t.length; i > e; e++) t[e].pushCopySol()
		}, i.prototype.popSol = function(t) {
			var e, i;
			for (e = 0, i = t.length; i > e; e++) t[e].popSol()
		}, i.prototype.updateAllCells = function(t) {
			if (t.any_cell_changed) {
				var e, i, r = t.instances;
				for (e = 0, i = r.length; i > e; ++e) r[e].update_collision_cell();
				var s = this.createRow;
				for (e = 0, i = s.length; i > e; ++e) s[e].type === t && s[e].update_collision_cell();
				t.any_cell_changed = !1
			}
		}, i.prototype.getCollisionCandidates = function(t, e, i, r) {
			var s, n, a, o = t ? 1 !== t.parallaxX || 1 !== t.parallaxY : !1;
			if (e.is_family)
				for (s = 0, n = e.members.length; n > s; ++s) a = e.members[s], o || a.any_instance_parallaxed ? cr.appendArray(r, a.instances) : (this.updateAllCells(a), a.collision_grid.queryRange(i, r));
			else o || e.any_instance_parallaxed ? cr.appendArray(r, e.instances) : (this.updateAllCells(e), e.collision_grid.queryRange(i, r))
		}, i.prototype.getTypesCollisionCandidates = function(t, e, i, r) {
			var s, n;
			for (s = 0, n = e.length; n > s; ++s) this.getCollisionCandidates(t, e[s], i, r)
		}, i.prototype.getSolidCollisionCandidates = function(t, e, i) {
			var r = this.getSolidBehavior();
			return r ? void this.getTypesCollisionCandidates(t, r.my_types, e, i) : null
		}, i.prototype.getJumpthruCollisionCandidates = function(t, e, i) {
			var r = this.getJumpthruBehavior();
			return r ? void this.getTypesCollisionCandidates(t, r.my_types, e, i) : null
		}, i.prototype.testAndSelectCanvasPointOverlap = function(t, e, i, r) {
			var s, n, a, o, h, c, l = t.getCurrentSol();
			if (l.select_all) {
				for (r || (l.select_all = !1, cr.clearArray(l.instances)), s = 0, o = t.instances.length; o > s; s++)
					if (a = t.instances[s], a.update_bbox(), h = a.layer.canvasToLayer(e, i, !0), c = a.layer.canvasToLayer(e, i, !1), a.contains_pt(h, c)) {
						if (r) return !1;
						l.instances.push(a)
					}
			} else {
				for (n = 0, s = 0, o = l.instances.length; o > s; s++)
					if (a = l.instances[s], a.update_bbox(), h = a.layer.canvasToLayer(e, i, !0), c = a.layer.canvasToLayer(e, i, !1), a.contains_pt(h, c)) {
						if (r) return !1;
						l.instances[n] = l.instances[s], n++
					}
				r || (l.instances.length = n)
			}
			return t.applySolToContainer(), r ? !0 : l.hasObjects()
		}, i.prototype.testOverlap = function(t, e) {
			if (!(t && e && t !== e && t.collisionsEnabled && e.collisionsEnabled)) return !1;
			t.update_bbox(), e.update_bbox();
			var i, r, s, n, a, o, h, c, l, u, p = t.layer,
				d = e.layer,
				f = p !== d && (p.parallaxX !== d.parallaxX || d.parallaxY !== d.parallaxY || p.scale !== d.scale || p.angle !== d.angle || p.zoomRate !== d.zoomRate);
			if (f) {
				for (h = t.collision_poly && !t.collision_poly.is_empty(), c = e.collision_poly && !e.collision_poly.is_empty(), h ? (t.collision_poly.cache_poly(t.width, t.height, t.angle), this.temp_poly.set_from_poly(t.collision_poly)) : this.temp_poly.set_from_quad(t.bquad, t.x, t.y, t.width, t.height), l = this.temp_poly, c ? (e.collision_poly.cache_poly(e.width, e.height, e.angle), this.temp_poly2.set_from_poly(e.collision_poly)) : this.temp_poly2.set_from_quad(e.bquad, e.x, e.y, e.width, e.height), u = this.temp_poly2, i = 0, r = l.pts_count; r > i; i++) s = 2 * i, n = s + 1, a = l.pts_cache[s], o = l.pts_cache[n], l.pts_cache[s] = p.layerToCanvas(a + t.x, o + t.y, !0), l.pts_cache[n] = p.layerToCanvas(a + t.x, o + t.y, !1);
				for (l.update_bbox(), i = 0, r = u.pts_count; r > i; i++) s = 2 * i, n = s + 1, a = u.pts_cache[s], o = u.pts_cache[n], u.pts_cache[s] = d.layerToCanvas(a + e.x, o + e.y, !0), u.pts_cache[n] = d.layerToCanvas(a + e.x, o + e.y, !1);
				return u.update_bbox(), l.intersects_poly(u, 0, 0)
			}
			return t.bbox.intersects_rect(e.bbox) && t.bquad.intersects_quad(e.bquad) ? t.tilemap_exists && e.tilemap_exists ? !1 : t.tilemap_exists ? this.testTilemapOverlap(t, e) : e.tilemap_exists ? this.testTilemapOverlap(e, t) : (h = t.collision_poly && !t.collision_poly.is_empty(), c = e.collision_poly && !e.collision_poly.is_empty(), h || c ? (h ? (t.collision_poly.cache_poly(t.width, t.height, t.angle), l = t.collision_poly) : (this.temp_poly.set_from_quad(t.bquad, t.x, t.y, t.width, t.height), l = this.temp_poly), c ? (e.collision_poly.cache_poly(e.width, e.height, e.angle), u = e.collision_poly) : (this.temp_poly.set_from_quad(e.bquad, e.x, e.y, e.width, e.height), u = this.temp_poly), l.intersects_poly(u, e.x - t.x, e.y - t.y)) : !0) : !1
		};
		var L = new cr.quad,
			R = new cr.rect(0, 0, 0, 0),
			M = [];
		i.prototype.testTilemapOverlap = function(t, e) {
			var i, r, s, n, a = e.bbox,
				o = t.x,
				h = t.y;
			t.getCollisionRectCandidates(a, M);
			var c = M,
				l = e.collision_poly && !e.collision_poly.is_empty();
			for (i = 0, r = c.length; r > i; ++i)
				if (s = c[i], n = s.rc, a.intersects_rect_off(n, o, h) && (L.set_from_rect(n), L.offset(o, h), L.intersects_quad(e.bquad)))
					if (l) {
						if (e.collision_poly.cache_poly(e.width, e.height, e.angle), s.poly) {
							if (s.poly.intersects_poly(e.collision_poly, e.x - (o + n.left), e.y - (h + n.top))) return cr.clearArray(M), !0
						} else if (this.temp_poly.set_from_quad(L, 0, 0, n.right - n.left, n.bottom - n.top), this.temp_poly.intersects_poly(e.collision_poly, e.x, e.y)) return cr.clearArray(M), !0
					} else {
						if (!s.poly) return cr.clearArray(M), !0;
						if (this.temp_poly.set_from_quad(e.bquad, 0, 0, e.width, e.height), s.poly.intersects_poly(this.temp_poly, -(o + n.left), -(h + n.top))) return cr.clearArray(M), !0
					}
			return cr.clearArray(M), !1
		}, i.prototype.testRectOverlap = function(t, e) {
			if (!e || !e.collisionsEnabled) return !1;
			e.update_bbox(); {
				var i;
				e.layer
			}
			if (!e.bbox.intersects_rect(t)) return !1;
			if (e.tilemap_exists) {
				e.getCollisionRectCandidates(t, M);
				var r, s, n, a, o = M,
					h = e.x,
					c = e.y;
				for (r = 0, s = o.length; s > r; ++r)
					if (n = o[r], a = n.rc, t.intersects_rect_off(a, h, c)) {
						if (!n.poly) return cr.clearArray(M), !0;
						if (this.temp_poly.set_from_rect(t, 0, 0), n.poly.intersects_poly(this.temp_poly, -(h + a.left), -(c + a.top))) return cr.clearArray(M), !0
					}
				return cr.clearArray(M), !1
			}
			return L.set_from_rect(t), e.bquad.intersects_quad(L) ? (i = e.collision_poly && !e.collision_poly.is_empty()) ? (e.collision_poly.cache_poly(e.width, e.height, e.angle), L.offset(-t.left, -t.top), this.temp_poly.set_from_quad(L, 0, 0, 1, 1), e.collision_poly.intersects_poly(this.temp_poly, t.left - e.x, t.top - e.y)) : !0 : !1
		}, i.prototype.testSegmentOverlap = function(t, e, i, r, s) {
			if (!s || !s.collisionsEnabled) return !1;
			s.update_bbox(); {
				var n;
				s.layer
			}
			if (R.set(cr.min(t, i), cr.min(e, r), cr.max(t, i), cr.max(e, r)), !s.bbox.intersects_rect(R)) return !1;
			if (s.tilemap_exists) {
				s.getCollisionRectCandidates(R, M);
				var a, o, h, c, l = M,
					u = s.x,
					p = s.y;
				for (a = 0, o = l.length; o > a; ++a)
					if (h = l[a], c = h.rc, R.intersects_rect_off(c, u, p) && (L.set_from_rect(c), L.offset(u, p), L.intersects_segment(t, e, i, r))) {
						if (!h.poly) return cr.clearArray(M), !0;
						if (h.poly.intersects_segment(u + c.left, p + c.top, t, e, i, r)) return cr.clearArray(M), !0
					}
				return cr.clearArray(M), !1
			}
			return s.bquad.intersects_segment(t, e, i, r) ? (n = s.collision_poly && !s.collision_poly.is_empty()) ? (s.collision_poly.cache_poly(s.width, s.height, s.angle), s.collision_poly.intersects_segment(s.x, s.y, t, e, i, r)) : !0 : !1
		}, i.prototype.typeHasBehavior = function(t, e) {
			if (!e) return !1;
			var i, r, s, n, a;
			for (i = 0, r = t.behaviors.length; r > i; i++)
				if (t.behaviors[i].behavior instanceof e) return !0;
			if (!t.is_family)
				for (i = 0, r = t.families.length; r > i; i++)
					for (a = t.families[i], s = 0, n = a.behaviors.length; n > s; s++)
						if (a.behaviors[s].behavior instanceof e) return !0;
			return !1
		}, i.prototype.typeHasNoSaveBehavior = function(t) {
			return this.typeHasBehavior(t, cr.behaviors.NoSave)
		}, i.prototype.typeHasPersistBehavior = function(t) {
			return this.typeHasBehavior(t, cr.behaviors.Persist)
		}, i.prototype.getSolidBehavior = function() {
			return this.solidBehavior
		}, i.prototype.getJumpthruBehavior = function() {
			return this.jumpthruBehavior
		};
		var N = [];
		i.prototype.testOverlapSolid = function(t) {
			var e, i, r;
			for (t.update_bbox(), this.getSolidCollisionCandidates(t.layer, t.bbox, N), e = 0, i = N.length; i > e; ++e)
				if (r = N[e], r.extra.solidEnabled && this.testOverlap(t, r)) return cr.clearArray(N), r;
			return cr.clearArray(N), null
		}, i.prototype.testRectOverlapSolid = function(t) {
			var e, i, r;
			for (this.getSolidCollisionCandidates(null, t, N), e = 0, i = N.length; i > e; ++e)
				if (r = N[e], r.extra.solidEnabled && this.testRectOverlap(t, r)) return cr.clearArray(N), r;
			return cr.clearArray(N), null
		};
		var B = [];
		i.prototype.testOverlapJumpThru = function(t, e) {
			var i = null;
			e && (i = B, cr.clearArray(i)), t.update_bbox(), this.getJumpthruCollisionCandidates(t.layer, t.bbox, N);
			var r, s, n;
			for (r = 0, s = N.length; s > r; ++r)
				if (n = N[r], n.extra.jumpthruEnabled && this.testOverlap(t, n)) {
					if (!e) return cr.clearArray(N), n;
					i.push(n)
				}
			return cr.clearArray(N), i
		}, i.prototype.pushOutSolid = function(t, e, i, r, s, n) {
			var a, o = r || 50,
				h = t.x,
				c = t.y,
				l = null,
				u = null;
			for (a = 0; o > a; a++)
				if (t.x = h + e * a, t.y = c + i * a, t.set_bbox_changed(), !this.testOverlap(t, l) && (l = this.testOverlapSolid(t), l && (u = l), !l && (s && (l = n ? this.testOverlap(t, n) ? n : null : this.testOverlapJumpThru(t), l && (u = l)), !l))) return u && this.pushInFractional(t, e, i, u, 16), !0;
			return t.x = h, t.y = c, t.set_bbox_changed(), !1
		}, i.prototype.pushOut = function(t, e, i, r, s) {
			var n, a = r || 50,
				o = t.x,
				h = t.y;
			for (n = 0; a > n; n++)
				if (t.x = o + e * n, t.y = h + i * n, t.set_bbox_changed(), !this.testOverlap(t, s)) return !0;
			return t.x = o, t.y = h, t.set_bbox_changed(), !1
		}, i.prototype.pushInFractional = function(t, e, i, r, s) {
			for (var n, a = 2, o = !1, h = !1, c = t.x, l = t.y; s >= a;) n = 1 / a, a *= 2, t.x += e * n * (o ? 1 : -1), t.y += i * n * (o ? 1 : -1), t.set_bbox_changed(), this.testOverlap(t, r) ? (o = !0, h = !0) : (o = !1, h = !1, c = t.x, l = t.y);
			h && (t.x = c, t.y = l, t.set_bbox_changed())
		}, i.prototype.pushOutSolidNearest = function(t, e) {
			var i = cr.is_undefined(e) ? 100 : e,
				r = 0,
				s = t.x,
				n = t.y,
				a = 0,
				o = 0,
				h = 0,
				c = this.testOverlapSolid(t);
			if (!c) return !0;
			for (; i >= r;) {
				switch (a) {
					case 0:
						o = 0, h = -1, r++;
						break;
					case 1:
						o = 1, h = -1;
						break;
					case 2:
						o = 1, h = 0;
						break;
					case 3:
						o = 1, h = 1;
						break;
					case 4:
						o = 0, h = 1;
						break;
					case 5:
						o = -1, h = 1;
						break;
					case 6:
						o = -1, h = 0;
						break;
					case 7:
						o = -1, h = -1
				}
				if (a = (a + 1) % 8, t.x = cr.floor(s + o * r), t.y = cr.floor(n + h * r), t.set_bbox_changed(), !this.testOverlap(t, c) && (c = this.testOverlapSolid(t), !c)) return !0
			}
			return t.x = s, t.y = n, t.set_bbox_changed(), !1
		}, i.prototype.registerCollision = function(t, e) {
			t.collisionsEnabled && e.collisionsEnabled && this.registered_collisions.push([t, e])
		}, i.prototype.checkRegisteredCollision = function(t, e) {
			var i, r, s;
			for (i = 0, r = this.registered_collisions.length; r > i; i++)
				if (s = this.registered_collisions[i], s[0] == t && s[1] == e || s[0] == e && s[1] == t) return !0;
			return !1
		}, i.prototype.calculateSolidBounceAngle = function(t, e, i, r) {
			var s = t.x,
				n = t.y,
				a = cr.max(10, cr.distanceTo(e, i, s, n)),
				o = cr.angleTo(e, i, s, n),
				h = r || this.testOverlapSolid(t);
			if (!h) return cr.clamp_angle(o + cr.PI);
			var c, l, u, p, d = h,
				f = cr.to_radians(5);
			for (c = 1; 36 > c; c++)
				if (l = o - c * f, t.x = e + Math.cos(l) * a, t.y = i + Math.sin(l) * a, t.set_bbox_changed(), !this.testOverlap(t, d) && (d = r ? null : this.testOverlapSolid(t), !d)) {
					u = l;
					break
				}
			36 === c && (u = cr.clamp_angle(o + cr.PI));
			var d = h;
			for (c = 1; 36 > c; c++)
				if (l = o + c * f, t.x = e + Math.cos(l) * a, t.y = i + Math.sin(l) * a, t.set_bbox_changed(), !this.testOverlap(t, d) && (d = r ? null : this.testOverlapSolid(t), !d)) {
					p = l;
					break
				}
			if (36 === c && (p = cr.clamp_angle(o + cr.PI)), t.x = s, t.y = n, t.set_bbox_changed(), p === u) return p;
			var g, m = cr.angleDiff(p, u) / 2;
			g = cr.clamp_angle(cr.angleClockwise(p, u) ? u + m + cr.PI : p + m);
			var y = Math.cos(o),
				_ = Math.sin(o),
				v = Math.cos(g),
				b = Math.sin(g),
				w = y * v + _ * b,
				x = y - 2 * w * v,
				S = _ - 2 * w * b;
			return cr.angleTo(0, 0, x, S)
		};
		var F = -1;
		i.prototype.trigger = function(t, e, i) {
			if (!this.running_layout) return !1;
			var r = this.running_layout.event_sheet;
			if (!r) return !1;
			var s, n, a, o = !1;
			F++;
			var h = r.deep_includes;
			for (n = 0, a = h.length; a > n; ++n) s = this.triggerOnSheet(t, e, h[n], i), o = o || s;
			return s = this.triggerOnSheet(t, e, r, i), o = o || s, F--, o
		}, i.prototype.triggerOnSheet = function(t, e, i, r) {
			var s, n, a, o, h = !1;
			if (e)
				for (a = this.triggerOnSheetForTypeName(t, e, e.type.name, i, r), h = h || a, o = e.type.families, s = 0, n = o.length; n > s; ++s) a = this.triggerOnSheetForTypeName(t, e, o[s].name, i, r), h = h || a;
			else a = this.triggerOnSheetForTypeName(t, e, "system", i, r), h = h || a;
			return h
		}, i.prototype.triggerOnSheetForTypeName = function(t, e, i, r, s) {
			var n, a, o, h, c = !1,
				l = !1,
				u = "undefined" != typeof s,
				p = u ? r.fasttriggers : r.triggers,
				d = p[i];
			if (!d) return c;
			var f = null;
			for (n = 0, a = d.length; a > n; ++n)
				if (d[n].method == t) {
					f = d[n].evs;
					break
				}
			if (!f) return c;
			var g;
			if (g = u ? f[s] : f, !g) return null;
			for (n = 0, a = g.length; a > n; n++) o = g[n][0], h = g[n][1], l = this.executeSingleTrigger(e, i, o, h), c = c || l;
			return c
		}, i.prototype.executeSingleTrigger = function(t, e, i, r) {
			var s, n, a = !1;
			this.trigger_depth++;
			var o = this.getCurrentEventStack().current_event;
			o && this.pushCleanSol(o.solModifiersIncludingParents);
			var h = this.trigger_depth > 1;
			this.pushCleanSol(i.solModifiersIncludingParents), h && this.pushLocalVarStack();
			var c = this.pushEventStack(i);
			if (c.current_event = i, t) {
				var l = this.types[e].getCurrentSol();
				l.select_all = !1, cr.clearArray(l.instances), l.instances[0] = t, this.types[e].applySolToContainer()
			}
			var u = !0;
			if (i.parent) {
				for (var p = c.temp_parents_arr, d = i.parent; d;) p.push(d), d = d.parent;
				for (p.reverse(), s = 0, n = p.length; n > s; s++)
					if (!p[s].run_pretrigger()) {
						u = !1;
						break
					}
			}
			return u && (this.execcount++, i.orblock ? i.run_orblocktrigger(r) : i.run(), a = a || c.last_event_true), this.popEventStack(), h && this.popLocalVarStack(), this.popSol(i.solModifiersIncludingParents), o && this.popSol(o.solModifiersIncludingParents), this.hasPendingInstances && 0 === this.isInOnDestroy && 0 === F && !this.isRunningEvents && this.ClearDeathRow(), this.trigger_depth--, a
		}, i.prototype.getCurrentCondition = function() {
			var t = this.getCurrentEventStack();
			return t.current_event.conditions[t.cndindex]
		}, i.prototype.getCurrentAction = function() {
			var t = this.getCurrentEventStack();
			return t.current_event.actions[t.actindex]
		}, i.prototype.pushLocalVarStack = function() {
			this.localvar_stack_index++, this.localvar_stack_index >= this.localvar_stack.length && this.localvar_stack.push([])
		}, i.prototype.popLocalVarStack = function() {
			this.localvar_stack_index--
		}, i.prototype.getCurrentLocalVarStack = function() {
			return this.localvar_stack[this.localvar_stack_index]
		}, i.prototype.pushEventStack = function(t) {
			this.event_stack_index++, this.event_stack_index >= this.event_stack.length && this.event_stack.push(new cr.eventStackFrame);
			var e = this.getCurrentEventStack();
			return e.reset(t), e
		}, i.prototype.popEventStack = function() {
			this.event_stack_index--
		}, i.prototype.getCurrentEventStack = function() {
			return this.event_stack[this.event_stack_index]
		}, i.prototype.pushLoopStack = function(t) {
			this.loop_stack_index++, this.loop_stack_index >= this.loop_stack.length && this.loop_stack.push(cr.seal({
				name: t,
				index: 0,
				stopped: !1
			}));
			var e = this.getCurrentLoop();
			return e.name = t, e.index = 0, e.stopped = !1, e
		}, i.prototype.popLoopStack = function() {
			this.loop_stack_index--
		}, i.prototype.getCurrentLoop = function() {
			return this.loop_stack[this.loop_stack_index]
		}, i.prototype.getEventVariableByName = function(t, e) {
			for (var i, r, s, n, a, o; e;) {
				for (i = 0, r = e.subevents.length; r > i; i++)
					if (o = e.subevents[i], o instanceof cr.eventvariable && cr.equals_nocase(t, o.name)) return o;
				e = e.parent
			}
			for (i = 0, r = this.eventsheets_by_index.length; r > i; i++)
				for (a = this.eventsheets_by_index[i], s = 0, n = a.events.length; n > s; s++)
					if (o = a.events[s], o instanceof cr.eventvariable && cr.equals_nocase(t, o.name)) return o;
			return null
		}, i.prototype.getLayoutBySid = function(t) {
			var e, i;
			for (e = 0, i = this.layouts_by_index.length; i > e; e++)
				if (this.layouts_by_index[e].sid === t) return this.layouts_by_index[e];
			return null
		}, i.prototype.getObjectTypeBySid = function(t) {
			var e, i;
			for (e = 0, i = this.types_by_index.length; i > e; e++)
				if (this.types_by_index[e].sid === t) return this.types_by_index[e];
			return null
		}, i.prototype.getGroupBySid = function(t) {
			var e, i;
			for (e = 0, i = this.allGroups.length; i > e; e++)
				if (this.allGroups[e].sid === t) return this.allGroups[e];
			return null
		}, i.prototype.doCanvasSnapshot = function(t, e) {
			this.snapshotCanvas = [t, e], this.redraw = !0
		}, i.prototype.signalContinuousPreview = function() {
			this.signalledContinuousPreview = !0
		}, i.prototype.handleSaveLoad = function() {
			var t = this,
				e = this.saveToSlot,
				i = this.lastSaveJson,
				r = this.loadFromSlot,
				s = !1;
			if (this.signalledContinuousPreview && (s = !0, e = "__c2_continuouspreview", this.signalledContinuousPreview = !1), e.length) {
				if (this.ClearDeathRow(), i = this.saveToJSONString(), window.indexedDB && !this.isCocoonJs) h(e, i, function() {
					cr.logexport("Saved state to IndexedDB storage (" + i.length + " bytes)"), t.lastSaveJson = i, t.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null), t.lastSaveJson = "", s && l()
				}, function(r) {
					try {
						localStorage.setItem("__c2save_" + e, i), cr.logexport("Saved state to WebStorage (" + i.length + " bytes)"), t.lastSaveJson = i, t.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null), t.lastSaveJson = "", s && l()
					} catch (n) {
						cr.logexport("Failed to save game state: " + r + "; " + n)
					}
				});
				else try {
					localStorage.setItem("__c2save_" + e, i), cr.logexport("Saved state to WebStorage (" + i.length + " bytes)"), t.lastSaveJson = i, this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null), t.lastSaveJson = "", s && l()
				} catch (n) {
					cr.logexport("Error saving to WebStorage: " + n)
				}
				this.saveToSlot = "", this.loadFromSlot = "", this.loadFromJson = ""
			}
			if (r.length) {
				if (window.indexedDB && !this.isCocoonJs) c(r, function(e) {
					e ? (t.loadFromJson = e, cr.logexport("Loaded state from IndexedDB storage (" + t.loadFromJson.length + " bytes)")) : (t.loadFromJson = localStorage.getItem("__c2save_" + r) || "", cr.logexport("Loaded state from WebStorage (" + t.loadFromJson.length + " bytes)")), t.suspendDrawing = !1, t.loadFromJson.length || t.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null)
				}, function() {
					t.loadFromJson = localStorage.getItem("__c2save_" + r) || "", cr.logexport("Loaded state from WebStorage (" + t.loadFromJson.length + " bytes)"), t.suspendDrawing = !1, t.loadFromJson.length || t.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null)
				});
				else {
					try {
						this.loadFromJson = localStorage.getItem("__c2save_" + r) || "", cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)")
					} catch (n) {
						this.loadFromJson = ""
					}
					this.suspendDrawing = !1, t.loadFromJson.length || t.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null)
				}
				this.loadFromSlot = "", this.saveToSlot = ""
			}
			this.loadFromJson.length && (this.ClearDeathRow(), this.loadFromJSONString(this.loadFromJson), this.lastSaveJson = this.loadFromJson, this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null), this.lastSaveJson = "", this.loadFromJson = "")
		}, i.prototype.saveToJSONString = function() {
			var t, e, i, r, s, n, a, o, h, c, l, p, d = {
				c2save: !0,
				version: 1,
				rt: {
					time: this.kahanTime.sum,
					walltime: this.wallTime.sum,
					timescale: this.timescale,
					tickcount: this.tickcount,
					execcount: this.execcount,
					next_uid: this.next_uid,
					running_layout: this.running_layout.sid,
					start_time_offset: Date.now() - this.start_time
				},
				types: {},
				layouts: {},
				events: {
					groups: {},
					cnds: {},
					acts: {},
					vars: {}
				}
			};
			for (t = 0, e = this.types_by_index.length; e > t; t++)
				if (s = this.types_by_index[t], !s.is_family && !this.typeHasNoSaveBehavior(s)) {
					for (a = {
							instances: []
						}, cr.hasAnyOwnProperty(s.extra) && (a.ex = u(s.extra)), i = 0, r = s.instances.length; r > i; i++) a.instances.push(this.saveInstanceToJSON(s.instances[i]));
					d.types[s.sid.toString()] = a
				}
			for (t = 0, e = this.layouts_by_index.length; e > t; t++) n = this.layouts_by_index[t], d.layouts[n.sid.toString()] = n.saveToJSON();
			var f = d.events.groups;
			for (t = 0, e = this.allGroups.length; e > t; t++) o = this.allGroups[t], f[o.sid.toString()] = this.groups_by_name[o.group_name].group_active;
			var g = d.events.cnds;
			for (p in this.cndsBySid) this.cndsBySid.hasOwnProperty(p) && (h = this.cndsBySid[p], cr.hasAnyOwnProperty(h.extra) && (g[p] = {
				ex: u(h.extra)
			}));
			var m = d.events.acts;
			for (p in this.actsBySid) this.actsBySid.hasOwnProperty(p) && (c = this.actsBySid[p], cr.hasAnyOwnProperty(c.extra) && (m[p] = {
				ex: c.extra
			}));
			var y = d.events.vars;
			for (p in this.varsBySid) this.varsBySid.hasOwnProperty(p) && (l = this.varsBySid[p], l.is_constant || l.parent && !l.is_static || (y[p] = l.data));
			return d.system = this.system.saveToJSON(), JSON.stringify(d)
		}, i.prototype.refreshUidMap = function() {
			var t, e, i, r, s, n;
			for (this.objectsByUid = {}, t = 0, e = this.types_by_index.length; e > t; t++)
				if (i = this.types_by_index[t], !i.is_family)
					for (r = 0, s = i.instances.length; s > r; r++) n = i.instances[r], this.objectsByUid[n.uid.toString()] = n
		}, i.prototype.loadFromJSONString = function(t) {
			var e = JSON.parse(t);
			if (e.c2save && !(e.version > 1)) {
				this.isLoadingState = !0;
				var i = e.rt;
				this.kahanTime.reset(), this.kahanTime.sum = i.time, this.wallTime.reset(), this.wallTime.sum = i.walltime || 0, this.timescale = i.timescale, this.tickcount = i.tickcount, this.execcount = i.execcount, this.start_time = Date.now() - i.start_time_offset;
				var r = i.running_layout;
				if (r !== this.running_layout.sid) {
					var s = this.getLayoutBySid(r);
					if (!s) return;
					this.doChangeLayout(s)
				}
				var n, a, o, h, c, l, u, p, d, f, g, m, y, _, v, b, w, x = e.types;
				for (u in x)
					if (x.hasOwnProperty(u)) {
						if (p = this.getObjectTypeBySid(parseInt(u, 10)), !p || p.is_family || this.typeHasNoSaveBehavior(p)) continue;
						for (x[u].ex ? p.extra = x[u].ex : cr.wipe(p.extra), d = p.instances, f = x[u].instances, n = 0, a = cr.min(d.length, f.length); a > n; n++) this.loadInstanceFromJSON(d[n], f[n]);
						for (n = f.length, a = d.length; a > n; n++) this.DestroyInstance(d[n]);
						for (n = d.length, a = f.length; a > n; n++) _ = null, (!p.plugin.is_world || (_ = this.running_layout.getLayerBySid(f[n].w.l))) && (g = this.createInstanceFromInit(p.default_instance, _, !1, 0, 0, !0), this.loadInstanceFromJSON(g, f[n]));
						p.stale_iids = !0
					}
				this.ClearDeathRow(), this.refreshUidMap();
				var S = e.layouts;
				for (u in S)
					if (S.hasOwnProperty(u)) {
						if (y = this.getLayoutBySid(parseInt(u, 10)), !y) continue;
						y.loadFromJSON(S[u])
					}
				var T = e.events.groups;
				for (u in T) T.hasOwnProperty(u) && (v = this.getGroupBySid(parseInt(u, 10)), v && this.groups_by_name[v.group_name] && this.groups_by_name[v.group_name].setGroupActive(T[u]));
				var C = e.events.cnds;
				for (u in C) C.hasOwnProperty(u) && this.cndsBySid.hasOwnProperty(u) && (this.cndsBySid[u].extra = C[u].ex);
				var k = e.events.acts;
				for (u in k) k.hasOwnProperty(u) && this.actsBySid.hasOwnProperty(u) && (this.actsBySid[u].extra = k[u].ex);
				var O = e.events.vars;
				for (u in O) O.hasOwnProperty(u) && this.varsBySid.hasOwnProperty(u) && (this.varsBySid[u].data = O[u]);
				for (this.next_uid = i.next_uid, this.isLoadingState = !1, this.system.loadFromJSON(e.system), n = 0, a = this.types_by_index.length; a > n; n++)
					if (p = this.types_by_index[n], !p.is_family)
						for (o = 0, h = p.instances.length; h > o; o++) {
							if (g = p.instances[o], p.is_contained)
								for (b = g.get_iid(), cr.clearArray(g.siblings), c = 0, l = p.container.length; l > c; c++) w = p.container[c], p !== w && g.siblings.push(w.instances[b]);
							if (g.afterLoad && g.afterLoad(), g.behavior_insts)
								for (c = 0, l = g.behavior_insts.length; l > c; c++) m = g.behavior_insts[c], m.afterLoad && m.afterLoad()
						}
					this.redraw = !0
			}
		}, i.prototype.saveInstanceToJSON = function(t, e) {
			var i, r, s, n, a, o = t.type,
				h = o.plugin,
				c = {};
			if (e ? c.c2 = !0 : c.uid = t.uid, cr.hasAnyOwnProperty(t.extra) && (c.ex = u(t.extra)), t.instance_vars && t.instance_vars.length)
				for (c.ivs = {}, i = 0, r = t.instance_vars.length; r > i; i++) c.ivs[t.type.instvar_sids[i].toString()] = t.instance_vars[i];
			if (h.is_world) {
				if (s = {
						x: t.x,
						y: t.y,
						w: t.width,
						h: t.height,
						l: t.layer.sid,
						zi: t.get_zindex()
					}, 0 !== t.angle && (s.a = t.angle), 1 !== t.opacity && (s.o = t.opacity), .5 !== t.hotspotX && (s.hX = t.hotspotX), .5 !== t.hotspotY && (s.hY = t.hotspotY), 0 !== t.blend_mode && (s.bm = t.blend_mode), t.visible || (s.v = t.visible), t.collisionsEnabled || (s.ce = t.collisionsEnabled), -1 !== t.my_timescale && (s.mts = t.my_timescale), o.effect_types.length)
					for (s.fx = [], i = 0, r = o.effect_types.length; r > i; i++) a = o.effect_types[i], s.fx.push({
						name: a.name,
						active: t.active_effect_flags[a.index],
						params: t.effect_params[a.index]
					});
				c.w = s
			}
			if (t.behavior_insts && t.behavior_insts.length)
				for (c.behs = {}, i = 0, r = t.behavior_insts.length; r > i; i++) n = t.behavior_insts[i], n.saveToJSON && (c.behs[n.type.sid.toString()] = n.saveToJSON());
			return t.saveToJSON && (c.data = t.saveToJSON()), c
		}, i.prototype.getInstanceVarIndexBySid = function(t, e) {
			var i, r;
			for (i = 0, r = t.instvar_sids.length; r > i; i++)
				if (t.instvar_sids[i] === e) return i;
			return -1
		}, i.prototype.getBehaviorIndexBySid = function(t, e) {
			var i, r;
			for (i = 0, r = t.behavior_insts.length; r > i; i++)
				if (t.behavior_insts[i].type.sid === e) return i;
			return -1
		}, i.prototype.loadInstanceFromJSON = function(t, e, i) {
			var r, s, n, a, o, h, c, l, u, p, d = t.type,
				f = d.plugin;
			if (i) {
				if (!e.c2) return
			} else t.uid = e.uid;
			if (e.ex ? t.extra = e.ex : cr.wipe(t.extra), o = e.ivs)
				for (r in o)
					if (o.hasOwnProperty(r)) {
						if (a = this.getInstanceVarIndexBySid(d, parseInt(r, 10)), 0 > a || a >= t.instance_vars.length) continue;
						t.instance_vars[a] = o[r]
					}
			if (f.is_world) {
				if (h = e.w, t.layer.sid !== h.l && (p = t.layer, t.layer = this.running_layout.getLayerBySid(h.l), t.layer ? (p.removeFromInstanceList(t, !0), t.layer.appendToInstanceList(t, !0), t.set_bbox_changed(), t.layer.setZIndicesStaleFrom(0)) : (t.layer = p, i || this.DestroyInstance(t))), t.x = h.x, t.y = h.y, t.width = h.w, t.height = h.h, t.zindex = h.zi, t.angle = h.hasOwnProperty("a") ? h.a : 0, t.opacity = h.hasOwnProperty("o") ? h.o : 1, t.hotspotX = h.hasOwnProperty("hX") ? h.hX : .5, t.hotspotY = h.hasOwnProperty("hY") ? h.hY : .5, t.visible = h.hasOwnProperty("v") ? h.v : !0, t.collisionsEnabled = h.hasOwnProperty("ce") ? h.ce : !0, t.my_timescale = h.hasOwnProperty("mts") ? h.mts : -1, t.blend_mode = h.hasOwnProperty("bm") ? h.bm : 0, t.compositeOp = cr.effectToCompositeOp(t.blend_mode), this.gl && cr.setGLBlend(t, t.blend_mode, this.gl), t.set_bbox_changed(), h.hasOwnProperty("fx"))
					for (s = 0, n = h.fx.length; n > s; s++) c = d.getEffectIndexByName(h.fx[s].name), 0 > c || (t.active_effect_flags[c] = h.fx[s].active, t.effect_params[c] = h.fx[s].params);
				t.updateActiveEffects()
			}
			if (l = e.behs)
				for (r in l)
					if (l.hasOwnProperty(r)) {
						if (u = this.getBehaviorIndexBySid(t, parseInt(r, 10)), 0 > u) continue;
						t.behavior_insts[u].loadFromJSON(l[r])
					}
			e.data && t.loadFromJSON(e.data)
		}, cr.runtime = i, cr.createRuntime = function(t) {
			return new i(document.getElementById(t))
		}, cr.createDCRuntime = function(t, e) {
			return new i({
				dc: !0,
				width: t,
				height: e
			})
		}, window.cr_createRuntime = cr.createRuntime, window.cr_createDCRuntime = cr.createDCRuntime, window.createCocoonJSRuntime = function() {
			window.c2cocoonjs = !0;
			var t = document.createElement("screencanvas") || document.createElement("canvas");
			t.screencanvas = !0, document.body.appendChild(t);
			var e = new i(t);
			return window.c2runtime = e, window.addEventListener("orientationchange", function() {
				window.c2runtime.setSize(window.innerWidth, window.innerHeight)
			}), window.c2runtime.setSize(window.innerWidth, window.innerHeight), e
		}, window.createEjectaRuntime = function() {
			var t = document.getElementById("canvas"),
				e = new i(t);
			return window.c2runtime = e, window.c2runtime.setSize(window.innerWidth, window.innerHeight), e
		}
	}(), window.cr_getC2Runtime = function() {
		var t = document.getElementById("c2canvas");
		return t ? t.c2runtime : window.c2runtime ? window.c2runtime : null
	}, window.cr_getSnapshot = function(t, e) {
		var i = window.cr_getC2Runtime();
		i && i.doCanvasSnapshot(t, e)
	}, window.cr_sizeCanvas = function(t, e) {
		if (0 !== t && 0 !== e) {
			var i = window.cr_getC2Runtime();
			i && i.setSize(t, e)
		}
	}, window.cr_setSuspended = function(t) {
		var e = window.cr_getC2Runtime();
		e && e.setSuspended(t)
	},
	function() {
		function t(t, e) {
			this.runtime = t, this.event_sheet = null, this.scrollX = this.runtime.original_width / 2, this.scrollY = this.runtime.original_height / 2, this.scale = 1, this.angle = 0, this.first_visit = !0, this.name = e[0], this.width = e[1], this.height = e[2], this.unbounded_scrolling = e[3], this.sheetname = e[4], this.sid = e[5];
			var i, r, s = e[6];
			for (this.layers = [], this.initial_types = [], i = 0, r = s.length; r > i; i++) {
				var n = new cr.layer(this, s[i]);
				n.number = i, cr.seal(n), this.layers.push(n)
			}
			var a = e[7];
			for (this.initial_nonworld = [], i = 0, r = a.length; r > i; i++) {
				var o = a[i],
					h = this.runtime.types_by_index[o[1]];
				h.default_instance || (h.default_instance = o), this.initial_nonworld.push(o), -1 === this.initial_types.indexOf(h) && this.initial_types.push(h)
			}
			for (this.effect_types = [], this.active_effect_types = [], this.shaders_preserve_opaqueness = !0, this.effect_params = [], i = 0, r = e[8].length; r > i; i++) this.effect_types.push({
				id: e[8][i][0],
				name: e[8][i][1],
				shaderindex: -1,
				preservesOpaqueness: !1,
				active: !0,
				index: i
			}), this.effect_params.push(e[8][i][2].slice(0));
			this.updateActiveEffects(), this.rcTex = new cr.rect(0, 0, 1, 1), this.rcTex2 = new cr.rect(0, 0, 1, 1), this.persist_data = {}
		}

		function e(t, e) {
			return t.zindex - e.zindex
		}

		function i(t, e) {
			this.layout = t, this.runtime = t.runtime, this.instances = [], this.scale = 1, this.angle = 0, this.disableAngle = !1, this.tmprect = new cr.rect(0, 0, 0, 0), this.tmpquad = new cr.quad, this.viewLeft = 0, this.viewRight = 0, this.viewTop = 0, this.viewBottom = 0, this.zindices_stale = !1, this.zindices_stale_from = -1, this.clear_earlyz_index = 0, this.name = e[0], this.index = e[1], this.sid = e[2], this.visible = e[3], this.background_color = e[4], this.transparent = e[5], this.parallaxX = e[6], this.parallaxY = e[7], this.opacity = e[8], this.forceOwnTexture = e[9], this.useRenderCells = e[10], this.zoomRate = e[11], this.blend_mode = e[12], this.effect_fallback = e[13], this.compositeOp = "source-over", this.srcBlend = 0, this.destBlend = 0, this.render_grid = null, this.last_render_list = r(), this.render_list_stale = !0, this.last_render_cells = new cr.rect(0, 0, -1, -1), this.cur_render_cells = new cr.rect(0, 0, -1, -1), this.useRenderCells && (this.render_grid = new cr.RenderGrid(this.runtime.original_width, this.runtime.original_height)), this.render_offscreen = !1;
			var i, s, n = e[14];
			for (this.startup_initial_instances = [], this.initial_instances = [], this.created_globals = [], i = 0, s = n.length; s > i; i++) {
				var a = n[i],
					o = this.runtime.types_by_index[a[1]];
				o.default_instance || (o.default_instance = a, o.default_layerindex = this.index), this.initial_instances.push(a), -1 === this.layout.initial_types.indexOf(o) && this.layout.initial_types.push(o)
			}
			for (cr.shallowAssignArray(this.startup_initial_instances, this.initial_instances), this.effect_types = [], this.active_effect_types = [], this.shaders_preserve_opaqueness = !0, this.effect_params = [], i = 0, s = e[15].length; s > i; i++) this.effect_types.push({
				id: e[15][i][0],
				name: e[15][i][1],
				shaderindex: -1,
				preservesOpaqueness: !1,
				active: !0,
				index: i
			}), this.effect_params.push(e[15][i][2].slice(0));
			this.updateActiveEffects(), this.rcTex = new cr.rect(0, 0, 1, 1), this.rcTex2 = new cr.rect(0, 0, 1, 1)
		}

		function r() {
			return u.length ? u.pop() : []
		}

		function s(t) {
			cr.clearArray(t), u.push(t)
		}

		function n(t, e, i) {
			var r, s, n = 0,
				a = 0,
				o = 0,
				h = t.length,
				c = e.length;
			for (i.length = h + c; h > n && c > a; ++o) r = t[n], s = e[a], r.zindex < s.zindex ? (i[o] = r, ++n) : (i[o] = s, ++a);
			for (; h > n; ++n, ++o) i[o] = t[n];
			for (; c > a; ++a, ++o) i[o] = e[a]
		}

		function a(t, e) {
			var i, a, o, h, c;
			for (i = 0, a = t.length; a - 1 > i; i += 2) o = t[i], h = t[i + 1], c = r(), n(o, h, c), e || (s(o), s(h)), p.push(c);
			a % 2 === 1 && (e ? (o = r(), cr.shallowAssignArray(o, t[a - 1]), p.push(o)) : p.push(t[a - 1])), cr.shallowAssignArray(t, p), cr.clearArray(p)
		}

		function o(t) {
			for (var e = !0; t.length > 1;) a(t, e), e = !1;
			return t[0]
		}
		t.prototype.saveObjectToPersist = function(t) {
			var e = t.type.sid.toString();
			this.persist_data.hasOwnProperty(e) || (this.persist_data[e] = []);
			var i = this.persist_data[e];
			i.push(this.runtime.saveInstanceToJSON(t))
		}, t.prototype.hasOpaqueBottomLayer = function() {
			var t = this.layers[0];
			return !t.transparent && 1 === t.opacity && !t.forceOwnTexture && t.visible
		}, t.prototype.updateActiveEffects = function() {
			cr.clearArray(this.active_effect_types), this.shaders_preserve_opaqueness = !0;
			var t, e, i;
			for (t = 0, e = this.effect_types.length; e > t; t++) i = this.effect_types[t], i.active && (this.active_effect_types.push(i), i.preservesOpaqueness || (this.shaders_preserve_opaqueness = !1))
		}, t.prototype.getEffectByName = function(t) {
			var e, i, r;
			for (e = 0, i = this.effect_types.length; i > e; e++)
				if (r = this.effect_types[e], r.name === t) return r;
			return null
		};
		var h = [],
			c = !0;
		t.prototype.startRunning = function() {
			this.sheetname && (this.event_sheet = this.runtime.eventsheets[this.sheetname], this.event_sheet.updateDeepIncludes()), this.runtime.running_layout = this, this.scrollX = this.runtime.original_width / 2, this.scrollY = this.runtime.original_height / 2;
			var t, i, r, s, n, a, o, l, u, p, d, f, g;
			for (t = 0, r = this.runtime.types_by_index.length; r > t; t++)
				if (n = this.runtime.types_by_index[t], !n.is_family)
					for (a = n.instances, i = 0, s = a.length; s > i; i++)
						if (o = a[i], o.layer) {
							var m = o.layer.number;
							m >= this.layers.length && (m = this.layers.length - 1), o.layer = this.layers[m], -1 === o.layer.instances.indexOf(o) && o.layer.instances.push(o), o.layer.zindices_stale = !0
						}
			if (!c)
				for (t = 0, r = this.layers.length; r > t; ++t) this.layers[t].instances.sort(e);
			var g;
			for (cr.clearArray(h), this.boundScrolling(), t = 0, r = this.layers.length; r > t; t++) g = this.layers[t], g.createInitialInstances(), g.updateViewport(null);
			var y = !1;
			if (!this.first_visit) {
				for (d in this.persist_data)
					if (this.persist_data.hasOwnProperty(d)) {
						if (n = this.runtime.getObjectTypeBySid(parseInt(d, 10)), !n || n.is_family || !this.runtime.typeHasPersistBehavior(n)) continue;
						for (f = this.persist_data[d], t = 0, r = f.length; r > t; t++) g = null, (!n.plugin.is_world || (g = this.getLayerBySid(f[t].w.l))) && (o = this.runtime.createInstanceFromInit(n.default_instance, g, !1, 0, 0, !0), this.runtime.loadInstanceFromJSON(o, f[t]), y = !0, h.push(o));
						cr.clearArray(f)
					}
				for (t = 0, r = this.layers.length; r > t; t++) this.layers[t].instances.sort(e), this.layers[t].zindices_stale = !0
			}
			for (y && (this.runtime.ClearDeathRow(), this.runtime.refreshUidMap()), t = 0; t < h.length; t++)
				if (o = h[t], o.type.is_contained)
					for (l = o.get_iid(), i = 0, s = o.type.container.length; s > i; i++) u = o.type.container[i], o.type !== u && (u.instances.length > l ? o.siblings.push(u.instances[l]) : u.default_instance && (p = this.runtime.createInstanceFromInit(u.default_instance, o.layer, !0, o.x, o.y, !0), this.runtime.ClearDeathRow(), u.updateIIDs(), o.siblings.push(p), h.push(p)));
			for (t = 0, r = this.initial_nonworld.length; r > t; t++) o = this.runtime.createInstanceFromInit(this.initial_nonworld[t], null, !0);
			if (this.runtime.changelayout = null, this.runtime.ClearDeathRow(), this.runtime.ctx && !this.runtime.isDomFree)
				for (t = 0, r = this.runtime.types_by_index.length; r > t; t++) u = this.runtime.types_by_index[t], !u.is_family && u.instances.length && u.preloadCanvas2D && u.preloadCanvas2D(this.runtime.ctx);
			for (t = 0, r = h.length; r > t; t++) o = h[t], this.runtime.trigger(Object.getPrototypeOf(o.type.plugin).cnds.OnCreated, o);
			cr.clearArray(h), this.runtime.isLoadingState || this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null), this.first_visit = !1
		}, t.prototype.createGlobalNonWorlds = function() {
			var t, e, i, r, s, n;
			for (t = 0, e = 0, i = this.initial_nonworld.length; i > t; t++) r = this.initial_nonworld[t], n = this.runtime.types_by_index[r[1]], n.global ? n.is_contained || (s = this.runtime.createInstanceFromInit(r, null, !0)) : (this.initial_nonworld[e] = r, e++);
			cr.truncateArray(this.initial_nonworld, e)
		}, t.prototype.stopRunning = function() {
			this.runtime.isLoadingState || this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null), this.runtime.isEndingLayout = !0, cr.clearArray(this.runtime.system.waits);
			var t, e, i, r, s, n, a;
			if (!this.first_visit)
				for (t = 0, e = this.layers.length; e > t; t++)
					for (this.layers[t].updateZIndices(), s = this.layers[t].instances, i = 0, r = s.length; r > i; i++) n = s[i], n.type.global || this.runtime.typeHasPersistBehavior(n.type) && this.saveObjectToPersist(n);
			for (t = 0, e = this.layers.length; e > t; t++) {
				for (s = this.layers[t].instances, i = 0, r = s.length; r > i; i++) n = s[i], n.type.global || this.runtime.DestroyInstance(n);
				this.runtime.ClearDeathRow(), cr.clearArray(s), this.layers[t].zindices_stale = !0
			}
			for (t = 0, e = this.runtime.types_by_index.length; e > t; t++)
				if (a = this.runtime.types_by_index[t], !(a.global || a.plugin.is_world || a.plugin.singleglobal || a.is_family)) {
					for (i = 0, r = a.instances.length; r > i; i++) this.runtime.DestroyInstance(a.instances[i]);
					this.runtime.ClearDeathRow()
				}
			c = !1, this.runtime.isEndingLayout = !1
		};
		var l = new cr.rect(0, 0, 0, 0);
		t.prototype.recreateInitialObjects = function(t, e, i, r, s) {
			l.set(e, i, r, s);
			var n, a;
			for (n = 0, a = this.layers.length; a > n; n++) this.layers[n].recreateInitialObjects(t, l)
		}, t.prototype.draw = function(t) {
			var e, i = t,
				r = !1,
				s = !this.runtime.fullscreenScalingQuality;
			s && (this.runtime.layout_canvas || (this.runtime.layout_canvas = document.createElement("canvas"), e = this.runtime.layout_canvas, e.width = this.runtime.draw_width, e.height = this.runtime.draw_height, this.runtime.layout_ctx = e.getContext("2d"), r = !0), e = this.runtime.layout_canvas, i = this.runtime.layout_ctx, e.width !== this.runtime.draw_width && (e.width = this.runtime.draw_width, r = !0), e.height !== this.runtime.draw_height && (e.height = this.runtime.draw_height, r = !0), r && (i.webkitImageSmoothingEnabled = this.runtime.linearSampling, i.mozImageSmoothingEnabled = this.runtime.linearSampling, i.msImageSmoothingEnabled = this.runtime.linearSampling, i.imageSmoothingEnabled = this.runtime.linearSampling)), i.globalAlpha = 1, i.globalCompositeOperation = "source-over", this.runtime.alphaBackground && !this.hasOpaqueBottomLayer() && i.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
			var n, a, o;
			for (n = 0, a = this.layers.length; a > n; n++) o = this.layers[n], o.visible && o.opacity > 0 && 11 !== o.blend_mode && (o.instances.length || !o.transparent) ? o.draw(i) : o.updateViewport(null);
			s && t.drawImage(e, 0, 0, this.runtime.width, this.runtime.height)
		}, t.prototype.drawGL_earlyZPass = function(t) {
			t.setEarlyZPass(!0), this.runtime.layout_tex || (this.runtime.layout_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), (this.runtime.layout_tex.c2width !== this.runtime.draw_width || this.runtime.layout_tex.c2height !== this.runtime.draw_height) && (t.deleteTexture(this.runtime.layout_tex), this.runtime.layout_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), t.setRenderingToTexture(this.runtime.layout_tex), this.runtime.fullscreenScalingQuality || t.setSize(this.runtime.draw_width, this.runtime.draw_height);
			var e, i;
			for (e = this.layers.length - 1; e >= 0; --e) i = this.layers[e], i.visible && 1 === i.opacity && i.shaders_preserve_opaqueness && 0 === i.blend_mode && (i.instances.length || !i.transparent) ? i.drawGL_earlyZPass(t) : i.updateViewport(null);
			t.setEarlyZPass(!1)
		}, t.prototype.drawGL = function(t) {
			var e = this.active_effect_types.length > 0 || this.runtime.uses_background_blending || !this.runtime.fullscreenScalingQuality || this.runtime.enableFrontToBack;
			e ? (this.runtime.layout_tex || (this.runtime.layout_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), (this.runtime.layout_tex.c2width !== this.runtime.draw_width || this.runtime.layout_tex.c2height !== this.runtime.draw_height) && (t.deleteTexture(this.runtime.layout_tex), this.runtime.layout_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), t.setRenderingToTexture(this.runtime.layout_tex), this.runtime.fullscreenScalingQuality || t.setSize(this.runtime.draw_width, this.runtime.draw_height)) : this.runtime.layout_tex && (t.setRenderingToTexture(null), t.deleteTexture(this.runtime.layout_tex), this.runtime.layout_tex = null), this.runtime.alphaBackground && !this.hasOpaqueBottomLayer() && t.clear(0, 0, 0, 0);
			var i, r, s;
			for (i = 0, r = this.layers.length; r > i; i++) s = this.layers[i], s.visible && s.opacity > 0 && (s.instances.length || !s.transparent) ? s.drawGL(t) : s.updateViewport(null);
			if (e)
				if (0 === this.active_effect_types.length || 1 === this.active_effect_types.length && this.runtime.fullscreenScalingQuality) {
					if (1 === this.active_effect_types.length) {
						var n = this.active_effect_types[0].index;
						t.switchProgram(this.active_effect_types[0].shaderindex), t.setProgramParameters(null, 1 / this.runtime.draw_width, 1 / this.runtime.draw_height, 0, 0, 1, 1, this.scale, this.angle, 0, 0, this.runtime.draw_width / 2, this.runtime.draw_height / 2, this.runtime.kahanTime.sum, this.effect_params[n]), t.programIsAnimated(this.active_effect_types[0].shaderindex) && (this.runtime.redraw = !0)
					} else t.switchProgram(0);
					this.runtime.fullscreenScalingQuality || t.setSize(this.runtime.width, this.runtime.height), t.setRenderingToTexture(null), t.setDepthTestEnabled(!1), t.setOpacity(1), t.setTexture(this.runtime.layout_tex), t.setAlphaBlend(), t.resetModelView(), t.updateModelView();
					var a = this.runtime.width / 2,
						o = this.runtime.height / 2;
					t.quad(-a, o, a, o, a, -o, -a, -o), t.setTexture(null), t.setDepthTestEnabled(!0)
				} else this.renderEffectChain(t, null, null, null)
		}, t.prototype.getRenderTarget = function() {
			return this.active_effect_types.length > 0 || this.runtime.uses_background_blending || !this.runtime.fullscreenScalingQuality || this.runtime.enableFrontToBack ? this.runtime.layout_tex : null
		}, t.prototype.getMinLayerScale = function() {
			var t, e, i, r = this.layers[0].getScale();
			for (t = 1, e = this.layers.length; e > t; t++) i = this.layers[t], (0 !== i.parallaxX || 0 !== i.parallaxY) && i.getScale() < r && (r = i.getScale());
			return r
		}, t.prototype.scrollToX = function(t) {
			if (!this.unbounded_scrolling) {
				var e = this.runtime.draw_width * (1 / this.getMinLayerScale()) / 2;
				t > this.width - e && (t = this.width - e), e > t && (t = e)
			}
			this.scrollX !== t && (this.scrollX = t, this.runtime.redraw = !0)
		}, t.prototype.scrollToY = function(t) {
			if (!this.unbounded_scrolling) {
				var e = this.runtime.draw_height * (1 / this.getMinLayerScale()) / 2;
				t > this.height - e && (t = this.height - e), e > t && (t = e)
			}
			this.scrollY !== t && (this.scrollY = t, this.runtime.redraw = !0)
		}, t.prototype.boundScrolling = function() {
			this.scrollToX(this.scrollX), this.scrollToY(this.scrollY)
		}, t.prototype.renderEffectChain = function(t, e, i, r) {
			var s = i ? i.active_effect_types : e ? e.active_effect_types : this.active_effect_types,
				n = 1,
				a = 0,
				o = 0,
				h = 0,
				c = this.runtime.draw_width,
				l = this.runtime.draw_height;
			i ? (n = i.layer.getScale(), a = i.layer.getAngle(), o = i.layer.viewLeft, h = i.layer.viewTop, c = i.layer.viewRight, l = i.layer.viewBottom) : e && (n = e.getScale(), a = e.getAngle(), o = e.viewLeft, h = e.viewTop, c = e.viewRight, l = e.viewBottom);
			var u, p, d, f, g, m, y = this.runtime.fx_tex,
				_ = 0,
				v = 1,
				b = this.runtime.draw_width,
				w = this.runtime.draw_height,
				x = b / 2,
				S = w / 2,
				T = e ? e.rcTex : this.rcTex,
				C = e ? e.rcTex2 : this.rcTex2,
				k = 0,
				O = 0,
				A = 0,
				E = 0,
				I = b,
				P = b,
				L = w,
				R = w,
				M = 0,
				N = 0,
				B = i ? i.layer.getAngle() : 0;
			if (i) {
				for (u = 0, p = s.length; p > u; u++) M += t.getProgramBoxExtendHorizontal(s[u].shaderindex), N += t.getProgramBoxExtendVertical(s[u].shaderindex);
				var F = i.bbox;
				if (k = e.layerToCanvas(F.left, F.top, !0, !0), A = e.layerToCanvas(F.left, F.top, !1, !0), I = e.layerToCanvas(F.right, F.bottom, !0, !0), L = e.layerToCanvas(F.right, F.bottom, !1, !0), 0 !== B) {
					var j = e.layerToCanvas(F.right, F.top, !0, !0),
						D = e.layerToCanvas(F.right, F.top, !1, !0),
						W = e.layerToCanvas(F.left, F.bottom, !0, !0),
						z = e.layerToCanvas(F.left, F.bottom, !1, !0);
					f = Math.min(k, I, j, W), I = Math.max(k, I, j, W), k = f, f = Math.min(A, L, D, z), L = Math.max(A, L, D, z), A = f
				}
				k -= M, A -= N, I += M, L += N, C.left = k / b, C.top = 1 - A / w, C.right = I / b, C.bottom = 1 - L / w, O = k = cr.floor(k), E = A = cr.floor(A), P = I = cr.ceil(I), R = L = cr.ceil(L), O -= M, E -= N, P += M, R += N, 0 > k && (k = 0), 0 > A && (A = 0), I > b && (I = b), L > w && (L = w), 0 > O && (O = 0), 0 > E && (E = 0), P > b && (P = b), R > w && (R = w), T.left = k / b, T.top = 1 - A / w, T.right = I / b, T.bottom = 1 - L / w
			} else T.left = C.left = 0, T.top = C.top = 0, T.right = C.right = 1, T.bottom = C.bottom = 1;
			var G = i && (t.programUsesDest(s[0].shaderindex) || 0 !== M || 0 !== N || 1 !== i.opacity || i.type.plugin.must_predraw) || e && !i && 1 !== e.opacity;
			t.setAlphaBlend(), G && (y[_] || (y[_] = t.createEmptyTexture(b, w, this.runtime.linearSampling)), (y[_].c2width !== b || y[_].c2height !== w) && (t.deleteTexture(y[_]), y[_] = t.createEmptyTexture(b, w, this.runtime.linearSampling)), t.switchProgram(0), t.setRenderingToTexture(y[_]), m = R - E, g = w - E - m, t.clearRect(O, g, P - O, m), i ? i.drawGL(t) : (t.setTexture(this.runtime.layer_tex), t.setOpacity(e.opacity), t.resetModelView(), t.translate(-x, -S), t.updateModelView(), t.quadTex(k, L, I, L, I, A, k, A, T)), C.left = C.top = 0, C.right = C.bottom = 1, i && (f = T.top, T.top = T.bottom, T.bottom = f), _ = 1, v = 0), t.setOpacity(1);
			var d = s.length - 1,
				U = t.programUsesCrossSampling(s[d].shaderindex) || !e && !i && !this.runtime.fullscreenScalingQuality,
				V = 0;
			for (u = 0, p = s.length; p > u; u++) y[_] || (y[_] = t.createEmptyTexture(b, w, this.runtime.linearSampling)), (y[_].c2width !== b || y[_].c2height !== w) && (t.deleteTexture(y[_]), y[_] = t.createEmptyTexture(b, w, this.runtime.linearSampling)), t.switchProgram(s[u].shaderindex), V = s[u].index, t.programIsAnimated(s[u].shaderindex) && (this.runtime.redraw = !0), 0 != u || G ? (t.setProgramParameters(r, 1 / b, 1 / w, C.left, C.top, C.right, C.bottom, n, a, o, h, (o + c) / 2, (h + l) / 2, this.runtime.kahanTime.sum, i ? i.effect_params[V] : e ? e.effect_params[V] : this.effect_params[V]), t.setTexture(null), u !== d || U ? (t.setRenderingToTexture(y[_]), m = R - E, g = w - E - m, t.clearRect(O, g, P - O, m)) : (i ? t.setBlend(i.srcBlend, i.destBlend) : e && t.setBlend(e.srcBlend, e.destBlend), t.setRenderingToTexture(r)), t.setTexture(y[v]), t.resetModelView(), t.translate(-x, -S), t.updateModelView(), t.quadTex(k, L, I, L, I, A, k, A, T), u !== d || U || t.setTexture(null)) : (t.setRenderingToTexture(y[_]), m = R - E, g = w - E - m, t.clearRect(O, g, P - O, m), i ? (t.setProgramParameters(r, 1 / i.width, 1 / i.height, C.left, C.top, C.right, C.bottom, n, a, o, h, (o + c) / 2, (h + l) / 2, this.runtime.kahanTime.sum, i.effect_params[V]), i.drawGL(t)) : (t.setProgramParameters(r, 1 / b, 1 / w, 0, 0, 1, 1, n, a, o, h, (o + c) / 2, (h + l) / 2, this.runtime.kahanTime.sum, e ? e.effect_params[V] : this.effect_params[V]), t.setTexture(e ? this.runtime.layer_tex : this.runtime.layout_tex), t.resetModelView(), t.translate(-x, -S), t.updateModelView(), t.quadTex(k, L, I, L, I, A, k, A, T)), C.left = C.top = 0, C.right = C.bottom = 1, i && !U && (f = L, L = A, A = f)), _ = 0 === _ ? 1 : 0, v = 0 === _ ? 1 : 0;
			U && (t.switchProgram(0), i ? t.setBlend(i.srcBlend, i.destBlend) : e ? t.setBlend(e.srcBlend, e.destBlend) : this.runtime.fullscreenScalingQuality || (t.setSize(this.runtime.width, this.runtime.height), x = this.runtime.width / 2, S = this.runtime.height / 2, k = 0, A = 0, I = this.runtime.width, L = this.runtime.height), t.setRenderingToTexture(r), t.setTexture(y[v]), t.resetModelView(), t.translate(-x, -S), t.updateModelView(), i && 1 === s.length && !G ? t.quadTex(k, A, I, A, I, L, k, L, T) : t.quadTex(k, L, I, L, I, A, k, A, T), t.setTexture(null))
		}, t.prototype.getLayerBySid = function(t) {
			var e, i;
			for (e = 0, i = this.layers.length; i > e; e++)
				if (this.layers[e].sid === t) return this.layers[e];
			return null
		}, t.prototype.saveToJSON = function() {
			var t, e, i, r, s = {
				sx: this.scrollX,
				sy: this.scrollY,
				s: this.scale,
				a: this.angle,
				w: this.width,
				h: this.height,
				fv: this.first_visit,
				persist: this.persist_data,
				fx: [],
				layers: {}
			};
			for (t = 0, e = this.effect_types.length; e > t; t++) r = this.effect_types[t], s.fx.push({
				name: r.name,
				active: r.active,
				params: this.effect_params[r.index]
			});
			for (t = 0, e = this.layers.length; e > t; t++) i = this.layers[t], s.layers[i.sid.toString()] = i.saveToJSON();
			return s
		}, t.prototype.loadFromJSON = function(t) {
			var e, i, r, s, n;
			this.scrollX = t.sx, this.scrollY = t.sy, this.scale = t.s, this.angle = t.a, this.width = t.w, this.height = t.h, this.persist_data = t.persist, "undefined" != typeof t.fv && (this.first_visit = t.fv);
			var a = t.fx;
			for (e = 0, i = a.length; i > e; e++) r = this.getEffectByName(a[e].name), r && (r.active = a[e].active, this.effect_params[r.index] = a[e].params);
			this.updateActiveEffects();
			var o = t.layers;
			for (s in o)
				if (o.hasOwnProperty(s)) {
					if (n = this.getLayerBySid(parseInt(s, 10)), !n) continue;
					n.loadFromJSON(o[s])
				}
		}, cr.layout = t, i.prototype.updateActiveEffects = function() {
			cr.clearArray(this.active_effect_types), this.shaders_preserve_opaqueness = !0;
			var t, e, i;
			for (t = 0, e = this.effect_types.length; e > t; t++) i = this.effect_types[t], i.active && (this.active_effect_types.push(i), i.preservesOpaqueness || (this.shaders_preserve_opaqueness = !1))
		}, i.prototype.getEffectByName = function(t) {
			var e, i, r;
			for (e = 0, i = this.effect_types.length; i > e; e++)
				if (r = this.effect_types[e], r.name === t) return r;
			return null
		}, i.prototype.createInitialInstances = function() {
			var t, e, i, r, s, n, a, o;
			for (t = 0, e = 0, i = this.initial_instances.length; i > t; t++) s = this.initial_instances[t], n = this.runtime.types_by_index[s[1]], o = this.runtime.typeHasPersistBehavior(n), a = !0, (!o || this.layout.first_visit) && (r = this.runtime.createInstanceFromInit(s, this, !0), h.push(r), r.type.global && (a = !1, this.created_globals.push(r.uid))), a && (this.initial_instances[e] = this.initial_instances[t], e++);
			this.initial_instances.length = e, this.runtime.ClearDeathRow(), !this.runtime.glwrap && this.effect_types.length && (this.blend_mode = this.effect_fallback), this.compositeOp = cr.effectToCompositeOp(this.blend_mode), this.runtime.gl && cr.setGLBlend(this, this.blend_mode, this.runtime.gl), this.render_list_stale = !0
		}, i.prototype.recreateInitialObjects = function(t, e) {
			var i, r, s, n, a, o, h, c, l, u, p, d = this.runtime.types_by_index,
				f = t.is_family,
				g = t.members;
			for (i = 0, r = this.initial_instances.length; r > i; ++i)
				if (s = this.initial_instances[i], a = s[0], o = a[0], h = a[1], e.contains_pt(o, h)) {
					if (n = d[s[1]], n !== t) {
						if (!f) continue;
						if (g.indexOf(n) < 0) continue
					}
					if (c = this.runtime.createInstanceFromInit(s, this, !1), this.runtime.isInOnDestroy++, this.runtime.trigger(Object.getPrototypeOf(n.plugin).cnds.OnCreated, c), c.is_contained)
						for (l = 0, u = c.siblings.length; u > l; l++) p = c.siblings[i], this.runtime.trigger(Object.getPrototypeOf(p.type.plugin).cnds.OnCreated, p);
					this.runtime.isInOnDestroy--
				}
		}, i.prototype.removeFromInstanceList = function(t, e) {
			var i = cr.fastIndexOf(this.instances, t);
			0 > i || (e && this.useRenderCells && t.rendercells && t.rendercells.right >= t.rendercells.left && (t.update_bbox(), this.render_grid.update(t, t.rendercells, null), t.rendercells.set(0, 0, -1, -1)), i === this.instances.length - 1 ? this.instances.pop() : (cr.arrayRemove(this.instances, i), this.setZIndicesStaleFrom(i)), this.render_list_stale = !0)
		}, i.prototype.appendToInstanceList = function(t, e) {
			t.zindex = this.instances.length, this.instances.push(t), e && this.useRenderCells && t.rendercells && t.set_bbox_changed(), this.render_list_stale = !0
		}, i.prototype.prependToInstanceList = function(t, e) {
			this.instances.unshift(t), this.setZIndicesStaleFrom(0), e && this.useRenderCells && t.rendercells && t.set_bbox_changed()
		}, i.prototype.moveInstanceAdjacent = function(t, e, i) {
			var r = t.get_zindex(),
				s = e.get_zindex();
			cr.arrayRemove(this.instances, r), s > r && s--, i && s++, s === this.instances.length ? this.instances.push(t) : this.instances.splice(s, 0, t), this.setZIndicesStaleFrom(s > r ? r : s)
		}, i.prototype.setZIndicesStaleFrom = function(t) {
			-1 === this.zindices_stale_from ? this.zindices_stale_from = t : t < this.zindices_stale_from && (this.zindices_stale_from = t), this.zindices_stale = !0, this.render_list_stale = !0
		}, i.prototype.updateZIndices = function() {
			if (this.zindices_stale) {
				-1 === this.zindices_stale_from && (this.zindices_stale_from = 0);
				var t, e, i;
				if (this.useRenderCells)
					for (t = this.zindices_stale_from, e = this.instances.length; e > t; ++t) i = this.instances[t], i.zindex = t, this.render_grid.markRangeChanged(i.rendercells);
				else
					for (t = this.zindices_stale_from, e = this.instances.length; e > t; ++t) this.instances[t].zindex = t;
				this.zindices_stale = !1, this.zindices_stale_from = -1
			}
		}, i.prototype.getScale = function(t) {
			return this.getNormalScale() * (this.runtime.fullscreenScalingQuality || t ? this.runtime.aspect_scale : 1)
		}, i.prototype.getNormalScale = function() {
			return (this.scale * this.layout.scale - 1) * this.zoomRate + 1
		}, i.prototype.getAngle = function() {
			return this.disableAngle ? 0 : cr.clamp_angle(this.layout.angle + this.angle)
		};
		var u = [],
			p = [],
			d = [];
		i.prototype.getRenderCellInstancesToDraw = function() {
			if (this.updateZIndices(), this.render_grid.queryRange(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom, d), !d.length) return r();
			if (1 === d.length) {
				var t = r();
				return cr.shallowAssignArray(t, d[0]), cr.clearArray(d), t
			}
			var e = o(d);
			return cr.clearArray(d), e
		}, i.prototype.draw = function(t) {
			this.render_offscreen = this.forceOwnTexture || 1 !== this.opacity || 0 !== this.blend_mode;
			var e = this.runtime.canvas,
				i = t,
				r = !1;
			this.render_offscreen && (this.runtime.layer_canvas || (this.runtime.layer_canvas = document.createElement("canvas"), e = this.runtime.layer_canvas, e.width = this.runtime.draw_width, e.height = this.runtime.draw_height, this.runtime.layer_ctx = e.getContext("2d"), r = !0), e = this.runtime.layer_canvas, i = this.runtime.layer_ctx, e.width !== this.runtime.draw_width && (e.width = this.runtime.draw_width, r = !0), e.height !== this.runtime.draw_height && (e.height = this.runtime.draw_height, r = !0), r && (i.webkitImageSmoothingEnabled = this.runtime.linearSampling, i.mozImageSmoothingEnabled = this.runtime.linearSampling, i.msImageSmoothingEnabled = this.runtime.linearSampling, i.imageSmoothingEnabled = this.runtime.linearSampling), this.transparent && i.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height)), i.globalAlpha = 1, i.globalCompositeOperation = "source-over", this.transparent || (i.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")", i.fillRect(0, 0, this.runtime.draw_width, this.runtime.draw_height)), i.save(), this.disableAngle = !0;
			var n = this.canvasToLayer(0, 0, !0, !0),
				a = this.canvasToLayer(0, 0, !1, !0);
			this.disableAngle = !1, this.runtime.pixel_rounding && (n = Math.round(n), a = Math.round(a)), this.rotateViewport(n, a, i);
			var o = this.getScale();
			i.scale(o, o), i.translate(-n, -a);
			var h;
			this.useRenderCells ? (this.cur_render_cells.left = this.render_grid.XToCell(this.viewLeft), this.cur_render_cells.top = this.render_grid.YToCell(this.viewTop), this.cur_render_cells.right = this.render_grid.XToCell(this.viewRight), this.cur_render_cells.bottom = this.render_grid.YToCell(this.viewBottom), this.render_list_stale || !this.cur_render_cells.equals(this.last_render_cells) ? (s(this.last_render_list), h = this.getRenderCellInstancesToDraw(), this.render_list_stale = !1, this.last_render_cells.copy(this.cur_render_cells)) : h = this.last_render_list) : h = this.instances;
			var c, l, u, p = null;
			for (c = 0, l = h.length; l > c; ++c) u = h[c], u !== p && (this.drawInstance(u, i), p = u);
			this.useRenderCells && (this.last_render_list = h), i.restore(), this.render_offscreen && (t.globalCompositeOperation = this.compositeOp, t.globalAlpha = this.opacity, t.drawImage(e, 0, 0))
		}, i.prototype.drawInstance = function(t, e) {
			if (t.visible && 0 !== t.width && 0 !== t.height) {
				t.update_bbox();
				var i = t.bbox;
				i.right < this.viewLeft || i.bottom < this.viewTop || i.left > this.viewRight || i.top > this.viewBottom || (e.globalCompositeOperation = t.compositeOp, t.draw(e))
			}
		}, i.prototype.updateViewport = function(t) {
			this.disableAngle = !0;
			var e = this.canvasToLayer(0, 0, !0, !0),
				i = this.canvasToLayer(0, 0, !1, !0);
			this.disableAngle = !1, this.runtime.pixel_rounding && (e = Math.round(e), i = Math.round(i)), this.rotateViewport(e, i, t)
		}, i.prototype.rotateViewport = function(t, e, i) {
			var r = this.getScale();
			this.viewLeft = t, this.viewTop = e, this.viewRight = t + this.runtime.draw_width * (1 / r), this.viewBottom = e + this.runtime.draw_height * (1 / r);
			var s = this.getAngle();
			0 !== s && (i && (i.translate(this.runtime.draw_width / 2, this.runtime.draw_height / 2), i.rotate(-s), i.translate(this.runtime.draw_width / -2, this.runtime.draw_height / -2)), this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom), this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2), this.tmpquad.set_from_rotated_rect(this.tmprect, s), this.tmpquad.bounding_box(this.tmprect), this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2), this.viewLeft = this.tmprect.left, this.viewTop = this.tmprect.top, this.viewRight = this.tmprect.right, this.viewBottom = this.tmprect.bottom)
		}, i.prototype.drawGL_earlyZPass = function(t) {
			this.runtime.draw_width, this.runtime.draw_height;
			this.render_offscreen = this.forceOwnTexture, this.render_offscreen && (this.runtime.layer_tex || (this.runtime.layer_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), (this.runtime.layer_tex.c2width !== this.runtime.draw_width || this.runtime.layer_tex.c2height !== this.runtime.draw_height) && (t.deleteTexture(this.runtime.layer_tex), this.runtime.layer_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), t.setRenderingToTexture(this.runtime.layer_tex)), this.disableAngle = !0;
			var e = this.canvasToLayer(0, 0, !0, !0),
				i = this.canvasToLayer(0, 0, !1, !0);
			this.disableAngle = !1, this.runtime.pixel_rounding && (e = Math.round(e), i = Math.round(i)), this.rotateViewport(e, i, null);
			var r = this.getScale();
			t.resetModelView(), t.scale(r, r), t.rotateZ(-this.getAngle()), t.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2), t.updateModelView();
			var n;
			this.useRenderCells ? (this.cur_render_cells.left = this.render_grid.XToCell(this.viewLeft), this.cur_render_cells.top = this.render_grid.YToCell(this.viewTop), this.cur_render_cells.right = this.render_grid.XToCell(this.viewRight), this.cur_render_cells.bottom = this.render_grid.YToCell(this.viewBottom), this.render_list_stale || !this.cur_render_cells.equals(this.last_render_cells) ? (s(this.last_render_list), n = this.getRenderCellInstancesToDraw(), this.render_list_stale = !1, this.last_render_cells.copy(this.cur_render_cells)) : n = this.last_render_list) : n = this.instances;
			var a, o, h = null;
			for (a = n.length - 1; a >= 0; --a) o = n[a], o !== h && (this.drawInstanceGL_earlyZPass(n[a], t), h = o);
			this.useRenderCells && (this.last_render_list = n), this.transparent || (this.clear_earlyz_index = this.runtime.earlyz_index++, t.setEarlyZIndex(this.clear_earlyz_index), t.setColorFillMode(1, 1, 1, 1), t.fullscreenQuad(), t.restoreEarlyZMode())
		}, i.prototype.drawGL = function(t) {
			var e = (this.runtime.draw_width, this.runtime.draw_height, 0),
				i = 0;
			this.render_offscreen = this.forceOwnTexture || 1 !== this.opacity || this.active_effect_types.length > 0 || 0 !== this.blend_mode, this.render_offscreen && (this.runtime.layer_tex || (this.runtime.layer_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), (this.runtime.layer_tex.c2width !== this.runtime.draw_width || this.runtime.layer_tex.c2height !== this.runtime.draw_height) && (t.deleteTexture(this.runtime.layer_tex), this.runtime.layer_tex = t.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling)), t.setRenderingToTexture(this.runtime.layer_tex), this.transparent && t.clear(0, 0, 0, 0)), this.transparent || (this.runtime.enableFrontToBack ? (t.setEarlyZIndex(this.clear_earlyz_index), t.setColorFillMode(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1), t.fullscreenQuad(), t.setTextureFillMode()) : t.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1)), this.disableAngle = !0;
			var r = this.canvasToLayer(0, 0, !0, !0),
				n = this.canvasToLayer(0, 0, !1, !0);
			this.disableAngle = !1, this.runtime.pixel_rounding && (r = Math.round(r), n = Math.round(n)), this.rotateViewport(r, n, null);
			var a = this.getScale();
			t.resetModelView(), t.scale(a, a), t.rotateZ(-this.getAngle()), t.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2), t.updateModelView();
			var o;
			this.useRenderCells ? (this.cur_render_cells.left = this.render_grid.XToCell(this.viewLeft), this.cur_render_cells.top = this.render_grid.YToCell(this.viewTop), this.cur_render_cells.right = this.render_grid.XToCell(this.viewRight), this.cur_render_cells.bottom = this.render_grid.YToCell(this.viewBottom), this.render_list_stale || !this.cur_render_cells.equals(this.last_render_cells) ? (s(this.last_render_list), o = this.getRenderCellInstancesToDraw(), this.render_list_stale = !1, this.last_render_cells.copy(this.cur_render_cells)) : o = this.last_render_list) : o = this.instances;
			var h, c, l, u = null;
			for (h = 0, c = o.length; c > h; ++h) l = o[h], l !== u && (this.drawInstanceGL(o[h], t), u = l);
			if (this.useRenderCells && (this.last_render_list = o), this.render_offscreen)
				if (e = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0, i = this.active_effect_types.length ? this.active_effect_types[0].index : 0, 0 === this.active_effect_types.length || 1 === this.active_effect_types.length && !t.programUsesCrossSampling(e) && 1 === this.opacity) {
					1 === this.active_effect_types.length ? (t.switchProgram(e), t.setProgramParameters(this.layout.getRenderTarget(), 1 / this.runtime.draw_width, 1 / this.runtime.draw_height, 0, 0, 1, 1, a, this.getAngle(), this.viewLeft, this.viewTop, (this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2, this.runtime.kahanTime.sum, this.effect_params[i]), t.programIsAnimated(e) && (this.runtime.redraw = !0)) : t.switchProgram(0), t.setRenderingToTexture(this.layout.getRenderTarget()), t.setOpacity(this.opacity), t.setTexture(this.runtime.layer_tex), t.setBlend(this.srcBlend, this.destBlend), t.resetModelView(), t.updateModelView();
					var p = this.runtime.draw_width / 2,
						d = this.runtime.draw_height / 2;
					t.quad(-p, d, p, d, p, -d, -p, -d), t.setTexture(null)
				} else this.layout.renderEffectChain(t, this, null, this.layout.getRenderTarget())
		}, i.prototype.drawInstanceGL = function(t, e) {
			if (t.visible && 0 !== t.width && 0 !== t.height) {
				t.update_bbox();
				var i = t.bbox;
				i.right < this.viewLeft || i.bottom < this.viewTop || i.left > this.viewRight || i.top > this.viewBottom || (e.setEarlyZIndex(t.earlyz_index), t.uses_shaders ? this.drawInstanceWithShadersGL(t, e) : (e.switchProgram(0), e.setBlend(t.srcBlend, t.destBlend), t.drawGL(e)))
			}
		}, i.prototype.drawInstanceGL_earlyZPass = function(t, e) {
			if (t.visible && 0 !== t.width && 0 !== t.height) {
				t.update_bbox();
				var i = t.bbox;
				i.right < this.viewLeft || i.bottom < this.viewTop || i.left > this.viewRight || i.top > this.viewBottom || (t.earlyz_index = this.runtime.earlyz_index++, 0 === t.blend_mode && 1 === t.opacity && t.shaders_preserve_opaqueness && t.drawGL_earlyZPass && (e.setEarlyZIndex(t.earlyz_index), t.drawGL_earlyZPass(e)))
			}
		}, i.prototype.drawInstanceWithShadersGL = function(t, e) {
			var i = t.active_effect_types[0].shaderindex,
				r = t.active_effect_types[0].index,
				s = this.getScale();
			if (1 !== t.active_effect_types.length || e.programUsesCrossSampling(i) || e.programExtendsBox(i) || (t.angle || t.layer.getAngle()) && e.programUsesDest(i) || 1 !== t.opacity || t.type.plugin.must_predraw) this.layout.renderEffectChain(e, this, t, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget()), e.resetModelView(), e.scale(s, s), e.rotateZ(-this.getAngle()), e.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2), e.updateModelView();
			else {
				e.switchProgram(i), e.setBlend(t.srcBlend, t.destBlend), e.programIsAnimated(i) && (this.runtime.redraw = !0);
				var n = 0,
					a = 0,
					o = 0,
					h = 0;
				if (e.programUsesDest(i)) {
					var c = t.bbox,
						l = this.layerToCanvas(c.left, c.top, !0, !0),
						u = this.layerToCanvas(c.left, c.top, !1, !0),
						p = this.layerToCanvas(c.right, c.bottom, !0, !0),
						d = this.layerToCanvas(c.right, c.bottom, !1, !0);
					n = l / windowWidth, a = 1 - u / windowHeight, o = p / windowWidth, h = 1 - d / windowHeight
				}
				e.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), 1 / t.width, 1 / t.height, n, a, o, h, s, this.getAngle(), this.viewLeft, this.viewTop, (this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2, this.runtime.kahanTime.sum, t.effect_params[r]), t.drawGL(e)
			}
		}, i.prototype.canvasToLayer = function(t, e, i, r) {
			var s = this.runtime.devicePixelRatio;
			this.runtime.isRetina && (t *= s, e *= s);
			var n = this.runtime.parallax_x_origin,
				a = this.runtime.parallax_y_origin,
				o = (this.layout.scrollX - n) * this.parallaxX + n,
				h = (this.layout.scrollY - a) * this.parallaxY + a,
				c = o,
				l = h,
				u = 1 / this.getScale(!r);
			r ? (c -= this.runtime.draw_width * u / 2, l -= this.runtime.draw_height * u / 2) : (c -= this.runtime.width * u / 2, l -= this.runtime.height * u / 2), c += t * u, l += e * u;
			var p = this.getAngle();
			if (0 !== p) {
				c -= o, l -= h;
				var d = Math.cos(p),
					f = Math.sin(p),
					g = c * d - l * f;
				l = l * d + c * f, c = g, c += o, l += h
			}
			return i ? c : l
		}, i.prototype.layerToCanvas = function(t, e, i, r) {
			var s = this.runtime.parallax_x_origin,
				n = this.runtime.parallax_y_origin,
				a = (this.layout.scrollX - s) * this.parallaxX + s,
				o = (this.layout.scrollY - n) * this.parallaxY + n,
				h = a,
				c = o,
				l = this.getAngle();
			if (0 !== l) {
				t -= a, e -= o;
				var u = Math.cos(-l),
					p = Math.sin(-l),
					d = t * u - e * p;
				e = e * u + t * p, t = d, t += a, e += o
			}
			var f = 1 / this.getScale(!r);
			r ? (h -= this.runtime.draw_width * f / 2, c -= this.runtime.draw_height * f / 2) : (h -= this.runtime.width * f / 2, c -= this.runtime.height * f / 2), h = (t - h) / f, c = (e - c) / f;
			var g = this.runtime.devicePixelRatio;
			return this.runtime.isRetina && !r && (h /= g, c /= g), i ? h : c
		}, i.prototype.rotatePt = function(t, e, i) {
			if (0 === this.getAngle()) return i ? t : e;
			var r = this.layerToCanvas(t, e, !0),
				s = this.layerToCanvas(t, e, !1);
			this.disableAngle = !0;
			var n = this.canvasToLayer(r, s, !0),
				a = this.canvasToLayer(r, s, !0);
			return this.disableAngle = !1, i ? n : a
		}, i.prototype.saveToJSON = function() {
			var t, e, i, r = {
				s: this.scale,
				a: this.angle,
				vl: this.viewLeft,
				vt: this.viewTop,
				vr: this.viewRight,
				vb: this.viewBottom,
				v: this.visible,
				bc: this.background_color,
				t: this.transparent,
				px: this.parallaxX,
				py: this.parallaxY,
				o: this.opacity,
				zr: this.zoomRate,
				fx: [],
				cg: this.created_globals,
				instances: []
			};
			for (t = 0, e = this.effect_types.length; e > t; t++) i = this.effect_types[t], r.fx.push({
				name: i.name,
				active: i.active,
				params: this.effect_params[i.index]
			});
			return r
		}, i.prototype.loadFromJSON = function(t) {
			var i, r, s, n;
			this.scale = t.s, this.angle = t.a, this.viewLeft = t.vl, this.viewTop = t.vt, this.viewRight = t.vr, this.viewBottom = t.vb, this.visible = t.v, this.background_color = t.bc, this.transparent = t.t, this.parallaxX = t.px, this.parallaxY = t.py, this.opacity = t.o, this.zoomRate = t.zr, this.created_globals = t.cg || [], cr.shallowAssignArray(this.initial_instances, this.startup_initial_instances);
			var a = new cr.ObjectSet;
			for (i = 0, s = this.created_globals.length; s > i; ++i) a.add(this.created_globals[i]);
			for (i = 0, r = 0, s = this.initial_instances.length; s > i; ++i) a.contains(this.initial_instances[i][2]) || (this.initial_instances[r] = this.initial_instances[i], ++r);
			cr.truncateArray(this.initial_instances, r);
			var o = t.fx;
			for (i = 0, s = o.length; s > i; i++) n = this.getEffectByName(o[i].name), n && (n.active = o[i].active, this.effect_params[n.index] = o[i].params);
			this.updateActiveEffects(), this.instances.sort(e), this.zindices_stale = !0
		}, cr.layer = i
	}(),
	function() {
		function t(t, e) {
			var i, r = t.length;
			switch (r) {
				case 0:
					return !0;
				case 1:
					return t[0] === e[0];
				case 2:
					return t[0] === e[0] && t[1] === e[1];
				default:
					for (i = 0; r > i; i++)
						if (t[i] !== e[i]) return !1;
					return !0
			}
		}

		function e(t, e) {
			return t.index - e.index
		}

		function i(i) {
			var r, s, n, a, o;
			for (2 === i.length ? i[0].index > i[1].index && (a = i[0], i[0] = i[1], i[1] = a) : i.length > 2 && i.sort(e), i.length >= m.length && (m.length = i.length + 1), m[i.length] || (m[i.length] = []), o = m[i.length], r = 0, s = o.length; s > r; r++)
				if (n = o[r], t(i, n)) return n;
			return o.push(i), i
		}

		function r(t, e) {
			this.runtime = t, this.triggers = {}, this.fasttriggers = {}, this.hasRun = !1, this.includes = new cr.ObjectSet, this.deep_includes = [], this.already_included_sheets = [], this.name = e[0];
			var i = e[1];
			this.events = [];
			var r, s;
			for (r = 0, s = i.length; s > r; r++) this.init_event(i[r], null, this.events)
		}

		function s(t) {
			return cr.plugins_.Sprite && t === cr.plugins_.Sprite.prototype.cnds.OnFrameChanged ? !0 : !1
		}

		function n(t) {
			this.type = t, this.instances = [], this.else_instances = [], this.select_all = !0
		}

		function a(t, e, i) {
			this.sheet = t, this.parent = e, this.runtime = t.runtime, this.solModifiers = [], this.solModifiersIncludingParents = [], this.solWriterAfterCnds = !1, this.group = !1, this.initially_activated = !1, this.toplevelevent = !1, this.toplevelgroup = !1, this.has_else_block = !1, this.conditions = [], this.actions = [], this.subevents = [], this.group_name = "", this.group = !1, this.initially_activated = !1, this.group_active = !1, this.contained_includes = null, i[1] && (this.group_name = i[1][1].toLowerCase(), this.group = !0, this.initially_activated = !!i[1][0], this.contained_includes = [], this.group_active = this.initially_activated, this.runtime.allGroups.push(this), this.runtime.groups_by_name[this.group_name] = this), this.orblock = i[2], this.sid = i[4], this.group || (this.runtime.blocksBySid[this.sid.toString()] = this);
			var r, s, n = i[5];
			for (r = 0, s = n.length; s > r; r++) {
				var a = new cr.condition(this, n[r]);
				a.index = r, cr.seal(a), this.conditions.push(a), this.addSolModifier(a.type)
			}
			var o = i[6];
			for (r = 0, s = o.length; s > r; r++) {
				var h = new cr.action(this, o[r]);
				h.index = r, cr.seal(h), this.actions.push(h)
			}
			if (8 === i.length) {
				var c = i[7];
				for (r = 0, s = c.length; s > r; r++) this.sheet.init_event(c[r], this, this.subevents)
			}
			this.is_else_block = !1, this.conditions.length && (this.is_else_block = null == this.conditions[0].type && this.conditions[0].func == cr.system_object.prototype.cnds.Else)
		}

		function o(t, e) {
			var i, r, s;
			if (t && (-1 === e.indexOf(t) && e.push(t), t.is_contained))
				for (i = 0, r = t.container.length; r > i; i++) s = t.container[i], t !== s && -1 === e.indexOf(s) && e.push(s)
		}

		function h(t, e) {
			if (this.block = t, this.sheet = t.sheet, this.runtime = t.runtime, this.parameters = [], this.results = [], this.extra = {}, this.index = -1, this.anyParamVariesPerInstance = !1, this.func = this.runtime.GetObjectReference(e[1]), this.trigger = e[3] > 0, this.fasttrigger = 2 === e[3], this.looping = e[4], this.inverted = e[5], this.isstatic = e[6], this.sid = e[7], this.runtime.cndsBySid[this.sid.toString()] = this, -1 === e[0] ? (this.type = null, this.run = this.run_system, this.behaviortype = null, this.beh_index = -1) : (this.type = this.runtime.types_by_index[e[0]], this.run = this.isstatic ? this.run_static : this.run_object, e[2] ? (this.behaviortype = this.type.getBehaviorByName(e[2]), this.beh_index = this.type.getBehaviorIndexByName(e[2])) : (this.behaviortype = null, this.beh_index = -1), this.block.parent && this.block.parent.setSolWriterAfterCnds()), this.fasttrigger && (this.run = this.run_true), 10 === e.length) {
				var i, r, s = e[9];
				for (i = 0, r = s.length; r > i; i++) {
					var n = new cr.parameter(this, s[i]);
					cr.seal(n), this.parameters.push(n)
				}
				this.results.length = s.length
			}
		}

		function c(t, e) {
			if (this.block = t, this.sheet = t.sheet, this.runtime = t.runtime, this.parameters = [], this.results = [], this.extra = {}, this.index = -1, this.anyParamVariesPerInstance = !1, this.func = this.runtime.GetObjectReference(e[1]), -1 === e[0] ? (this.type = null, this.run = this.run_system, this.behaviortype = null, this.beh_index = -1) : (this.type = this.runtime.types_by_index[e[0]], this.run = this.run_object, e[2] ? (this.behaviortype = this.type.getBehaviorByName(e[2]), this.beh_index = this.type.getBehaviorIndexByName(e[2])) : (this.behaviortype = null, this.beh_index = -1)), this.sid = e[3], this.runtime.actsBySid[this.sid.toString()] = this, 6 === e.length) {
				var i, r, s = e[5];
				for (i = 0, r = s.length; r > i; i++) {
					var n = new cr.parameter(this, s[i]);
					cr.seal(n), this.parameters.push(n)
				}
				this.results.length = s.length
			}
		}

		function l() {
			return _++, y.length === _ && y.push(new cr.expvalue), y[_]
		}

		function u() {
			_--
		}

		function p(t, e) {
			this.owner = t, this.block = t.block, this.sheet = t.sheet, this.runtime = t.runtime, this.type = e[0], this.expression = null, this.solindex = 0, this.get = null, this.combosel = 0, this.layout = null, this.key = 0, this.object = null, this.index = 0, this.varname = null, this.eventvar = null, this.fileinfo = null, this.subparams = null, this.variadicret = null, this.subparams = null, this.variadicret = null, this.variesPerInstance = !1;
			var i, r, s;
			switch (e[0]) {
				case 0:
				case 7:
					this.expression = new cr.expNode(this, e[1]), this.solindex = 0, this.get = this.get_exp;
					break;
				case 1:
					this.expression = new cr.expNode(this, e[1]), this.solindex = 0, this.get = this.get_exp_str;
					break;
				case 5:
					this.expression = new cr.expNode(this, e[1]), this.solindex = 0, this.get = this.get_layer;
					break;
				case 3:
				case 8:
					this.combosel = e[1], this.get = this.get_combosel;
					break;
				case 6:
					this.layout = this.runtime.layouts[e[1]], this.get = this.get_layout;
					break;
				case 9:
					this.key = e[1], this.get = this.get_key;
					break;
				case 4:
					this.object = this.runtime.types_by_index[e[1]], this.get = this.get_object, this.block.addSolModifier(this.object), this.owner instanceof cr.action ? this.block.setSolWriterAfterCnds() : this.block.parent && this.block.parent.setSolWriterAfterCnds();
					break;
				case 10:
					this.index = e[1], t.type.is_family ? (this.get = this.get_familyvar, this.variesPerInstance = !0) : this.get = this.get_instvar;
					break;
				case 11:
					this.varname = e[1], this.eventvar = null, this.get = this.get_eventvar;
					break;
				case 2:
				case 12:
					this.fileinfo = e[1], this.get = this.get_audiofile;
					break;
				case 13:
					for (this.get = this.get_variadic, this.subparams = [], this.variadicret = [], i = 1, r = e.length; r > i; i++) s = new cr.parameter(this.owner, e[i]), cr.seal(s), this.subparams.push(s), this.variadicret.push(0)
			}
		}

		function d(t, e, i) {
			this.sheet = t, this.parent = e, this.runtime = t.runtime, this.solModifiers = [], this.name = i[1], this.vartype = i[2], this.initial = i[3], this.is_static = !!i[4], this.is_constant = !!i[5], this.sid = i[6], this.runtime.varsBySid[this.sid.toString()] = this, this.data = this.initial, this.parent ? (this.localIndex = this.is_static || this.is_constant ? -1 : this.runtime.stackLocalCount++, this.runtime.all_local_vars.push(this)) : (this.localIndex = -1, this.runtime.all_global_vars.push(this))
		}

		function f(t, e, i) {
			this.sheet = t, this.parent = e, this.runtime = t.runtime, this.solModifiers = [], this.include_sheet = null, this.include_sheet_name = i[1], this.active = !0
		}

		function g() {
			this.temp_parents_arr = [], this.reset(null), cr.seal(this)
		}
		var m = [];
		r.prototype.toString = function() {
			return this.name
		}, r.prototype.init_event = function(t, e, i) {
			switch (t[0]) {
				case 0:
					var r = new cr.eventblock(this, e, t);
					if (cr.seal(r), r.orblock) {
						i.push(r);
						var s, n;
						for (s = 0, n = r.conditions.length; n > s; s++) r.conditions[s].trigger && this.init_trigger(r, s)
					} else r.is_trigger() ? this.init_trigger(r, 0) : i.push(r);
					break;
				case 1:
					var a = new cr.eventvariable(this, e, t);
					cr.seal(a), i.push(a);
					break;
				case 2:
					var o = new cr.eventinclude(this, e, t);
					cr.seal(o), i.push(o)
			}
		}, r.prototype.postInit = function() {
			var t, e;
			for (t = 0, e = this.events.length; e > t; t++) this.events[t].postInit(e - 1 > t && this.events[t + 1].is_else_block)
		}, r.prototype.updateDeepIncludes = function() {
			cr.clearArray(this.deep_includes), cr.clearArray(this.already_included_sheets), this.addDeepIncludes(this), cr.clearArray(this.already_included_sheets)
		}, r.prototype.addDeepIncludes = function(t) {
			var e, i, r, s, n = t.deep_includes,
				a = t.already_included_sheets,
				o = this.includes.valuesRef();
			for (e = 0, i = o.length; i > e; ++e) r = o[e], s = r.include_sheet, !r.isActive() || t === s || a.indexOf(s) > -1 || (a.push(s), s.addDeepIncludes(t), n.push(s))
		}, r.prototype.run = function(t) {
			this.runtime.resuming_breakpoint || (this.hasRun = !0, t || (this.runtime.isRunningEvents = !0));
			var e, i;
			for (e = 0, i = this.events.length; i > e; e++) {
				var r = this.events[e];
				r.run(), this.runtime.clearSol(r.solModifiers), this.runtime.hasPendingInstances && this.runtime.ClearDeathRow()
			}
			t || (this.runtime.isRunningEvents = !1)
		}, r.prototype.init_trigger = function(t, e) {
			t.orblock || this.runtime.triggers_to_postinit.push(t);
			var i, r, n, a = t.conditions[e];
			n = a.type ? a.type.name : "system";
			var o = a.fasttrigger,
				h = o ? this.fasttriggers : this.triggers;
			h[n] || (h[n] = []);
			var c = h[n],
				l = a.func;
			if (o) {
				if (!a.parameters.length) return;
				var u = a.parameters[0];
				if (1 !== u.type || 2 !== u.expression.type) return;
				var p, i, r, d = u.expression.value.toLowerCase();
				for (i = 0, r = c.length; r > i; i++)
					if (c[i].method == l) return p = c[i].evs, void(p[d] ? p[d].push([t, e]) : p[d] = [
						[t, e]
					]);
				p = {}, p[d] = [
					[t, e]
				], c.push({
					method: l,
					evs: p
				})
			} else {
				for (i = 0, r = c.length; r > i; i++)
					if (c[i].method == l) return void c[i].evs.push([t, e]);
				s(l) ? c.unshift({
					method: l,
					evs: [
						[t, e]
					]
				}) : c.push({
					method: l,
					evs: [
						[t, e]
					]
				})
			}
		}, cr.eventsheet = r, n.prototype.hasObjects = function() {
			return this.select_all ? this.type.instances.length : this.instances.length
		}, n.prototype.getObjects = function() {
			return this.select_all ? this.type.instances : this.instances
		}, n.prototype.pick_one = function(t) {
			if (t)
				if (t.runtime.getCurrentEventStack().current_event.orblock) {
					this.select_all && (cr.clearArray(this.instances), cr.shallowAssignArray(this.else_instances, t.type.instances), this.select_all = !1);
					var e = this.else_instances.indexOf(t); - 1 !== e && (this.instances.push(this.else_instances[e]), this.else_instances.splice(e, 1))
				} else this.select_all = !1, cr.clearArray(this.instances), this.instances[0] = t
		}, cr.selection = n, window._c2hh_ = "45F21B0D387BFFBD5CB10598EDB7F2441F3DC4A4", a.prototype.postInit = function(t) {
			var e, r, s = this.parent;
			if (this.group)
				for (this.toplevelgroup = !0; s;) {
					if (!s.group) {
						this.toplevelgroup = !1;
						break
					}
					s = s.parent
				}
			for (this.toplevelevent = !this.is_trigger() && (!this.parent || this.parent.group && this.parent.toplevelgroup), this.has_else_block = !!t, this.solModifiersIncludingParents = this.solModifiers.slice(0), s = this.parent; s;) {
				for (e = 0, r = s.solModifiers.length; r > e; e++) this.addParentSolModifier(s.solModifiers[e]);
				s = s.parent
			}
			this.solModifiers = i(this.solModifiers), this.solModifiersIncludingParents = i(this.solModifiersIncludingParents);
			var e, r;
			for (e = 0, r = this.conditions.length; r > e; e++) this.conditions[e].postInit();
			for (e = 0, r = this.actions.length; r > e; e++) this.actions[e].postInit();
			for (e = 0, r = this.subevents.length; r > e; e++) this.subevents[e].postInit(r - 1 > e && this.subevents[e + 1].is_else_block)
		}, a.prototype.setGroupActive = function(t) {
			if (this.group_active !== !!t) {
				this.group_active = !!t;
				var e, i;
				for (e = 0, i = this.contained_includes.length; i > e; ++e) this.contained_includes[e].updateActive();
				i > 0 && this.runtime.running_layout.event_sheet && this.runtime.running_layout.event_sheet.updateDeepIncludes()
			}
		}, a.prototype.addSolModifier = function(t) {
			o(t, this.solModifiers)
		}, a.prototype.addParentSolModifier = function(t) {
			o(t, this.solModifiersIncludingParents)
		}, a.prototype.setSolWriterAfterCnds = function() {
			this.solWriterAfterCnds = !0, this.parent && this.parent.setSolWriterAfterCnds()
		}, a.prototype.is_trigger = function() {
			return this.conditions.length ? this.conditions[0].trigger : !1
		}, a.prototype.run = function() {
			var t, e, i, r = !1,
				s = this.runtime,
				n = this.runtime.getCurrentEventStack();
			n.current_event = this;
			var a = this.conditions;
			if (this.is_else_block || (n.else_branch_ran = !1), this.orblock) {
				for (0 === a.length && (r = !0), n.cndindex = 0, t = a.length; n.cndindex < t; n.cndindex++) e = a[n.cndindex], e.trigger || (i = e.run(), i && (r = !0));
				n.last_event_true = r, r && this.run_actions_and_subevents()
			} else {
				for (n.cndindex = 0, t = a.length; n.cndindex < t; n.cndindex++)
					if (i = a[n.cndindex].run(), !i) return n.last_event_true = !1, void(this.toplevelevent && s.hasPendingInstances && s.ClearDeathRow());
				n.last_event_true = !0, this.run_actions_and_subevents()
			}
			this.end_run(n)
		}, a.prototype.end_run = function(t) {
			t.last_event_true && this.has_else_block && (t.else_branch_ran = !0), this.toplevelevent && this.runtime.hasPendingInstances && this.runtime.ClearDeathRow()
		}, a.prototype.run_orblocktrigger = function(t) {
			var e = this.runtime.getCurrentEventStack();
			e.current_event = this, this.conditions[t].run() && (this.run_actions_and_subevents(), this.runtime.getCurrentEventStack().last_event_true = !0)
		}, a.prototype.run_actions_and_subevents = function() {
			var t, e = this.runtime.getCurrentEventStack();
			for (e.actindex = 0, t = this.actions.length; e.actindex < t; e.actindex++)
				if (this.actions[e.actindex].run()) return;
			this.run_subevents()
		}, a.prototype.resume_actions_and_subevents = function() {
			var t, e = this.runtime.getCurrentEventStack();
			for (t = this.actions.length; e.actindex < t; e.actindex++)
				if (this.actions[e.actindex].run()) return;
			this.run_subevents()
		}, a.prototype.run_subevents = function() {
			if (this.subevents.length) {
				var t, e, i, r, s = this.subevents.length - 1;
				if (this.runtime.pushEventStack(this), this.solWriterAfterCnds)
					for (t = 0, e = this.subevents.length; e > t; t++) i = this.subevents[t], r = !this.toplevelgroup || !this.group && s > t, r && this.runtime.pushCopySol(i.solModifiers), i.run(), r ? this.runtime.popSol(i.solModifiers) : this.runtime.clearSol(i.solModifiers);
				else
					for (t = 0, e = this.subevents.length; e > t; t++) this.subevents[t].run();
				this.runtime.popEventStack()
			}
		}, a.prototype.run_pretrigger = function() {
			var t = this.runtime.getCurrentEventStack();
			t.current_event = this;
			var e, i = !1;
			for (t.cndindex = 0, e = this.conditions.length; t.cndindex < e; t.cndindex++)
				if (this.conditions[t.cndindex].run()) i = !0;
				else if (!this.orblock) return !1;
			return this.orblock ? i : !0
		}, a.prototype.retrigger = function() {
			this.runtime.execcount++;
			var t, e = this.runtime.getCurrentEventStack().cndindex,
				i = this.runtime.pushEventStack(this);
			if (!this.orblock)
				for (i.cndindex = e + 1, t = this.conditions.length; i.cndindex < t; i.cndindex++)
					if (!this.conditions[i.cndindex].run()) return this.runtime.popEventStack(), !1;
			return this.run_actions_and_subevents(), this.runtime.popEventStack(), !0
		}, a.prototype.isFirstConditionOfType = function(t) {
			var e = t.index;
			if (0 === e) return !0;
			for (--e; e >= 0; --e)
				if (this.conditions[e].type === t.type) return !1;
			return !0
		}, cr.eventblock = a, h.prototype.postInit = function() {
			var t, e, i;
			for (t = 0, e = this.parameters.length; e > t; t++) i = this.parameters[t], i.postInit(), i.variesPerInstance && (this.anyParamVariesPerInstance = !0)
		}, h.prototype.run_true = function() {
			return !0
		}, h.prototype.run_system = function() {
			var t, e;
			for (t = 0, e = this.parameters.length; e > t; t++) this.results[t] = this.parameters[t].get();
			return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted)
		}, h.prototype.run_static = function() {
			var t, e;
			for (t = 0, e = this.parameters.length; e > t; t++) this.results[t] = this.parameters[t].get();
			var i = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
			return this.type.applySolToContainer(), i
		}, h.prototype.run_object = function() {
			var t, e, i, r, s, n, a, o, h, c, l, u, p, d = this.type,
				f = d.getCurrentSol(),
				g = this.block.orblock && !this.trigger,
				m = 0,
				y = d.is_contained,
				_ = d.is_family,
				v = d.family_index,
				b = this.beh_index,
				w = b > -1,
				x = this.anyParamVariesPerInstance,
				S = this.parameters,
				T = this.results,
				C = this.inverted,
				k = this.func;
			if (x)
				for (e = 0, s = S.length; s > e; ++e) n = S[e], n.variesPerInstance || (T[e] = n.get(0));
			else
				for (e = 0, s = S.length; s > e; ++e) T[e] = S[e].get(0);
			if (f.select_all) {
				for (cr.clearArray(f.instances), cr.clearArray(f.else_instances), u = d.instances, t = 0, r = u.length; r > t; ++t) {
					if (h = u[t], x)
						for (e = 0, s = S.length; s > e; ++e) n = S[e], n.variesPerInstance && (T[e] = n.get(t));
					w ? (m = 0, _ && (m = h.type.family_beh_map[v]), a = k.apply(h.behavior_insts[b + m], T)) : a = k.apply(h, T), o = cr.xor(a, C), o ? f.instances.push(h) : g && f.else_instances.push(h)
				}
				return d.finish && d.finish(!0), f.select_all = !1, d.applySolToContainer(), f.hasObjects()
			}
			i = 0;
			var O = g && !this.block.isFirstConditionOfType(this);
			u = O ? f.else_instances : f.instances;
			var A = !1;
			for (t = 0, r = u.length; r > t; ++t) {
				if (h = u[t], x)
					for (e = 0, s = S.length; s > e; ++e) n = S[e], n.variesPerInstance && (T[e] = n.get(t));
				if (w ? (m = 0, _ && (m = h.type.family_beh_map[v]), a = k.apply(h.behavior_insts[b + m], T)) : a = k.apply(h, T), cr.xor(a, C))
					if (A = !0, O) {
						if (f.instances.push(h), y)
							for (e = 0, s = h.siblings.length; s > e; e++) c = h.siblings[e], c.type.getCurrentSol().instances.push(c)
					} else {
						if (u[i] = h, y)
							for (e = 0, s = h.siblings.length; s > e; e++) c = h.siblings[e], c.type.getCurrentSol().instances[i] = c;
						i++
					} else if (O) {
					if (u[i] = h, y)
						for (e = 0, s = h.siblings.length; s > e; e++) c = h.siblings[e], c.type.getCurrentSol().else_instances[i] = c;
					i++
				} else if (g && (f.else_instances.push(h), y))
					for (e = 0, s = h.siblings.length; s > e; e++) c = h.siblings[e], c.type.getCurrentSol().else_instances.push(c)
			}
			if (cr.truncateArray(u, i), y)
				for (p = d.container, t = 0, r = p.length; r > t; t++) l = p[t].getCurrentSol(), O ? cr.truncateArray(l.else_instances, i) : cr.truncateArray(l.instances, i);
			var E = A;
			if (O && !A)
				for (t = 0, r = f.instances.length; r > t; t++) {
					if (h = f.instances[t], x)
						for (e = 0, s = S.length; s > e; e++) n = S[e], n.variesPerInstance && (T[e] = n.get(t));
					if (a = w ? k.apply(h.behavior_insts[b], T) : k.apply(h, T), cr.xor(a, C)) {
						A = !0;
						break
					}
				}
			return d.finish && d.finish(E || g), g ? A : f.hasObjects()
		}, cr.condition = h, c.prototype.postInit = function() {
			var t, e, i;
			for (t = 0, e = this.parameters.length; e > t; t++) i = this.parameters[t], i.postInit(), i.variesPerInstance && (this.anyParamVariesPerInstance = !0)
		}, c.prototype.run_system = function() {
			var t, e, i = this.runtime,
				r = this.parameters,
				s = this.results;
			for (t = 0, e = r.length; e > t; ++t) s[t] = r[t].get();
			return this.func.apply(i.system, s)
		}, c.prototype.run_object = function() {
			var t, e, i, r, s, n, a, o = this.type,
				h = this.beh_index,
				c = o.family_index,
				l = this.anyParamVariesPerInstance,
				u = this.parameters,
				p = this.results,
				d = this.func,
				f = o.getCurrentSol().getObjects(),
				g = o.is_family,
				m = h > -1;
			if (l)
				for (e = 0, r = u.length; r > e; ++e) s = u[e], s.variesPerInstance || (p[e] = s.get(0));
			else
				for (e = 0, r = u.length; r > e; ++e) p[e] = u[e].get(0);
			for (t = 0, i = f.length; i > t; ++t) {
				if (n = f[t], l)
					for (e = 0, r = u.length; r > e; ++e) s = u[e], s.variesPerInstance && (p[e] = s.get(t));
				m ? (a = 0, g && (a = n.type.family_beh_map[c]), d.apply(n.behavior_insts[h + a], p)) : d.apply(n, p)
			}
			return !1
		}, cr.action = c;
		var y = [],
			_ = -1;
		p.prototype.postInit = function() {
			var t, e;
			if (11 === this.type) this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
			else if (13 === this.type)
				for (t = 0, e = this.subparams.length; e > t; t++) this.subparams[t].postInit();
			this.expression && this.expression.postInit()
		}, p.prototype.maybeVaryForType = function(t) {
			return !this.variesPerInstance && t ? t.plugin.singleglobal ? void 0 : void(this.variesPerInstance = !0) : void 0
		}, p.prototype.setVaries = function() {
			this.variesPerInstance = !0
		}, p.prototype.get_exp = function(t) {
			this.solindex = t || 0;
			var e = l();
			return this.expression.get(e), u(), e.data
		}, p.prototype.get_exp_str = function(t) {
			this.solindex = t || 0;
			var e = l();
			return this.expression.get(e), u(), cr.is_string(e.data) ? e.data : ""
		}, p.prototype.get_object = function() {
			return this.object
		}, p.prototype.get_combosel = function() {
			return this.combosel
		}, p.prototype.get_layer = function(t) {
			this.solindex = t || 0;
			var e = l();
			return this.expression.get(e), u(), e.is_number() ? this.runtime.getLayerByNumber(e.data) : this.runtime.getLayerByName(e.data)
		}, p.prototype.get_layout = function() {
			return this.layout
		}, p.prototype.get_key = function() {
			return this.key
		}, p.prototype.get_instvar = function() {
			return this.index
		}, p.prototype.get_familyvar = function(t) {
			var e = t || 0,
				i = this.owner.type,
				r = null,
				s = i.getCurrentSol(),
				n = s.getObjects();
			if (n.length) r = n[e % n.length].type;
			else if (s.else_instances.length) r = s.else_instances[e % s.else_instances.length].type;
			else {
				if (!i.instances.length) return 0;
				r = i.instances[e % i.instances.length].type
			}
			return this.index + r.family_var_map[i.family_index]
		}, p.prototype.get_eventvar = function() {
			return this.eventvar
		}, p.prototype.get_audiofile = function() {
			return this.fileinfo
		}, p.prototype.get_variadic = function() {
			var t, e;
			for (t = 0, e = this.subparams.length; e > t; t++) this.variadicret[t] = this.subparams[t].get();
			return this.variadicret
		}, cr.parameter = p, d.prototype.postInit = function() {
			this.solModifiers = i(this.solModifiers)
		}, d.prototype.setValue = function(t) {
			var e = this.runtime.getCurrentLocalVarStack();
			this.parent && !this.is_static && e ? (this.localIndex >= e.length && (e.length = this.localIndex + 1), e[this.localIndex] = t) : this.data = t
		}, d.prototype.getValue = function() {
			var t = this.runtime.getCurrentLocalVarStack();
			return !this.parent || this.is_static || !t || this.is_constant ? this.data : this.localIndex >= t.length ? this.initial : "undefined" == typeof t[this.localIndex] ? this.initial : t[this.localIndex]
		}, d.prototype.run = function() {
			!this.parent || this.is_static || this.is_constant || this.setValue(this.initial)
		}, cr.eventvariable = d, f.prototype.toString = function() {
			return "include:" + this.include_sheet.toString()
		}, f.prototype.postInit = function() {
			this.include_sheet = this.runtime.eventsheets[this.include_sheet_name], this.sheet.includes.add(this), this.solModifiers = i(this.solModifiers);
			for (var t = this.parent; t;) t.group && t.contained_includes.push(this), t = t.parent;
			this.updateActive()
		}, f.prototype.run = function() {
			this.parent && this.runtime.pushCleanSol(this.runtime.types_by_index), this.include_sheet.hasRun || this.include_sheet.run(!0), this.parent && this.runtime.popSol(this.runtime.types_by_index)
		}, f.prototype.updateActive = function() {
			for (var t = this.parent; t;) {
				if (t.group && !t.group_active) return void(this.active = !1);
				t = t.parent
			}
			this.active = !0
		}, f.prototype.isActive = function() {
			return this.active
		}, cr.eventinclude = f, g.prototype.reset = function(t) {
			this.current_event = t, this.cndindex = 0, this.actindex = 0, cr.clearArray(this.temp_parents_arr), this.last_event_true = !1, this.else_branch_ran = !1, this.any_true_state = !1
		}, g.prototype.isModifierAfterCnds = function() {
			return this.current_event.solWriterAfterCnds ? !0 : this.cndindex < this.current_event.conditions.length - 1 ? !!this.current_event.solModifiers.length : !1
		}, cr.eventStackFrame = g
	}(),
	function() {
		function t(t, e) {
			this.owner = t, this.runtime = t.runtime, this.type = e[0], this.get = [this.eval_int, this.eval_float, this.eval_string, this.eval_unaryminus, this.eval_add, this.eval_subtract, this.eval_multiply, this.eval_divide, this.eval_mod, this.eval_power, this.eval_and, this.eval_or, this.eval_equal, this.eval_notequal, this.eval_less, this.eval_lessequal, this.eval_greater, this.eval_greaterequal, this.eval_conditional, this.eval_system_exp, this.eval_object_exp, this.eval_instvar_exp, this.eval_behavior_exp, this.eval_eventvar_exp][this.type];
			var i = null;
			switch (this.value = null, this.first = null, this.second = null, this.third = null, this.func = null, this.results = null, this.parameters = null, this.object_type = null, this.beh_index = -1, this.instance_expr = null, this.varindex = -1, this.behavior_type = null, this.varname = null, this.eventvar = null, this.return_string = !1, this.type) {
				case 0:
				case 1:
				case 2:
					this.value = e[1];
					break;
				case 3:
					this.first = new cr.expNode(t, e[1]);
					break;
				case 18:
					this.first = new cr.expNode(t, e[1]), this.second = new cr.expNode(t, e[2]), this.third = new cr.expNode(t, e[3]);
					break;
				case 19:
					this.func = this.runtime.GetObjectReference(e[1]), (this.func === cr.system_object.prototype.exps.random || this.func === cr.system_object.prototype.exps.choose) && this.owner.setVaries(), this.results = [], this.parameters = [], 3 === e.length ? (i = e[2], this.results.length = i.length + 1) : this.results.length = 1;
					break;
				case 20:
					this.object_type = this.runtime.types_by_index[e[1]], this.beh_index = -1, this.func = this.runtime.GetObjectReference(e[2]), this.return_string = e[3], cr.plugins_.Function && this.func === cr.plugins_.Function.prototype.exps.Call && this.owner.setVaries(), this.instance_expr = e[4] ? new cr.expNode(t, e[4]) : null, this.results = [], this.parameters = [], 6 === e.length ? (i = e[5], this.results.length = i.length + 1) : this.results.length = 1;
					break;
				case 21:
					this.object_type = this.runtime.types_by_index[e[1]], this.return_string = e[2], this.instance_expr = e[3] ? new cr.expNode(t, e[3]) : null, this.varindex = e[4];
					break;
				case 22:
					this.object_type = this.runtime.types_by_index[e[1]], this.behavior_type = this.object_type.getBehaviorByName(e[2]), this.beh_index = this.object_type.getBehaviorIndexByName(e[2]), this.func = this.runtime.GetObjectReference(e[3]), this.return_string = e[4], this.instance_expr = e[5] ? new cr.expNode(t, e[5]) : null, this.results = [], this.parameters = [], 7 === e.length ? (i = e[6], this.results.length = i.length + 1) : this.results.length = 1;
					break;
				case 23:
					this.varname = e[1], this.eventvar = null
			}
			if (this.owner.maybeVaryForType(this.object_type), this.type >= 4 && this.type <= 17 && (this.first = new cr.expNode(t, e[1]), this.second = new cr.expNode(t, e[2])), i) {
				var r, s;
				for (r = 0, s = i.length; s > r; r++) this.parameters.push(new cr.expNode(t, i[r]))
			}
			cr.seal(this)
		}

		function e() {
			return ++a, n.length === a && n.push(new cr.expvalue), n[a]
		}

		function i() {
			--a
		}

		function r(t, e, i) {
			var r, s;
			for (r = 0, s = t.length; s > r; ++r) t[r].get(i), e[r + 1] = i.data
		}

		function s(t, e) {
			this.type = t || cr.exptype.Integer, this.data = e || 0, this.object_class = null, this.type == cr.exptype.Integer && (this.data = Math.floor(this.data)), cr.seal(this)
		}
		t.prototype.postInit = function() {
			if (23 === this.type && (this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent)), this.first && this.first.postInit(), this.second && this.second.postInit(), this.third && this.third.postInit(), this.instance_expr && this.instance_expr.postInit(), this.parameters) {
				var t, e;
				for (t = 0, e = this.parameters.length; e > t; t++) this.parameters[t].postInit()
			}
		};
		var n = [],
			a = -1;
		t.prototype.eval_system_exp = function(t) {
			var s = this.parameters,
				n = this.results;
			n[0] = t;
			var a = e();
			r(s, n, a), i(), this.func.apply(this.runtime.system, n)
		}, t.prototype.eval_object_exp = function(t) {
			var s = this.object_type,
				n = this.results,
				a = this.parameters,
				o = this.instance_expr,
				h = this.func,
				c = this.owner.solindex,
				l = s.getCurrentSol(),
				u = l.getObjects();
			if (!u.length) {
				if (!l.else_instances.length) return void(this.return_string ? t.set_string("") : t.set_int(0));
				u = l.else_instances
			}
			n[0] = t, t.object_class = s;
			var p = e();
			r(a, n, p), o && (o.get(p), p.is_number() && (c = p.data, u = s.instances)), i();
			var d = u.length;
			(c >= d || -d >= c) && (c %= d), 0 > c && (c += d);
			h.apply(u[c], n)
		}, t.prototype.eval_behavior_exp = function(t) {
			var s = this.object_type,
				n = this.results,
				a = this.parameters,
				o = this.instance_expr,
				h = this.beh_index,
				c = this.func,
				l = this.owner.solindex,
				u = s.getCurrentSol(),
				p = u.getObjects();
			if (!p.length) {
				if (!u.else_instances.length) return void(this.return_string ? t.set_string("") : t.set_int(0));
				p = u.else_instances
			}
			n[0] = t, t.object_class = s;
			var d = e();
			r(a, n, d), o && (o.get(d), d.is_number() && (l = d.data, p = s.instances)), i();
			var f = p.length;
			(l >= f || -f >= l) && (l %= f), 0 > l && (l += f);
			var g = p[l],
				m = 0;
			s.is_family && (m = g.type.family_beh_map[s.family_index]);
			c.apply(g.behavior_insts[h + m], n)
		}, t.prototype.eval_instvar_exp = function(t) {
			var r = this.instance_expr,
				s = this.object_type,
				n = this.varindex,
				a = this.owner.solindex,
				o = s.getCurrentSol(),
				h = o.getObjects();
			if (!h.length) {
				if (!o.else_instances.length) return void(this.return_string ? t.set_string("") : t.set_int(0));
				h = o.else_instances
			}
			if (r) {
				var c = e();
				if (r.get(c), c.is_number()) {
					a = c.data;
					var l = s.instances;
					a %= l.length, 0 > a && (a += l.length);
					var u = l[a].instance_vars[n];
					return cr.is_string(u) ? t.set_string(u) : t.set_float(u), void i()
				}
				i()
			}
			var p = h.length;
			(a >= p || -p >= a) && (a %= p), 0 > a && (a += p);
			var d = h[a],
				f = 0;
			s.is_family && (f = d.type.family_var_map[s.family_index]);
			var u = d.instance_vars[n + f];
			cr.is_string(u) ? t.set_string(u) : t.set_float(u)
		}, t.prototype.eval_int = function(t) {
			t.type = cr.exptype.Integer, t.data = this.value
		}, t.prototype.eval_float = function(t) {
			t.type = cr.exptype.Float, t.data = this.value
		}, t.prototype.eval_string = function(t) {
			t.type = cr.exptype.String, t.data = this.value
		}, t.prototype.eval_unaryminus = function(t) {
			this.first.get(t), t.is_number() && (t.data = -t.data)
		}, t.prototype.eval_add = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.is_number() && r.is_number() && (t.data += r.data, r.is_float() && t.make_float()), i()
		}, t.prototype.eval_subtract = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.is_number() && r.is_number() && (t.data -= r.data, r.is_float() && t.make_float()), i()
		}, t.prototype.eval_multiply = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.is_number() && r.is_number() && (t.data *= r.data, r.is_float() && t.make_float()), i()
		}, t.prototype.eval_divide = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.is_number() && r.is_number() && (t.data /= r.data, t.make_float()), i()
		}, t.prototype.eval_mod = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.is_number() && r.is_number() && (t.data %= r.data, r.is_float() && t.make_float()), i()
		}, t.prototype.eval_power = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.is_number() && r.is_number() && (t.data = Math.pow(t.data, r.data), r.is_float() && t.make_float()), i()
		}, t.prototype.eval_and = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), r.is_string() || t.is_string() ? this.eval_and_stringconcat(t, r) : this.eval_and_logical(t, r), i()
		}, t.prototype.eval_and_stringconcat = function(t, e) {
			t.is_string() && e.is_string() ? this.eval_and_stringconcat_str_str(t, e) : this.eval_and_stringconcat_num(t, e)
		}, t.prototype.eval_and_stringconcat_str_str = function(t, e) {
			t.data += e.data
		}, t.prototype.eval_and_stringconcat_num = function(t, e) {
			t.is_string() ? t.data += (Math.round(1e10 * e.data) / 1e10).toString() : t.set_string(t.data.toString() + e.data)
		}, t.prototype.eval_and_logical = function(t, e) {
			t.set_int(t.data && e.data ? 1 : 0)
		}, t.prototype.eval_or = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.is_number() && r.is_number() && t.set_int(t.data || r.data ? 1 : 0), i()
		}, t.prototype.eval_conditional = function(t) {
			this.first.get(t), t.data ? this.second.get(t) : this.third.get(t)
		}, t.prototype.eval_equal = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.set_int(t.data === r.data ? 1 : 0), i()
		}, t.prototype.eval_notequal = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.set_int(t.data !== r.data ? 1 : 0), i()
		}, t.prototype.eval_less = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.set_int(t.data < r.data ? 1 : 0), i()
		}, t.prototype.eval_lessequal = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.set_int(t.data <= r.data ? 1 : 0), i()
		}, t.prototype.eval_greater = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.set_int(t.data > r.data ? 1 : 0), i()
		}, t.prototype.eval_greaterequal = function(t) {
			this.first.get(t);
			var r = e();
			this.second.get(r), t.set_int(t.data >= r.data ? 1 : 0), i()
		}, t.prototype.eval_eventvar_exp = function(t) {
			var e = this.eventvar.getValue();
			cr.is_number(e) ? t.set_float(e) : t.set_string(e)
		}, cr.expNode = t, s.prototype.is_int = function() {
			return this.type === cr.exptype.Integer
		}, s.prototype.is_float = function() {
			return this.type === cr.exptype.Float
		}, s.prototype.is_number = function() {
			return this.type === cr.exptype.Integer || this.type === cr.exptype.Float
		}, s.prototype.is_string = function() {
			return this.type === cr.exptype.String
		}, s.prototype.make_int = function() {
			this.is_int() || (this.is_float() ? this.data = Math.floor(this.data) : this.is_string() && (this.data = parseInt(this.data, 10)), this.type = cr.exptype.Integer)
		}, s.prototype.make_float = function() {
			this.is_float() || (this.is_string() && (this.data = parseFloat(this.data)), this.type = cr.exptype.Float)
		}, s.prototype.make_string = function() {
			this.is_string() || (this.data = this.data.toString(), this.type = cr.exptype.String)
		}, s.prototype.set_int = function(t) {
			this.type = cr.exptype.Integer, this.data = Math.floor(t)
		}, s.prototype.set_float = function(t) {
			this.type = cr.exptype.Float, this.data = t
		}, s.prototype.set_string = function(t) {
			this.type = cr.exptype.String, this.data = t
		}, s.prototype.set_any = function(t) {
			cr.is_number(t) ? (this.type = cr.exptype.Float, this.data = t) : cr.is_string(t) ? (this.type = cr.exptype.String, this.data = t.toString()) : (this.type = cr.exptype.Integer, this.data = 0)
		}, cr.expvalue = s, cr.exptype = {
			Integer: 0,
			Float: 1,
			String: 2
		}
	}(), cr.system_object = function(t) {
		this.runtime = t, this.waits = []
	}, cr.system_object.prototype.saveToJSON = function() {
		var t, e, i, r, s, n, a, o, h = {};
		h.waits = [];
		var c, l = h.waits;
		for (t = 0, e = this.waits.length; e > t; t++) {
			for (n = this.waits[t], c = {
					t: n.time,
					st: n.signaltag,
					s: n.signalled,
					ev: n.ev.sid,
					sm: [],
					sols: {}
				}, n.ev.actions[n.actindex] && (c.act = n.ev.actions[n.actindex].sid), i = 0, r = n.solModifiers.length; r > i; i++) c.sm.push(n.solModifiers[i].sid);
			for (s in n.sols)
				if (n.sols.hasOwnProperty(s)) {
					for (a = this.runtime.types_by_index[parseInt(s, 10)], o = {
							sa: n.sols[s].sa,
							insts: []
						}, i = 0, r = n.sols[s].insts.length; r > i; i++) o.insts.push(n.sols[s].insts[i].uid);
					c.sols[a.sid.toString()] = o
				}
			l.push(c)
		}
		return h
	}, cr.system_object.prototype.loadFromJSON = function(t) {
		var e, i, r, s, n, a, o, h, c, l, u, p, d, f = t.waits;
		for (cr.clearArray(this.waits), e = 0, i = f.length; i > e; e++)
			if (a = f[e], h = this.runtime.blocksBySid[a.ev.toString()]) {
				for (c = -1, r = 0, s = h.actions.length; s > r; r++)
					if (h.actions[r].sid === a.act) {
						c = r;
						break
					}
				if (-1 !== c) {
					for (o = {}, o.sols = {}, o.solModifiers = [], o.deleteme = !1, o.time = a.t, o.signaltag = a.st || "", o.signalled = !!a.s, o.ev = h, o.actindex = c, r = 0, s = a.sm.length; s > r; r++) l = this.runtime.getObjectTypeBySid(a.sm[r]), l && o.solModifiers.push(l);
					for (n in a.sols)
						if (a.sols.hasOwnProperty(n)) {
							if (l = this.runtime.getObjectTypeBySid(parseInt(n, 10)), !l) continue;
							for (u = a.sols[n], p = {
									sa: u.sa,
									insts: []
								}, r = 0, s = u.insts.length; s > r; r++) d = this.runtime.getObjectByUID(u.insts[r]), d && p.insts.push(d);
							o.sols[l.index.toString()] = p
						}
					this.waits.push(o)
				}
			}
	},
	function() {
		function t() {}

		function e(t, e) {
			var i = t.extra.c2_feo_val,
				r = e.extra.c2_feo_val;
			return cr.is_number(i) && cr.is_number(r) ? i - r : (i = "" + i, r = "" + r, r > i ? -1 : i > r ? 1 : 0)
		}

		function i(t, e) {
			return d && t === f && e === g || (d = new RegExp(t, e), f = t, g = e), d.lastIndex = 0, d
		}

		function r() {}

		function s() {
			var t;
			return y.length ? t = y.pop() : (t = {}, t.sols = {}, t.solModifiers = []), t.deleteme = !1, t
		}

		function n(t) {
			cr.wipe(t.sols), cr.clearArray(t.solModifiers), y.push(t)
		}

		function a() {
			var t;
			return _.length ? t = _.pop() : (t = {}, t.insts = []), t.sa = !1, t
		}

		function o(t) {
			cr.clearArray(t.insts), _.push(t)
		}

		function h() {}

		function c(t, e, r) {
			if (t !== b || e !== w || r !== x) {
				var s = i(e, r);
				v = t.match(s), b = t, w = e, x = r
			}
		}
		var l = cr.system_object.prototype;
		t.prototype.EveryTick = function() {
			return !0
		}, t.prototype.OnLayoutStart = function() {
			return !0
		}, t.prototype.OnLayoutEnd = function() {
			return !0
		}, t.prototype.Compare = function(t, e, i) {
			return cr.do_cmp(t, e, i)
		}, t.prototype.CompareTime = function(t, e) {
			var i = this.runtime.kahanTime.sum;
			if (0 === t) {
				var r = this.runtime.getCurrentCondition();
				return !r.extra.CompareTime_executed && i >= e ? (r.extra.CompareTime_executed = !0, !0) : !1
			}
			return cr.do_cmp(i, t, e)
		}, t.prototype.LayerVisible = function(t) {
			return t ? t.visible : !1
		}, t.prototype.LayerEmpty = function(t) {
			return t ? !t.instances.length : !1
		}, t.prototype.LayerCmpOpacity = function(t, e, i) {
			return t ? cr.do_cmp(100 * t.opacity, e, i) : !1
		}, t.prototype.Repeat = function(t) {
			var e, i = this.runtime.getCurrentEventStack(),
				r = i.current_event,
				s = i.isModifierAfterCnds(),
				n = this.runtime.pushLoopStack();
			if (s)
				for (e = 0; t > e && !n.stopped; e++) this.runtime.pushCopySol(r.solModifiers), n.index = e, r.retrigger(), this.runtime.popSol(r.solModifiers);
			else
				for (e = 0; t > e && !n.stopped; e++) n.index = e, r.retrigger();
			return this.runtime.popLoopStack(), !1
		}, t.prototype.While = function() {
			var t, e = this.runtime.getCurrentEventStack(),
				i = e.current_event,
				r = e.isModifierAfterCnds(),
				s = this.runtime.pushLoopStack();
			if (r)
				for (t = 0; !s.stopped; t++) this.runtime.pushCopySol(i.solModifiers), s.index = t, i.retrigger() || (s.stopped = !0), this.runtime.popSol(i.solModifiers);
			else
				for (t = 0; !s.stopped; t++) s.index = t, i.retrigger() || (s.stopped = !0);
			return this.runtime.popLoopStack(), !1
		}, t.prototype.For = function(t, e, i) {
			var r, s = this.runtime.getCurrentEventStack(),
				n = s.current_event,
				a = s.isModifierAfterCnds(),
				o = this.runtime.pushLoopStack(t);
			if (e > i)
				if (a)
					for (r = e; r >= i && !o.stopped; --r) this.runtime.pushCopySol(n.solModifiers), o.index = r, n.retrigger(), this.runtime.popSol(n.solModifiers);
				else
					for (r = e; r >= i && !o.stopped; --r) o.index = r, n.retrigger();
			else if (a)
				for (r = e; i >= r && !o.stopped; ++r) this.runtime.pushCopySol(n.solModifiers), o.index = r, n.retrigger(), this.runtime.popSol(n.solModifiers);
			else
				for (r = e; i >= r && !o.stopped; ++r) o.index = r, n.retrigger();
			return this.runtime.popLoopStack(), !1
		};
		var u = [],
			p = -1;
		t.prototype.ForEach = function(t) {
			var e = t.getCurrentSol();
			p++, u.length === p && u.push([]);
			var i = u[p];
			cr.shallowAssignArray(i, e.getObjects());
			var r, s, n, a, o, h, c, l = this.runtime.getCurrentEventStack(),
				d = l.current_event,
				f = l.isModifierAfterCnds(),
				g = this.runtime.pushLoopStack(),
				m = t.is_contained;
			if (f)
				for (r = 0, s = i.length; s > r && !g.stopped; r++) {
					if (this.runtime.pushCopySol(d.solModifiers), o = i[r], e = t.getCurrentSol(), e.select_all = !1, cr.clearArray(e.instances), e.instances[0] = o, m)
						for (n = 0, a = o.siblings.length; a > n; n++) h = o.siblings[n], c = h.type.getCurrentSol(), c.select_all = !1, cr.clearArray(c.instances), c.instances[0] = h;
					g.index = r, d.retrigger(), this.runtime.popSol(d.solModifiers)
				} else
					for (e.select_all = !1, cr.clearArray(e.instances), r = 0, s = i.length; s > r && !g.stopped; r++) {
						if (o = i[r], e.instances[0] = o, m)
							for (n = 0, a = o.siblings.length; a > n; n++) h = o.siblings[n], c = h.type.getCurrentSol(), c.select_all = !1, cr.clearArray(c.instances), c.instances[0] = h;
						g.index = r, d.retrigger()
					}
			return cr.clearArray(i), this.runtime.popLoopStack(), p--, !1
		}, t.prototype.ForEachOrdered = function(t, i, r) {
			var s = t.getCurrentSol();
			p++, u.length === p && u.push([]);
			var n = u[p];
			cr.shallowAssignArray(n, s.getObjects());
			var a, o, h, c, l, d, f, g = this.runtime.getCurrentEventStack(),
				m = g.current_event,
				y = this.runtime.getCurrentCondition(),
				_ = g.isModifierAfterCnds(),
				v = this.runtime.pushLoopStack();
			for (a = 0, o = n.length; o > a; a++) n[a].extra.c2_feo_val = y.parameters[1].get(a);
			n.sort(e), 1 === r && n.reverse();
			var b = t.is_contained;
			if (_)
				for (a = 0, o = n.length; o > a && !v.stopped; a++) {
					if (this.runtime.pushCopySol(m.solModifiers), l = n[a], s = t.getCurrentSol(), s.select_all = !1, cr.clearArray(s.instances), s.instances[0] = l, b)
						for (h = 0, c = l.siblings.length; c > h; h++) d = l.siblings[h], f = d.type.getCurrentSol(), f.select_all = !1, cr.clearArray(f.instances), f.instances[0] = d;
					v.index = a, m.retrigger(), this.runtime.popSol(m.solModifiers)
				} else
					for (s.select_all = !1, cr.clearArray(s.instances), a = 0, o = n.length; o > a && !v.stopped; a++) {
						if (l = n[a], s.instances[0] = l, b)
							for (h = 0, c = l.siblings.length; c > h; h++) d = l.siblings[h], f = d.type.getCurrentSol(), f.select_all = !1, cr.clearArray(f.instances), f.instances[0] = d;
						v.index = a, m.retrigger()
					}
			return cr.clearArray(n), this.runtime.popLoopStack(), p--, !1
		}, t.prototype.PickByComparison = function(t, e, i, r) {
			var s, n, a, o;
			if (t) {
				p++, u.length === p && u.push([]);
				var h = u[p],
					c = t.getCurrentSol();
				cr.shallowAssignArray(h, c.getObjects()), c.select_all && cr.clearArray(c.else_instances);
				var l = this.runtime.getCurrentCondition();
				for (s = 0, a = 0, n = h.length; n > s; s++) o = h[s], h[a] = o, e = l.parameters[1].get(s), r = l.parameters[3].get(s), cr.do_cmp(e, i, r) ? a++ : c.else_instances.push(o);
				return cr.truncateArray(h, a), c.select_all = !1, cr.shallowAssignArray(c.instances, h), cr.clearArray(h), p--, t.applySolToContainer(), !!c.instances.length
			}
		}, t.prototype.PickByEvaluate = function(t, e) {
			var i, r, s, n;
			if (t) {
				p++, u.length === p && u.push([]);
				var a = u[p],
					o = t.getCurrentSol();
				cr.shallowAssignArray(a, o.getObjects()), o.select_all && cr.clearArray(o.else_instances);
				var h = this.runtime.getCurrentCondition();
				for (i = 0, s = 0, r = a.length; r > i; i++) n = a[i], a[s] = n, e = h.parameters[1].get(i), e ? s++ : o.else_instances.push(n);
				return cr.truncateArray(a, s), o.select_all = !1, cr.shallowAssignArray(o.instances, a), cr.clearArray(a), p--, t.applySolToContainer(), !!o.instances.length
			}
		}, t.prototype.TriggerOnce = function() {
			var t = this.runtime.getCurrentCondition().extra;
			"undefined" == typeof t.TriggerOnce_lastTick && (t.TriggerOnce_lastTick = -1);
			var e = t.TriggerOnce_lastTick,
				i = this.runtime.tickcount;
			return t.TriggerOnce_lastTick = i, this.runtime.layout_first_tick || e !== i - 1
		}, t.prototype.Every = function(t) {
			var e = this.runtime.getCurrentCondition(),
				i = e.extra.Every_lastTime || 0,
				r = this.runtime.kahanTime.sum;
			"undefined" == typeof e.extra.Every_seconds && (e.extra.Every_seconds = t);
			var s = e.extra.Every_seconds;
			return r >= i + s ? (e.extra.Every_lastTime = i + s, r >= e.extra.Every_lastTime + .04 && (e.extra.Every_lastTime = r), e.extra.Every_seconds = t, !0) : (i - .1 > r && (e.extra.Every_lastTime = r), !1)
		}, t.prototype.PickNth = function(t, e) {
			if (!t) return !1;
			var i = t.getCurrentSol(),
				r = i.getObjects();
			if (e = cr.floor(e), 0 > e || e >= r.length) return !1;
			var s = r[e];
			return i.pick_one(s), t.applySolToContainer(), !0
		}, t.prototype.PickRandom = function(t) {
			if (!t) return !1;
			var e = t.getCurrentSol(),
				i = e.getObjects(),
				r = cr.floor(Math.random() * i.length);
			if (r >= i.length) return !1;
			var s = i[r];
			return e.pick_one(s), t.applySolToContainer(), !0
		}, t.prototype.CompareVar = function(t, e, i) {
			return cr.do_cmp(t.getValue(), e, i)
		}, t.prototype.IsGroupActive = function(t) {
			var e = this.runtime.groups_by_name[t.toLowerCase()];
			return e && e.group_active
		}, t.prototype.IsPreview = function() {
			return "undefined" != typeof cr_is_preview
		}, t.prototype.PickAll = function(t) {
			if (!t) return !1;
			if (!t.instances.length) return !1;
			var e = t.getCurrentSol();
			return e.select_all = !0, t.applySolToContainer(), !0
		}, t.prototype.IsMobile = function() {
			return this.runtime.isMobile
		}, t.prototype.CompareBetween = function(t, e, i) {
			return t >= e && i >= t
		}, t.prototype.Else = function() {
			var t = this.runtime.getCurrentEventStack();
			return t.else_branch_ran ? !1 : !t.last_event_true
		}, t.prototype.OnLoadFinished = function() {
			return !0
		}, t.prototype.OnCanvasSnapshot = function() {
			return !0
		}, t.prototype.EffectsSupported = function() {
			return !!this.runtime.glwrap
		}, t.prototype.OnSaveComplete = function() {
			return !0
		}, t.prototype.OnLoadComplete = function() {
			return !0
		}, t.prototype.OnLoadFailed = function() {
			return !0
		}, t.prototype.ObjectUIDExists = function(t) {
			return !!this.runtime.getObjectByUID(t)
		}, t.prototype.IsOnPlatform = function(t) {
			var e = this.runtime;
			switch (t) {
				case 0:
					return !(e.isDomFree || e.isNodeWebkit || e.isCordova || e.isWinJS || e.isWindowsPhone8 || e.isBlackberry10 || e.isAmazonWebApp);
				case 1:
					return e.isiOS;
				case 2:
					return e.isAndroid;
				case 3:
					return e.isWindows8App;
				case 4:
					return e.isWindowsPhone8;
				case 5:
					return e.isBlackberry10;
				case 6:
					return e.isTizen;
				case 7:
					return e.isCocoonJs;
				case 8:
					return e.isCordova;
				case 9:
					return e.isArcade;
				case 10:
					return e.isNodeWebkit;
				case 11:
					return e.isCrosswalk;
				case 12:
					return e.isAmazonWebApp;
				default:
					return !1
			}
		};
		var d = null,
			f = "",
			g = "";
		t.prototype.RegexTest = function(t, e, r) {
			var s = i(e, r);
			return s.test(t)
		};
		var m = [];
		t.prototype.PickOverlappingPoint = function(t, e, i) {
			if (!t) return !1;
			var r, s, n, a, o = t.getCurrentSol(),
				h = o.getObjects(),
				c = this.runtime.getCurrentEventStack().current_event,
				l = c.orblock,
				u = this.runtime.getCurrentCondition();
			for (o.select_all ? (cr.shallowAssignArray(m, h), cr.clearArray(o.else_instances), o.select_all = !1, cr.clearArray(o.instances)) : l ? (cr.shallowAssignArray(m, o.else_instances), cr.clearArray(o.else_instances)) : (cr.shallowAssignArray(m, h), cr.clearArray(o.instances)), r = 0, s = m.length; s > r; ++r) n = m[r], n.update_bbox(), a = cr.xor(n.contains_pt(e, i), u.inverted), a ? o.instances.push(n) : o.else_instances.push(n);
			return t.applySolToContainer(), cr.xor(!!o.instances.length, u.inverted)
		}, t.prototype.IsNaN = function(t) {
			return !!isNaN(t)
		}, t.prototype.AngleWithin = function(t, e, i) {
			return cr.angleDiff(cr.to_radians(t), cr.to_radians(i)) <= cr.to_radians(e)
		}, t.prototype.IsClockwiseFrom = function(t, e) {
			return cr.angleClockwise(cr.to_radians(t), cr.to_radians(e))
		}, t.prototype.IsBetweenAngles = function(t, e, i) {
			var r = cr.to_clamped_radians(t),
				s = cr.to_clamped_radians(e),
				n = cr.to_clamped_radians(i),
				a = !cr.angleClockwise(n, s);
			return a ? !(!cr.angleClockwise(r, s) && cr.angleClockwise(r, n)) : cr.angleClockwise(r, s) && !cr.angleClockwise(r, n)
		}, t.prototype.IsValueType = function(t, e) {
			return "number" == typeof t ? 0 === e : 1 === e
		}, l.cnds = new t, r.prototype.GoToLayout = function(t) {
			this.runtime.isloading || this.runtime.changelayout || (this.runtime.changelayout = t)
		}, r.prototype.NextPrevLayout = function(t) {
			if (!this.runtime.isloading && !this.runtime.changelayout) {
				var e = this.runtime.layouts_by_index.indexOf(this.runtime.running_layout);
				if (!(t && 0 === e || !t && e === this.runtime.layouts_by_index.length - 1)) {
					var i = this.runtime.layouts_by_index[e + (t ? -1 : 1)];
					this.runtime.changelayout = i
				}
			}
		}, r.prototype.CreateObject = function(t, e, i, r) {
			if (e && t) {
				var s = this.runtime.createInstance(t, e, i, r);
				if (s) {
					this.runtime.isInOnDestroy++;
					var n, a, o;
					if (this.runtime.trigger(Object.getPrototypeOf(t.plugin).cnds.OnCreated, s), s.is_contained)
						for (n = 0, a = s.siblings.length; a > n; n++) o = s.siblings[n], this.runtime.trigger(Object.getPrototypeOf(o.type.plugin).cnds.OnCreated, o);
					this.runtime.isInOnDestroy--;
					var h = t.getCurrentSol();
					if (h.select_all = !1, cr.clearArray(h.instances), h.instances[0] = s, s.is_contained)
						for (n = 0, a = s.siblings.length; a > n; n++) o = s.siblings[n], h = o.type.getCurrentSol(), h.select_all = !1, cr.clearArray(h.instances), h.instances[0] = o
				}
			}
		}, r.prototype.SetLayerVisible = function(t, e) {
			t && t.visible !== e && (t.visible = e, this.runtime.redraw = !0)
		}, r.prototype.SetLayerOpacity = function(t, e) {
			t && (e = cr.clamp(e / 100, 0, 1), t.opacity !== e && (t.opacity = e, this.runtime.redraw = !0))
		}, r.prototype.SetLayerScaleRate = function(t, e) {
			t && t.zoomRate !== e && (t.zoomRate = e, this.runtime.redraw = !0)
		}, r.prototype.SetLayerForceOwnTexture = function(t, e) {
			t && (e = !!e, t.forceOwnTexture !== e && (t.forceOwnTexture = e, this.runtime.redraw = !0))
		}, r.prototype.SetLayoutScale = function(t) {
			this.runtime.running_layout && this.runtime.running_layout.scale !== t && (this.runtime.running_layout.scale = t, this.runtime.running_layout.boundScrolling(), this.runtime.redraw = !0)
		}, r.prototype.ScrollX = function(t) {
			this.runtime.running_layout.scrollToX(t)
		}, r.prototype.ScrollY = function(t) {
			this.runtime.running_layout.scrollToY(t)
		}, r.prototype.Scroll = function(t, e) {
			this.runtime.running_layout.scrollToX(t), this.runtime.running_layout.scrollToY(e)
		}, r.prototype.ScrollToObject = function(t) {
			var e = t.getFirstPicked();
			e && (this.runtime.running_layout.scrollToX(e.x), this.runtime.running_layout.scrollToY(e.y))
		}, r.prototype.SetVar = function(t, e) {
			0 === t.vartype ? t.setValue(cr.is_number(e) ? e : parseFloat(e)) : 1 === t.vartype && t.setValue(e.toString())
		}, r.prototype.AddVar = function(t, e) {
			0 === t.vartype ? t.setValue(cr.is_number(e) ? t.getValue() + e : t.getValue() + parseFloat(e)) : 1 === t.vartype && t.setValue(t.getValue() + e.toString())
		}, r.prototype.SubVar = function(t, e) {
			0 === t.vartype && t.setValue(cr.is_number(e) ? t.getValue() - e : t.getValue() - parseFloat(e))
		}, r.prototype.SetGroupActive = function(t, e) {
			var i = this.runtime.groups_by_name[t.toLowerCase()];
			if (i) switch (e) {
				case 0:
					i.setGroupActive(!1);
					break;
				case 1:
					i.setGroupActive(!0);
					break;
				case 2:
					i.setGroupActive(!i.group_active)
			}
		}, r.prototype.SetTimescale = function(t) {
			var e = t;
			0 > e && (e = 0), this.runtime.timescale = e
		}, r.prototype.SetObjectTimescale = function(t, e) {
			var i = e;
			if (0 > i && (i = 0), t) {
				var r, s, n = t.getCurrentSol(),
					a = n.getObjects();
				for (r = 0, s = a.length; s > r; r++) a[r].my_timescale = i
			}
		}, r.prototype.RestoreObjectTimescale = function(t) {
			if (!t) return !1;
			var e, i, r = t.getCurrentSol(),
				s = r.getObjects();
			for (e = 0, i = s.length; i > e; e++) s[e].my_timescale = -1
		};
		var y = [],
			_ = [];
		r.prototype.Wait = function(t) {
			if (!(0 > t)) {
				var e, i, r, n, o, h = this.runtime.getCurrentEventStack(),
					c = s();
				for (c.time = this.runtime.kahanTime.sum + t, c.signaltag = "", c.signalled = !1, c.ev = h.current_event, c.actindex = h.actindex + 1, e = 0, i = this.runtime.types_by_index.length; i > e; e++) n = this.runtime.types_by_index[e], r = n.getCurrentSol(), r.select_all && -1 === h.current_event.solModifiers.indexOf(n) || (c.solModifiers.push(n), o = a(), o.sa = r.select_all, cr.shallowAssignArray(o.insts, r.instances), c.sols[e.toString()] = o);
				return this.waits.push(c), !0
			}
		}, r.prototype.WaitForSignal = function(t) {
			var e, i, r, n, o, h = this.runtime.getCurrentEventStack(),
				c = s();
			for (c.time = -1, c.signaltag = t.toLowerCase(), c.signalled = !1, c.ev = h.current_event, c.actindex = h.actindex + 1, e = 0, i = this.runtime.types_by_index.length; i > e; e++) n = this.runtime.types_by_index[e], r = n.getCurrentSol(), r.select_all && -1 === h.current_event.solModifiers.indexOf(n) || (c.solModifiers.push(n), o = a(), o.sa = r.select_all, cr.shallowAssignArray(o.insts, r.instances), c.sols[e.toString()] = o);
			return this.waits.push(c), !0
		}, r.prototype.Signal = function(t) {
			var e, i, r, s = t.toLowerCase();
			for (e = 0, i = this.waits.length; i > e; ++e) r = this.waits[e], -1 === r.time && r.signaltag === s && (r.signalled = !0)
		}, r.prototype.SetLayerScale = function(t, e) {
			t && t.scale !== e && (t.scale = e, this.runtime.redraw = !0)
		}, r.prototype.ResetGlobals = function() {
			var t, e, i;
			for (t = 0, e = this.runtime.all_global_vars.length; e > t; t++) i = this.runtime.all_global_vars[t], i.data = i.initial
		}, r.prototype.SetLayoutAngle = function(t) {
			t = cr.to_radians(t), t = cr.clamp_angle(t), this.runtime.running_layout && this.runtime.running_layout.angle !== t && (this.runtime.running_layout.angle = t, this.runtime.redraw = !0)
		}, r.prototype.SetLayerAngle = function(t, e) {
			t && (e = cr.to_radians(e), e = cr.clamp_angle(e), t.angle !== e && (t.angle = e, this.runtime.redraw = !0))
		}, r.prototype.SetLayerParallax = function(t, e, i) {
			if (t && (t.parallaxX !== e / 100 || t.parallaxY !== i / 100)) {
				if (t.parallaxX = e / 100, t.parallaxY = i / 100, 1 !== t.parallaxX || 1 !== t.parallaxY) {
					var r, s, n = t.instances;
					for (r = 0, s = n.length; s > r; ++r) n[r].type.any_instance_parallaxed = !0
				}
				this.runtime.redraw = !0
			}
		}, r.prototype.SetLayerBackground = function(t, e) {
			if (t) {
				var i = cr.GetRValue(e),
					r = cr.GetGValue(e),
					s = cr.GetBValue(e);
				(t.background_color[0] !== i || t.background_color[1] !== r || t.background_color[2] !== s) && (t.background_color[0] = i, t.background_color[1] = r, t.background_color[2] = s, this.runtime.redraw = !0)
			}
		}, r.prototype.SetLayerTransparent = function(t, e) {
			t && !!e != !!t.transparent && (t.transparent = !!e, this.runtime.redraw = !0)
		}, r.prototype.SetLayerBlendMode = function(t, e) {
			t && t.blend_mode !== e && (t.blend_mode = e, t.compositeOp = cr.effectToCompositeOp(t.blend_mode), this.runtime.gl && cr.setGLBlend(t, t.blend_mode, this.runtime.gl), this.runtime.redraw = !0)
		}, r.prototype.StopLoop = function() {
			this.runtime.loop_stack_index < 0 || (this.runtime.getCurrentLoop().stopped = !0)
		}, r.prototype.GoToLayoutByName = function(t) {
			if (!this.runtime.isloading && !this.runtime.changelayout) {
				var e;
				for (e in this.runtime.layouts)
					if (this.runtime.layouts.hasOwnProperty(e) && cr.equals_nocase(e, t)) return void(this.runtime.changelayout = this.runtime.layouts[e])
			}
		}, r.prototype.RestartLayout = function() {
			if (!this.runtime.isloading && !this.runtime.changelayout && this.runtime.running_layout) {
				this.runtime.changelayout = this.runtime.running_layout;
				var t, e, i;
				for (t = 0, e = this.runtime.allGroups.length; e > t; t++) i = this.runtime.allGroups[t], i.setGroupActive(i.initially_activated)
			}
		}, r.prototype.SnapshotCanvas = function(t, e) {
			this.runtime.doCanvasSnapshot(0 === t ? "image/png" : "image/jpeg", e / 100)
		}, r.prototype.SetCanvasSize = function(t, e) {
			if (!(0 >= t || 0 >= e)) {
				var i = this.runtime.fullscreen_mode,
					r = document.mozFullScreen || document.webkitIsFullScreen || !!document.msFullscreenElement || document.fullScreen || this.runtime.isNodeFullscreen;
				r && this.runtime.fullscreen_scaling > 0 && (i = this.runtime.fullscreen_scaling), 0 === i ? this.runtime.setSize(t, e, !0) : (this.runtime.original_width = t, this.runtime.original_height = e, this.runtime.setSize(this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, !0))
			}
		}, r.prototype.SetLayoutEffectEnabled = function(t, e) {
			if (this.runtime.running_layout && this.runtime.glwrap) {
				var i = this.runtime.running_layout.getEffectByName(e);
				if (i) {
					var r = 1 === t;
					i.active != r && (i.active = r, this.runtime.running_layout.updateActiveEffects(), this.runtime.redraw = !0)
				}
			}
		}, r.prototype.SetLayerEffectEnabled = function(t, e, i) {
			if (t && this.runtime.glwrap) {
				var r = t.getEffectByName(i);
				if (r) {
					var s = 1 === e;
					r.active != s && (r.active = s, t.updateActiveEffects(), this.runtime.redraw = !0)
				}
			}
		}, r.prototype.SetLayoutEffectParam = function(t, e, i) {
			if (this.runtime.running_layout && this.runtime.glwrap) {
				var r = this.runtime.running_layout.getEffectByName(t);
				if (r) {
					var s = this.runtime.running_layout.effect_params[r.index];
					e = Math.floor(e), 0 > e || e >= s.length || (1 === this.runtime.glwrap.getProgramParameterType(r.shaderindex, e) && (i /= 100), s[e] !== i && (s[e] = i, r.active && (this.runtime.redraw = !0)))
				}
			}
		}, r.prototype.SetLayerEffectParam = function(t, e, i, r) {
			if (t && this.runtime.glwrap) {
				var s = t.getEffectByName(e);
				if (s) {
					var n = t.effect_params[s.index];
					i = Math.floor(i), 0 > i || i >= n.length || (1 === this.runtime.glwrap.getProgramParameterType(s.shaderindex, i) && (r /= 100), n[i] !== r && (n[i] = r, s.active && (this.runtime.redraw = !0)))
				}
			}
		}, r.prototype.SaveState = function(t) {
			this.runtime.saveToSlot = t
		}, r.prototype.LoadState = function(t) {
			this.runtime.loadFromSlot = t
		}, r.prototype.LoadStateJSON = function(t) {
			this.runtime.loadFromJson = t
		}, r.prototype.SetHalfFramerateMode = function(t) {
			this.runtime.halfFramerateMode = 0 !== t
		}, r.prototype.SetFullscreenQuality = function(t) {
			var e = document.mozFullScreen || document.webkitIsFullScreen || !!document.msFullscreenElement || document.fullScreen || this.isNodeFullscreen;
			(e || 0 !== this.runtime.fullscreen_mode) && (this.runtime.wantFullscreenScalingQuality = 0 !== t, this.runtime.setSize(this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, !0))
		}, r.prototype.ResetPersisted = function() {
			var t, e;
			for (t = 0, e = this.runtime.layouts_by_index.length; e > t; ++t) this.runtime.layouts_by_index[t].persist_data = {}, this.runtime.layouts_by_index[t].first_visit = !0
		}, r.prototype.RecreateInitialObjects = function(t, e, i, r, s) {
			t && this.runtime.running_layout.recreateInitialObjects(t, e, i, r, s)
		}, r.prototype.SetPixelRounding = function(t) {
			this.runtime.pixel_rounding = 0 !== t, this.runtime.redraw = !0
		}, l.acts = new r, h.prototype["int"] = function(t, e) {
			cr.is_string(e) ? (t.set_int(parseInt(e, 10)), isNaN(t.data) && (t.data = 0)) : t.set_int(e)
		}, h.prototype["float"] = function(t, e) {
			cr.is_string(e) ? (t.set_float(parseFloat(e)), isNaN(t.data) && (t.data = 0)) : t.set_float(e)
		}, h.prototype.str = function(t, e) {
			t.set_string(cr.is_string(e) ? e : e.toString())
		}, h.prototype.len = function(t, e) {
			t.set_int(e.length || 0)
		}, h.prototype.random = function(t, e, i) {
			t.set_float(void 0 === i ? Math.random() * e : Math.random() * (i - e) + e)
		}, h.prototype.sqrt = function(t, e) {
			t.set_float(Math.sqrt(e))
		}, h.prototype.abs = function(t, e) {
			t.set_float(Math.abs(e))
		}, h.prototype.round = function(t, e) {
			t.set_int(Math.round(e))
		}, h.prototype.floor = function(t, e) {
			t.set_int(Math.floor(e))
		}, h.prototype.ceil = function(t, e) {
			t.set_int(Math.ceil(e))
		}, h.prototype.sin = function(t, e) {
			t.set_float(Math.sin(cr.to_radians(e)))
		}, h.prototype.cos = function(t, e) {
			t.set_float(Math.cos(cr.to_radians(e)))
		}, h.prototype.tan = function(t, e) {
			t.set_float(Math.tan(cr.to_radians(e)))
		}, h.prototype.asin = function(t, e) {
			t.set_float(cr.to_degrees(Math.asin(e)))
		}, h.prototype.acos = function(t, e) {
			t.set_float(cr.to_degrees(Math.acos(e)))
		}, h.prototype.atan = function(t, e) {
			t.set_float(cr.to_degrees(Math.atan(e)))
		}, h.prototype.exp = function(t, e) {
			t.set_float(Math.exp(e))
		}, h.prototype.ln = function(t, e) {
			t.set_float(Math.log(e))
		}, h.prototype.log10 = function(t, e) {
			t.set_float(Math.log(e) / Math.LN10)
		}, h.prototype.max = function(t) {
			var e = arguments[1];
			"number" != typeof e && (e = 0);
			var i, r, s;
			for (i = 2, r = arguments.length; r > i; i++) s = arguments[i], "number" == typeof s && s > e && (e = s);
			t.set_float(e)
		}, h.prototype.min = function(t) {
			var e = arguments[1];
			"number" != typeof e && (e = 0);
			var i, r, s;
			for (i = 2, r = arguments.length; r > i; i++) s = arguments[i], "number" == typeof s && e > s && (e = s);
			t.set_float(e)
		}, h.prototype.dt = function(t) {
			t.set_float(this.runtime.dt)
		}, h.prototype.timescale = function(t) {
			t.set_float(this.runtime.timescale)
		}, h.prototype.wallclocktime = function(t) {
			t.set_float((Date.now() - this.runtime.start_time) / 1e3)
		}, h.prototype.time = function(t) {
			t.set_float(this.runtime.kahanTime.sum)
		}, h.prototype.tickcount = function(t) {
			t.set_int(this.runtime.tickcount)
		}, h.prototype.objectcount = function(t) {
			t.set_int(this.runtime.objectcount)
		}, h.prototype.fps = function(t) {
			t.set_int(this.runtime.fps)
		}, h.prototype.loopindex = function(t, e) {
			var i, r, s;
			if (!this.runtime.loop_stack.length) return void t.set_int(0);
			if (e) {
				for (r = 0, s = this.runtime.loop_stack.length; s > r; r++)
					if (i = this.runtime.loop_stack[r], i.name === e) return void t.set_int(i.index);
				t.set_int(0)
			} else i = this.runtime.getCurrentLoop(), t.set_int(i ? i.index : -1)
		}, h.prototype.distance = function(t, e, i, r, s) {
			t.set_float(cr.distanceTo(e, i, r, s))
		}, h.prototype.angle = function(t, e, i, r, s) {
			t.set_float(cr.to_degrees(cr.angleTo(e, i, r, s)))
		}, h.prototype.scrollx = function(t) {
			t.set_float(this.runtime.running_layout.scrollX)
		}, h.prototype.scrolly = function(t) {
			t.set_float(this.runtime.running_layout.scrollY)
		}, h.prototype.newline = function(t) {
			t.set_string("\n")
		}, h.prototype.lerp = function(t, e, i, r) {
			t.set_float(cr.lerp(e, i, r))
		}, h.prototype.qarp = function(t, e, i, r, s) {
			t.set_float(cr.qarp(e, i, r, s))
		}, h.prototype.cubic = function(t, e, i, r, s, n) {
			t.set_float(cr.cubic(e, i, r, s, n))
		}, h.prototype.cosp = function(t, e, i, r) {
			t.set_float(cr.cosp(e, i, r))
		}, h.prototype.windowwidth = function(t) {
			t.set_int(this.runtime.width)
		}, h.prototype.windowheight = function(t) {
			t.set_int(this.runtime.height)
		}, h.prototype.uppercase = function(t, e) {
			t.set_string(cr.is_string(e) ? e.toUpperCase() : "")
		}, h.prototype.lowercase = function(t, e) {
			t.set_string(cr.is_string(e) ? e.toLowerCase() : "")
		}, h.prototype.clamp = function(t, e, i, r) {
			t.set_float(i > e ? i : e > r ? r : e)
		}, h.prototype.layerscale = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? i.scale : 0)
		}, h.prototype.layeropacity = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? 100 * i.opacity : 0)
		}, h.prototype.layerscalerate = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? i.zoomRate : 0)
		}, h.prototype.layerparallaxx = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? 100 * i.parallaxX : 0)
		}, h.prototype.layerparallaxy = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? 100 * i.parallaxY : 0)
		}, h.prototype.layerindex = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_int(i ? i.index : -1)
		}, h.prototype.layoutscale = function(t) {
			t.set_float(this.runtime.running_layout ? this.runtime.running_layout.scale : 0)
		}, h.prototype.layoutangle = function(t) {
			t.set_float(cr.to_degrees(this.runtime.running_layout.angle))
		}, h.prototype.layerangle = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? cr.to_degrees(i.angle) : 0)
		}, h.prototype.layoutwidth = function(t) {
			t.set_int(this.runtime.running_layout.width)
		}, h.prototype.layoutheight = function(t) {
			t.set_int(this.runtime.running_layout.height)
		}, h.prototype.find = function(t, e, i) {
			t.set_int(cr.is_string(e) && cr.is_string(i) ? e.search(new RegExp(cr.regexp_escape(i), "i")) : -1)
		}, h.prototype.left = function(t, e, i) {
			t.set_string(cr.is_string(e) ? e.substr(0, i) : "")
		}, h.prototype.right = function(t, e, i) {
			t.set_string(cr.is_string(e) ? e.substr(e.length - i) : "")
		}, h.prototype.mid = function(t, e, i, r) {
			t.set_string(cr.is_string(e) ? e.substr(i, r) : "")
		}, h.prototype.tokenat = function(t, e, i, r) {
			if (cr.is_string(e) && cr.is_string(r)) {
				var s = e.split(r),
					n = cr.floor(i);
				t.set_string(0 > n || n >= s.length ? "" : s[n])
			} else t.set_string("")
		}, h.prototype.tokencount = function(t, e, i) {
			t.set_int(cr.is_string(e) && e.length ? e.split(i).length : 0)
		}, h.prototype.replace = function(t, e, i, r) {
			t.set_string(cr.is_string(e) && cr.is_string(i) && cr.is_string(r) ? e.replace(new RegExp(cr.regexp_escape(i), "gi"), r) : cr.is_string(e) ? e : "")
		}, h.prototype.trim = function(t, e) {
			t.set_string(cr.is_string(e) ? e.trim() : "")
		}, h.prototype.pi = function(t) {
			t.set_float(cr.PI)
		}, h.prototype.layoutname = function(t) {
			t.set_string(this.runtime.running_layout ? this.runtime.running_layout.name : "")
		}, h.prototype.renderer = function(t) {
			t.set_string(this.runtime.gl ? "webgl" : "canvas2d")
		}, h.prototype.rendererdetail = function(t) {
			t.set_string(this.runtime.glUnmaskedRenderer)
		}, h.prototype.anglediff = function(t, e, i) {
			t.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(e), cr.to_radians(i))))
		}, h.prototype.choose = function(t) {
			var e = cr.floor(Math.random() * (arguments.length - 1));
			t.set_any(arguments[e + 1])
		}, h.prototype.rgb = function(t, e, i, r) {
			t.set_int(cr.RGB(e, i, r))
		}, h.prototype.projectversion = function(t) {
			t.set_string(this.runtime.versionstr)
		}, h.prototype.projectname = function(t) {
			t.set_string(this.runtime.projectName)
		}, h.prototype.anglelerp = function(t, e, i, r) {
			e = cr.to_radians(e), i = cr.to_radians(i);
			var s = cr.angleDiff(e, i);
			t.set_float(cr.to_clamped_degrees(cr.angleClockwise(i, e) ? e + s * r : e - s * r))
		}, h.prototype.anglerotate = function(t, e, i, r) {
			e = cr.to_radians(e), i = cr.to_radians(i), r = cr.to_radians(r), t.set_float(cr.to_clamped_degrees(cr.angleRotate(e, i, r)))
		}, h.prototype.zeropad = function(t, e, i) {
			var r = 0 > e ? "-" : "";
			0 > e && (e = -e);
			for (var s = i - e.toString().length, n = 0; s > n; n++) r += "0";
			t.set_string(r + e.toString())
		}, h.prototype.cpuutilisation = function(t) {
			t.set_float(this.runtime.cpuutilisation / 1e3)
		}, h.prototype.viewportleft = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? i.viewLeft : 0)
		}, h.prototype.viewporttop = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? i.viewTop : 0)
		}, h.prototype.viewportright = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? i.viewRight : 0)
		}, h.prototype.viewportbottom = function(t, e) {
			var i = this.runtime.getLayer(e);
			t.set_float(i ? i.viewBottom : 0)
		}, h.prototype.loadingprogress = function(t) {
			t.set_float(this.runtime.loadingprogress)
		}, h.prototype.unlerp = function(t, e, i, r) {
			t.set_float(cr.unlerp(e, i, r))
		}, h.prototype.canvassnapshot = function(t) {
			t.set_string(this.runtime.snapshotData)
		}, h.prototype.urlencode = function(t, e) {
			t.set_string(encodeURIComponent(e))
		}, h.prototype.urldecode = function(t, e) {
			t.set_string(decodeURIComponent(e))
		}, h.prototype.canvastolayerx = function(t, e, i, r) {
			var s = this.runtime.getLayer(e);
			t.set_float(s ? s.canvasToLayer(i, r, !0) : 0)
		}, h.prototype.canvastolayery = function(t, e, i, r) {
			var s = this.runtime.getLayer(e);
			t.set_float(s ? s.canvasToLayer(i, r, !1) : 0)
		}, h.prototype.layertocanvasx = function(t, e, i, r) {
			var s = this.runtime.getLayer(e);
			t.set_float(s ? s.layerToCanvas(i, r, !0) : 0)
		}, h.prototype.layertocanvasy = function(t, e, i, r) {
			var s = this.runtime.getLayer(e);
			t.set_float(s ? s.layerToCanvas(i, r, !1) : 0)
		}, h.prototype.savestatejson = function(t) {
			t.set_string(this.runtime.lastSaveJson)
		}, h.prototype.imagememoryusage = function(t) {
			t.set_float(this.runtime.glwrap ? Math.round(100 * this.runtime.glwrap.estimateVRAM() / 1048576) / 100 : 0)
		}, h.prototype.regexsearch = function(t, e, r, s) {
			var n = i(r, s);
			t.set_int(e ? e.search(n) : -1)
		}, h.prototype.regexreplace = function(t, e, r, s, n) {
			var a = i(r, s);
			t.set_string(e ? e.replace(a, n) : "")
		};
		var v = [],
			b = "",
			w = "",
			x = "";
		h.prototype.regexmatchcount = function(t, e, r, s) {
			i(r, s);
			c(e, r, s), t.set_int(v ? v.length : 0)
		}, h.prototype.regexmatchat = function(t, e, r, s, n) {
			n = Math.floor(n);
			i(r, s);
			c(e, r, s), t.set_string(!v || 0 > n || n >= v.length ? "" : v[n])
		}, h.prototype.infinity = function(t) {
			t.set_float(1 / 0)
		}, h.prototype.setbit = function(t, e, i, r) {
			e = 0 | e, i = 0 | i, r = 0 !== r ? 1 : 0, t.set_int(e & ~(1 << i) | r << i)
		}, h.prototype.togglebit = function(t, e, i) {
			e = 0 | e, i = 0 | i, t.set_int(e ^ 1 << i)
		}, h.prototype.getbit = function(t, e, i) {
			e = 0 | e, i = 0 | i, t.set_int(e & 1 << i ? 1 : 0)
		}, h.prototype.originalwindowwidth = function(t) {
			t.set_int(this.runtime.original_width)
		}, h.prototype.originalwindowheight = function(t) {
			t.set_int(this.runtime.original_height)
		}, l.exps = new h, l.runWaits = function() {
			var t, e, i, r, s, a, h, c = this.runtime.getCurrentEventStack();
			for (t = 0, i = this.waits.length; i > t; t++) {
				if (r = this.waits[t], -1 === r.time) {
					if (!r.signalled) continue
				} else if (r.time > this.runtime.kahanTime.sum) continue;
				c.current_event = r.ev, c.actindex = r.actindex, c.cndindex = 0;
				for (s in r.sols) r.sols.hasOwnProperty(s) && (a = this.runtime.types_by_index[parseInt(s, 10)].getCurrentSol(), h = r.sols[s], a.select_all = h.sa, cr.shallowAssignArray(a.instances, h.insts), o(h));
				r.ev.resume_actions_and_subevents(), this.runtime.clearSol(r.solModifiers), r.deleteme = !0
			}
			for (t = 0, e = 0, i = this.waits.length; i > t; t++) r = this.waits[t], this.waits[e] = r, r.deleteme ? n(r) : e++;
			cr.truncateArray(this.waits, e)
		}
	}(),
	function() {
		cr.add_common_aces = function(t, e) {
			var i = t[1],
				r = t[3],
				s = t[4],
				n = t[5],
				a = t[6],
				o = t[7],
				h = t[8];
			e.cnds || (e.cnds = {}), e.acts || (e.acts = {}), e.exps || (e.exps = {});
			var c = e.cnds,
				l = e.acts,
				u = e.exps;
			r && (c.CompareX = function(t, e) {
				return cr.do_cmp(this.x, t, e)
			}, c.CompareY = function(t, e) {
				return cr.do_cmp(this.y, t, e)
			}, c.IsOnScreen = function() {
				var t = this.layer;
				this.update_bbox();
				var e = this.bbox;
				return !(e.right < t.viewLeft || e.bottom < t.viewTop || e.left > t.viewRight || e.top > t.viewBottom)
			}, c.IsOutsideLayout = function() {
				this.update_bbox();
				var t = this.bbox,
					e = this.runtime.running_layout;
				return t.right < 0 || t.bottom < 0 || t.left > e.width || t.top > e.height
			}, c.PickDistance = function(t, e, i) {
				var r = this.getCurrentSol(),
					s = r.getObjects();
				if (!s.length) return !1;
				var n, a, o, h = s[0],
					c = h,
					l = cr.distanceTo(h.x, h.y, e, i);
				for (n = 1, a = s.length; a > n; n++) h = s[n], o = cr.distanceTo(h.x, h.y, e, i), (0 === t && l > o || 1 === t && o > l) && (l = o, c = h);
				return r.pick_one(c), !0
			}, l.SetX = function(t) {
				this.x !== t && (this.x = t, this.set_bbox_changed())
			}, l.SetY = function(t) {
				this.y !== t && (this.y = t, this.set_bbox_changed())
			}, l.SetPos = function(t, e) {
				(this.x !== t || this.y !== e) && (this.x = t, this.y = e, this.set_bbox_changed())
			}, l.SetPosToObject = function(t, e) {
				var i = t.getPairedInstance(this);
				if (i) {
					var r, s;
					i.getImagePoint ? (r = i.getImagePoint(e, !0), s = i.getImagePoint(e, !1)) : (r = i.x, s = i.y), (this.x !== r || this.y !== s) && (this.x = r, this.y = s, this.set_bbox_changed())
				}
			}, l.MoveForward = function(t) {
				0 !== t && (this.x += Math.cos(this.angle) * t, this.y += Math.sin(this.angle) * t, this.set_bbox_changed())
			}, l.MoveAtAngle = function(t, e) {
				0 !== e && (this.x += Math.cos(cr.to_radians(t)) * e, this.y += Math.sin(cr.to_radians(t)) * e, this.set_bbox_changed())
			}, u.X = function(t) {
				t.set_float(this.x)
			}, u.Y = function(t) {
				t.set_float(this.y)
			}, u.dt = function(t) {
				t.set_float(this.runtime.getDt(this))
			}), s && (c.CompareWidth = function(t, e) {
				return cr.do_cmp(this.width, t, e)
			}, c.CompareHeight = function(t, e) {
				return cr.do_cmp(this.height, t, e)
			}, l.SetWidth = function(t) {
				this.width !== t && (this.width = t, this.set_bbox_changed())
			}, l.SetHeight = function(t) {
				this.height !== t && (this.height = t, this.set_bbox_changed())
			}, l.SetSize = function(t, e) {
				(this.width !== t || this.height !== e) && (this.width = t, this.height = e, this.set_bbox_changed())
			}, u.Width = function(t) {
				t.set_float(this.width)
			}, u.Height = function(t) {
				t.set_float(this.height)
			}, u.BBoxLeft = function(t) {
				this.update_bbox(), t.set_float(this.bbox.left)
			}, u.BBoxTop = function(t) {
				this.update_bbox(), t.set_float(this.bbox.top)
			}, u.BBoxRight = function(t) {
				this.update_bbox(), t.set_float(this.bbox.right)
			}, u.BBoxBottom = function(t) {
				this.update_bbox(), t.set_float(this.bbox.bottom)
			}), n && (c.AngleWithin = function(t, e) {
				return cr.angleDiff(this.angle, cr.to_radians(e)) <= cr.to_radians(t)
			}, c.IsClockwiseFrom = function(t) {
				return cr.angleClockwise(this.angle, cr.to_radians(t))
			}, c.IsBetweenAngles = function(t, e) {
				var i = cr.to_clamped_radians(t),
					r = cr.to_clamped_radians(e),
					s = cr.clamp_angle(this.angle),
					n = !cr.angleClockwise(r, i);
				return n ? !(!cr.angleClockwise(s, i) && cr.angleClockwise(s, r)) : cr.angleClockwise(s, i) && !cr.angleClockwise(s, r)
			}, l.SetAngle = function(t) {
				var e = cr.to_radians(cr.clamp_angle_degrees(t));
				isNaN(e) || this.angle !== e && (this.angle = e, this.set_bbox_changed())
			}, l.RotateClockwise = function(t) {
				0 === t || isNaN(t) || (this.angle += cr.to_radians(t), this.angle = cr.clamp_angle(this.angle), this.set_bbox_changed())
			}, l.RotateCounterclockwise = function(t) {
				0 === t || isNaN(t) || (this.angle -= cr.to_radians(t), this.angle = cr.clamp_angle(this.angle), this.set_bbox_changed())
			}, l.RotateTowardAngle = function(t, e) {
				var i = cr.angleRotate(this.angle, cr.to_radians(e), cr.to_radians(t));
				isNaN(i) || this.angle !== i && (this.angle = i, this.set_bbox_changed())
			}, l.RotateTowardPosition = function(t, e, i) {
				var r = e - this.x,
					s = i - this.y,
					n = Math.atan2(s, r),
					a = cr.angleRotate(this.angle, n, cr.to_radians(t));
				isNaN(a) || this.angle !== a && (this.angle = a, this.set_bbox_changed())
			}, l.SetTowardPosition = function(t, e) {
				var i = t - this.x,
					r = e - this.y,
					s = Math.atan2(r, i);
				isNaN(s) || this.angle !== s && (this.angle = s, this.set_bbox_changed())
			}, u.Angle = function(t) {
				t.set_float(cr.to_clamped_degrees(this.angle))
			}), i || (c.CompareInstanceVar = function(t, e, i) {
				return cr.do_cmp(this.instance_vars[t], e, i)
			}, c.IsBoolInstanceVarSet = function(t) {
				return this.instance_vars[t]
			}, c.PickInstVarHiLow = function(t, e) {
				var i = this.getCurrentSol(),
					r = i.getObjects();
				if (!r.length) return !1;
				var s, n, a, o = r[0],
					h = o,
					c = o.instance_vars[e];
				for (s = 1, n = r.length; n > s; s++) o = r[s], a = o.instance_vars[e], (0 === t && c > a || 1 === t && a > c) && (c = a, h = o);
				return i.pick_one(h), !0
			}, c.PickByUID = function(t) {
				var e, i, r, s, n, a, o, h = this.runtime.getCurrentCondition();
				if (h.inverted) {
					if (o = this.getCurrentSol(), o.select_all) {
						for (o.select_all = !1, cr.clearArray(o.instances), cr.clearArray(o.else_instances), a = this.instances, e = 0, i = a.length; i > e; e++) s = a[e], s.uid === t ? o.else_instances.push(s) : o.instances.push(s);
						return this.applySolToContainer(), !!o.instances.length
					}
					for (e = 0, r = 0, i = o.instances.length; i > e; e++) s = o.instances[e], o.instances[r] = s, s.uid === t ? o.else_instances.push(s) : r++;
					return cr.truncateArray(o.instances, r), this.applySolToContainer(), !!o.instances.length
				}
				if (s = this.runtime.getObjectByUID(t), !s) return !1;
				if (o = this.getCurrentSol(), !o.select_all && -1 === o.instances.indexOf(s)) return !1;
				if (this.is_family) {
					for (n = s.type.families, e = 0, i = n.length; i > e; e++)
						if (n[e] === this) return o.pick_one(s), this.applySolToContainer(), !0
				} else if (s.type === this) return o.pick_one(s), this.applySolToContainer(), !0;
				return !1
			}, c.OnCreated = function() {
				return !0
			}, c.OnDestroyed = function() {
				return !0
			}, l.SetInstanceVar = function(t, e) {
				var i = this.instance_vars;
				cr.is_number(i[t]) ? i[t] = cr.is_number(e) ? e : parseFloat(e) : cr.is_string(i[t]) && (i[t] = cr.is_string(e) ? e : e.toString())
			}, l.AddInstanceVar = function(t, e) {
				var i = this.instance_vars;
				cr.is_number(i[t]) ? i[t] += cr.is_number(e) ? e : parseFloat(e) : cr.is_string(i[t]) && (i[t] += cr.is_string(e) ? e : e.toString())
			}, l.SubInstanceVar = function(t, e) {
				var i = this.instance_vars;
				cr.is_number(i[t]) && (i[t] -= cr.is_number(e) ? e : parseFloat(e))
			}, l.SetBoolInstanceVar = function(t, e) {
				this.instance_vars[t] = e ? 1 : 0
			}, l.ToggleBoolInstanceVar = function(t) {
				this.instance_vars[t] = 1 - this.instance_vars[t]
			}, l.Destroy = function() {
				this.runtime.DestroyInstance(this)
			}, l.LoadFromJsonString || (l.LoadFromJsonString = function(t) {
				var e, i, r, s;
				try {
					e = JSON.parse(t)
				} catch (n) {
					return
				}
				if (this.runtime.loadInstanceFromJSON(this, e, !0), this.afterLoad && this.afterLoad(), this.behavior_insts)
					for (i = 0, r = this.behavior_insts.length; r > i; ++i) s = this.behavior_insts[i], s.afterLoad && s.afterLoad()
			}), u.Count = function(t) {
				var e, i, r, s = t.object_class.instances.length;
				for (e = 0, i = this.runtime.createRow.length; i > e; e++) r = this.runtime.createRow[e], t.object_class.is_family ? r.type.families.indexOf(t.object_class) >= 0 && s++ : r.type === t.object_class && s++;
				t.set_int(s)
			}, u.PickedCount = function(t) {
				t.set_int(t.object_class.getCurrentSol().getObjects().length)
			}, u.UID = function(t) {
				t.set_int(this.uid)
			}, u.IID = function(t) {
				t.set_int(this.get_iid())
			}, u.AsJSON || (u.AsJSON = function(t) {
				t.set_string(JSON.stringify(this.runtime.saveInstanceToJSON(this, !0)))
			})), a && (c.IsVisible = function() {
				return this.visible
			}, l.SetVisible = function(t) {
				!t != !this.visible && (this.visible = t, this.runtime.redraw = !0)
			}, c.CompareOpacity = function(t, e) {
				return cr.do_cmp(cr.round6dp(100 * this.opacity), t, e)
			}, l.SetOpacity = function(t) {
				var e = t / 100;
				0 > e ? e = 0 : e > 1 && (e = 1), e !== this.opacity && (this.opacity = e, this.runtime.redraw = !0)
			}, u.Opacity = function(t) {
				t.set_float(cr.round6dp(100 * this.opacity))
			}), o && (c.IsOnLayer = function(t) {
				return t ? this.layer === t : !1
			}, c.PickTopBottom = function(t) {
				var e = this.getCurrentSol(),
					i = e.getObjects();
				if (!i.length) return !1;
				var r, s, n = i[0],
					a = n;
				for (r = 1, s = i.length; s > r; r++) n = i[r], 0 === t ? (n.layer.index > a.layer.index || n.layer.index === a.layer.index && n.get_zindex() > a.get_zindex()) && (a = n) : (n.layer.index < a.layer.index || n.layer.index === a.layer.index && n.get_zindex() < a.get_zindex()) && (a = n);
				return e.pick_one(a), !0
			}, l.MoveToTop = function() {
				var t = this.layer,
					e = t.instances;
				e.length && e[e.length - 1] === this || (t.removeFromInstanceList(this, !1), t.appendToInstanceList(this, !1), this.runtime.redraw = !0)
			}, l.MoveToBottom = function() {
				var t = this.layer,
					e = t.instances;
				e.length && e[0] === this || (t.removeFromInstanceList(this, !1), t.prependToInstanceList(this, !1), this.runtime.redraw = !0)
			}, l.MoveToLayer = function(t) {
				t && t != this.layer && (this.layer.removeFromInstanceList(this, !0), this.layer = t, t.appendToInstanceList(this, !0), this.runtime.redraw = !0)
			}, l.ZMoveToObject = function(t, e) {
				var i = 0 === t;
				if (e) {
					var r = e.getFirstPicked(this);
					r && r.uid !== this.uid && (this.layer.index !== r.layer.index && (this.layer.removeFromInstanceList(this, !0), this.layer = r.layer, r.layer.appendToInstanceList(this, !0)), this.layer.moveInstanceAdjacent(this, r, i), this.runtime.redraw = !0)
				}
			}, u.LayerNumber = function(t) {
				t.set_int(this.layer.number)
			}, u.LayerName = function(t) {
				t.set_string(this.layer.name)
			}, u.ZIndex = function(t) {
				t.set_int(this.get_zindex())
			}), h && (l.SetEffectEnabled = function(t, e) {
				if (this.runtime.glwrap) {
					var i = this.type.getEffectIndexByName(e);
					if (!(0 > i)) {
						var r = 1 === t;
						this.active_effect_flags[i] !== r && (this.active_effect_flags[i] = r, this.updateActiveEffects(), this.runtime.redraw = !0)
					}
				}
			}, l.SetEffectParam = function(t, e, i) {
				if (this.runtime.glwrap) {
					var r = this.type.getEffectIndexByName(t);
					if (!(0 > r)) {
						var s = this.type.effect_types[r],
							n = this.effect_params[r];
						e = Math.floor(e), 0 > e || e >= n.length || (1 === this.runtime.glwrap.getProgramParameterType(s.shaderindex, e) && (i /= 100), n[e] !== i && (n[e] = i, s.active && (this.runtime.redraw = !0)))
					}
				}
			})
		}, cr.set_bbox_changed = function() {
			this.bbox_changed = !0, this.cell_changed = !0, this.type.any_cell_changed = !0, this.runtime.redraw = !0;
			var t, e, i = this.bbox_changed_callbacks;
			for (t = 0, e = i.length; e > t; ++t) i[t](this);
			this.layer.useRenderCells && this.update_bbox()
		}, cr.add_bbox_changed_callback = function(t) {
			t && this.bbox_changed_callbacks.push(t)
		}, cr.update_bbox = function() {
			if (this.bbox_changed) {
				var t = this.bbox,
					e = this.bquad;
				t.set(this.x, this.y, this.x + this.width, this.y + this.height), t.offset(-this.hotspotX * this.width, -this.hotspotY * this.height), this.angle ? (t.offset(-this.x, -this.y), e.set_from_rotated_rect(t, this.angle), e.offset(this.x, this.y), e.bounding_box(t)) : e.set_from_rect(t), t.normalize(), this.bbox_changed = !1, this.update_render_cell()
			}
		};
		var t = new cr.rect(0, 0, 0, 0);
		cr.update_render_cell = function() {
			if (this.layer.useRenderCells) {
				var e = this.layer.render_grid,
					i = this.bbox;
				t.set(e.XToCell(i.left), e.YToCell(i.top), e.XToCell(i.right), e.YToCell(i.bottom)), this.rendercells.equals(t) || (this.rendercells.right < this.rendercells.left ? e.update(this, null, t) : e.update(this, this.rendercells, t), this.rendercells.copy(t), this.layer.render_list_stale = !0)
			}
		}, cr.update_collision_cell = function() {
			if (this.cell_changed && this.collisionsEnabled) {
				this.update_bbox();
				var e = this.type.collision_grid,
					i = this.bbox;
				t.set(e.XToCell(i.left), e.YToCell(i.top), e.XToCell(i.right), e.YToCell(i.bottom)), this.collcells.equals(t) || (this.collcells.right < this.collcells.left ? e.update(this, null, t) : e.update(this, this.collcells, t), this.collcells.copy(t), this.cell_changed = !1)
			}
		}, cr.inst_contains_pt = function(t, e) {
			return this.bbox.contains_pt(t, e) && this.bquad.contains_pt(t, e) ? this.collision_poly && !this.collision_poly.is_empty() ? (this.collision_poly.cache_poly(this.width, this.height, this.angle), this.collision_poly.contains_pt(t - this.x, e - this.y)) : !0 : !1
		}, cr.inst_get_iid = function() {
			return this.type.updateIIDs(), this.iid
		}, cr.inst_get_zindex = function() {
			return this.layer.updateZIndices(), this.zindex
		}, cr.inst_updateActiveEffects = function() {
			cr.clearArray(this.active_effect_types);
			var t, e, i, r = !0;
			for (t = 0, e = this.active_effect_flags.length; e > t; t++) this.active_effect_flags[t] && (i = this.type.effect_types[t], this.active_effect_types.push(i), i.preservesOpaqueness || (r = !1));
			this.uses_shaders = !!this.active_effect_types.length, this.shaders_preserve_opaqueness = r
		}, cr.inst_toString = function() {
			return "Inst" + this.puid
		}, cr.type_getFirstPicked = function(t) {
			if (t && t.is_contained && t.type != this) {
				var e, i, r;
				for (e = 0, i = t.siblings.length; i > e; e++)
					if (r = t.siblings[e], r.type == this) return r
			}
			var s = this.getCurrentSol().getObjects();
			return s.length ? s[0] : null
		}, cr.type_getPairedInstance = function(t) {
			var e = this.getCurrentSol().getObjects();
			return e.length ? e[t.get_iid() % e.length] : null
		}, cr.type_updateIIDs = function() {
			if (this.stale_iids && !this.is_family) {
				var t, e;
				for (t = 0, e = this.instances.length; e > t; t++) this.instances[t].iid = t;
				var i = t,
					r = this.runtime.createRow;
				for (t = 0, e = r.length; e > t; ++t) r[t].type === this && (r[t].iid = i++);
				this.stale_iids = !1
			}
		}, cr.type_getInstanceByIID = function(t) {
			if (t < this.instances.length) return this.instances[t];
			t -= this.instances.length;
			var e, i, r = this.runtime.createRow;
			for (e = 0, i = r.length; i > e; ++e)
				if (r[e].type === this) {
					if (0 === t) return r[e];
					--t
				}
			return null
		}, cr.type_getCurrentSol = function() {
			return this.solstack[this.cur_sol]
		}, cr.type_pushCleanSol = function() {
			this.cur_sol++, this.cur_sol === this.solstack.length ? this.solstack.push(new cr.selection(this)) : this.solstack[this.cur_sol].select_all = !0
		}, cr.type_pushCopySol = function() {
			this.cur_sol++, this.cur_sol === this.solstack.length && this.solstack.push(new cr.selection(this));
			var t = this.solstack[this.cur_sol],
				e = this.solstack[this.cur_sol - 1];
			e.select_all ? t.select_all = !0 : (t.select_all = !1, cr.shallowAssignArray(t.instances, e.instances), cr.shallowAssignArray(t.else_instances, e.else_instances))
		}, cr.type_popSol = function() {
			this.cur_sol--
		}, cr.type_getBehaviorByName = function(t) {
			var e, i, r, s, n, a = 0;
			if (!this.is_family)
				for (e = 0, i = this.families.length; i > e; e++)
					for (n = this.families[e], r = 0, s = n.behaviors.length; s > r; r++) {
						if (t === n.behaviors[r].name) return this.extra.lastBehIndex = a, n.behaviors[r];
						a++
					}
			for (e = 0, i = this.behaviors.length; i > e; e++) {
				if (t === this.behaviors[e].name) return this.extra.lastBehIndex = a, this.behaviors[e];
				a++
			}
			return null
		}, cr.type_getBehaviorIndexByName = function(t) {
			var e = this.getBehaviorByName(t);
			return e ? this.extra.lastBehIndex : -1
		}, cr.type_getEffectIndexByName = function(t) {
			var e, i;
			for (e = 0, i = this.effect_types.length; i > e; e++)
				if (this.effect_types[e].name === t) return e;
			return -1
		}, cr.type_applySolToContainer = function() {
			if (this.is_contained && !this.is_family) {
				var t, e, i, r, s, n, a;
				this.updateIIDs(), n = this.getCurrentSol();
				var o = n.select_all,
					h = this.runtime.getCurrentEventStack(),
					c = h && h.current_event && h.current_event.orblock;
				for (t = 0, e = this.container.length; e > t; t++)
					if (s = this.container[t], s !== this && (s.updateIIDs(), a = s.getCurrentSol(), a.select_all = o, !o)) {
						for (cr.clearArray(a.instances), i = 0, r = n.instances.length; r > i; ++i) a.instances[i] = s.getInstanceByIID(n.instances[i].iid);
						if (c)
							for (cr.clearArray(a.else_instances), i = 0, r = n.else_instances.length; r > i; ++i) a.else_instances[i] = s.getInstanceByIID(n.else_instances[i].iid)
					}
			}
		}, cr.type_toString = function() {
			return "Type" + this.sid
		}, cr.do_cmp = function(t, e, i) {
			if ("undefined" == typeof t || "undefined" == typeof i) return !1;
			switch (e) {
				case 0:
					return t === i;
				case 1:
					return t !== i;
				case 2:
					return i > t;
				case 3:
					return i >= t;
				case 4:
					return t > i;
				case 5:
					return t >= i;
				default:
					return !1
			}
		}
	}(), cr.shaders = {}, cr.plugins_.Audio = function(t) {
		this.runtime = t
	},
	function() {
		function t(t) {
			var e = i(t);
			return isFinite(e) || (e = 0), 0 > e && (e = 0), e > 1 && (e = 1), e
		}

		function e(t) {
			return 0 > t && (t = 0), t > 1 && (t = 1), r(t)
		}

		function i(t) {
			return Math.pow(10, t / 20)
		}

		function r(t) {
			return Math.log(t) / Math.log(10) * 20
		}

		function s(t) {
			return t = t.toLowerCase(), le.hasOwnProperty(t) && le[t].length ? le[t][0].getInputNode() : X.destination
		}

		function n() {
			return X.createGain ? X.createGain() : X.createGainNode()
		}

		function a(t) {
			return X.createDelay ? X.createDelay(t) : X.createDelayNode(t)
		}

		function o(t) {
			t.start ? t.start(0) : t.noteOn(0)
		}

		function h(t, e, i) {
			t.start ? t.start(0, e) : t.noteGrainOn(0, e, i - e)
		}

		function c(t) {
			try {
				t.stop ? t.stop(0) : t.noteOff(0)
			} catch (e) {}
		}

		function l(t, e, i, r) {
			if (t) {
				if (t.cancelScheduledValues(0), 0 === r) return void(t.value = e);
				var s = X.currentTime;
				switch (r += s, i) {
					case 0:
						t.setValueAtTime(e, r);
						break;
					case 1:
						t.setValueAtTime(t.value, s), t.linearRampToValueAtTime(e, r);
						break;
					case 2:
						t.setValueAtTime(t.value, s), t.exponentialRampToValueAtTime(e, r)
				}
			}
		}

		function u(t, e, i, r, s, a) {
			this.type = "filter", this.params = [t, e, i, r, s, a], this.inputNode = n(), this.wetNode = n(), this.wetNode.gain.value = a, this.dryNode = n(), this.dryNode.gain.value = 1 - a, this.filterNode = X.createBiquadFilter(), this.filterNode.type = "number" == typeof this.filterNode.type ? t : ue[t], this.filterNode.frequency.value = e, this.filterNode.detune && (this.filterNode.detune.value = i), this.filterNode.Q.value = r, this.filterNode.gain.value = s, this.inputNode.connect(this.filterNode), this.inputNode.connect(this.dryNode), this.filterNode.connect(this.wetNode)
		}

		function p(t, e, i) {
			this.type = "delay", this.params = [t, e, i], this.inputNode = n(), this.wetNode = n(), this.wetNode.gain.value = i, this.dryNode = n(), this.dryNode.gain.value = 1 - i, this.mainNode = n(), this.delayNode = a(t), this.delayNode.delayTime.value = t, this.delayGainNode = n(), this.delayGainNode.gain.value = e, this.inputNode.connect(this.mainNode), this.inputNode.connect(this.dryNode), this.mainNode.connect(this.wetNode), this.mainNode.connect(this.delayNode), this.delayNode.connect(this.delayGainNode), this.delayGainNode.connect(this.mainNode)
		}

		function d(t, e, i, r) {
			this.type = "convolve", this.params = [e, i, r], this.inputNode = n(), this.wetNode = n(), this.wetNode.gain.value = i, this.dryNode = n(), this.dryNode.gain.value = 1 - i, this.convolveNode = X.createConvolver(), t && (this.convolveNode.normalize = e, this.convolveNode.buffer = t), this.inputNode.connect(this.convolveNode), this.inputNode.connect(this.dryNode), this.convolveNode.connect(this.wetNode)
		}

		function f(t, e, i, r, s) {
			this.type = "flanger", this.params = [t, e, i, r, s], this.inputNode = n(), this.dryNode = n(), this.dryNode.gain.value = 1 - s / 2, this.wetNode = n(), this.wetNode.gain.value = s / 2, this.feedbackNode = n(), this.feedbackNode.gain.value = r, this.delayNode = a(t + e), this.delayNode.delayTime.value = t, this.oscNode = X.createOscillator(), this.oscNode.frequency.value = i, this.oscGainNode = n(), this.oscGainNode.gain.value = e, this.inputNode.connect(this.delayNode), this.inputNode.connect(this.dryNode), this.delayNode.connect(this.wetNode), this.delayNode.connect(this.feedbackNode), this.feedbackNode.connect(this.delayNode), this.oscNode.connect(this.oscGainNode), this.oscGainNode.connect(this.delayNode.delayTime), o(this.oscNode)
		}

		function g(t, e, i, r, s, a) {
			this.type = "phaser", this.params = [t, e, i, r, s, a], this.inputNode = n(), this.dryNode = n(), this.dryNode.gain.value = 1 - a / 2, this.wetNode = n(), this.wetNode.gain.value = a / 2, this.filterNode = X.createBiquadFilter(), this.filterNode.type = "number" == typeof this.filterNode.type ? 7 : "allpass", this.filterNode.frequency.value = t, this.filterNode.detune && (this.filterNode.detune.value = e), this.filterNode.Q.value = i, this.oscNode = X.createOscillator(), this.oscNode.frequency.value = s, this.oscGainNode = n(), this.oscGainNode.gain.value = r, this.inputNode.connect(this.filterNode), this.inputNode.connect(this.dryNode), this.filterNode.connect(this.wetNode), this.oscNode.connect(this.oscGainNode), this.oscGainNode.connect(this.filterNode.frequency), o(this.oscNode)
		}

		function m(t) {
			this.type = "gain", this.params = [t], this.node = n(), this.node.gain.value = t
		}

		function y(t, e) {
			this.type = "tremolo", this.params = [t, e], this.node = n(), this.node.gain.value = 1 - e / 2, this.oscNode = X.createOscillator(), this.oscNode.frequency.value = t, this.oscGainNode = n(), this.oscGainNode.gain.value = e / 2, this.oscNode.connect(this.oscGainNode), this.oscGainNode.connect(this.node.gain), o(this.oscNode)
		}

		function _(t, e) {
			this.type = "ringmod", this.params = [t, e], this.inputNode = n(), this.wetNode = n(), this.wetNode.gain.value = e, this.dryNode = n(), this.dryNode.gain.value = 1 - e, this.ringNode = n(), this.ringNode.gain.value = 0, this.oscNode = X.createOscillator(), this.oscNode.frequency.value = t, this.oscNode.connect(this.ringNode.gain), o(this.oscNode), this.inputNode.connect(this.ringNode), this.inputNode.connect(this.dryNode), this.ringNode.connect(this.wetNode)
		}

		function v(t, e, r, s, a) {
			this.type = "distortion", this.params = [t, e, r, s, a], this.inputNode = n(), this.preGain = n(), this.postGain = n(), this.setDrive(r, i(s)), this.wetNode = n(), this.wetNode.gain.value = a, this.dryNode = n(), this.dryNode.gain.value = 1 - a, this.waveShaper = X.createWaveShaper(), this.curve = new Float32Array(65536), this.generateColortouchCurve(t, e), this.waveShaper.curve = this.curve, this.inputNode.connect(this.preGain), this.inputNode.connect(this.dryNode), this.preGain.connect(this.waveShaper), this.waveShaper.connect(this.postGain), this.postGain.connect(this.wetNode)
		}

		function b(t, e) {
			return 1 - Math.exp(-e * t)
		}

		function w(t, e, i, r, s) {
			this.type = "compressor", this.params = [t, e, i, r, s], this.node = X.createDynamicsCompressor();
			try {
				this.node.threshold.value = t, this.node.knee.value = e, this.node.ratio.value = i, this.node.attack.value = r, this.node.release.value = s
			} catch (n) {}
		}

		function x(t, e) {
			this.type = "analyser", this.params = [t, e], this.node = X.createAnalyser(), this.node.fftSize = t, this.node.smoothingTimeConstant = e, this.freqBins = new Float32Array(this.node.frequencyBinCount), this.signal = new Uint8Array(t), this.peak = 0, this.rms = 0
		}

		function S() {
			this.obj = null, this.loadUid = 0, this.speeds = [], this.lastX = 0, this.lastY = 0, this.moveAngle = 0
		}

		function T(t, e) {
			this.src = t, this.myapi = V, this.is_music = e, this.added_end_listener = !1;
			var i = this;
			this.outNode = null, this.mediaSourceNode = null, this.panWhenReady = [], this.seekWhenReady = 0, this.pauseWhenReady = !1, this.supportWebAudioAPI = !1, this.failedToLoad = !1, this.wasEverReady = !1, V === z && e && (this.myapi = W, this.outNode = n()), this.bufferObject = null, this.audioData = null;
			var r;
			switch (this.myapi) {
				case W:
					this.bufferObject = new Audio, this.bufferObject.crossOrigin = "anonymous", this.bufferObject.addEventListener("canplaythrough", function() {
						i.wasEverReady = !0
					}), V === z && X.createMediaElementSource && !/wiiu/i.test(navigator.userAgent) && (this.supportWebAudioAPI = !0, this.bufferObject.addEventListener("canplay", function() {
						i.mediaSourceNode || (i.mediaSourceNode = X.createMediaElementSource(i.bufferObject), i.mediaSourceNode.connect(i.outNode))
					})), this.bufferObject.autoplay = !1, this.bufferObject.preload = "auto", this.bufferObject.src = t;
					break;
				case z:
					r = new XMLHttpRequest, r.open("GET", t, !0), r.responseType = "arraybuffer", r.onload = function() {
						i.audioData = r.response, i.decodeAudioBuffer()
					}, r.onerror = function() {
						i.failedToLoad = !0
					}, r.send();
					break;
				case G:
					this.bufferObject = !0;
					break;
				case U:
					this.bufferObject = !0
			}
		}

		function C(t, e) {
			var i = this;
			this.tag = e, this.fresh = !0, this.stopped = !0, this.src = t.src, this.buffer = t, this.myapi = V, this.is_music = t.is_music, this.playbackRate = 1, this.hasPlaybackEnded = !0, this.resume_me = !1, this.is_paused = !1, this.resume_position = 0, this.looping = !1, this.is_muted = !1, this.is_silent = !1, this.volume = 1, this.onended_handler = function() {
				i.is_paused || i.resume_me || this === i.active_buffer && (i.hasPlaybackEnded = !0, i.stopped = !0, j = i.tag, B.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, F))
			}, this.active_buffer = null, this.isTimescaled = 1 === K && !this.is_music || 2 === K, this.mutevol = 1, this.startTime = this.isTimescaled ? B.kahanTime.sum : B.wallTime.sum, this.gainNode = null, this.pannerNode = null, this.pannerEnabled = !1, this.objectTracker = null, this.panX = 0, this.panY = 0, this.panAngle = 0, this.panConeInner = 0, this.panConeOuter = 0, this.panConeOuterGain = 0, this.instanceObject = null;
			var r = !1;
			switch (this.myapi !== z || this.buffer.myapi !== W || this.buffer.supportWebAudioAPI || (this.myapi = W), this.myapi) {
				case W:
					this.is_music ? (this.instanceObject = t.bufferObject, r = !t.added_end_listener, t.added_end_listener = !0) : (this.instanceObject = new Audio, this.instanceObject.crossOrigin = "anonymous", this.instanceObject.autoplay = !1, this.instanceObject.src = t.bufferObject.src, r = !0), r && this.instanceObject.addEventListener("ended", function() {
						j = i.tag, i.stopped = !0, B.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, F)
					});
					break;
				case z:
					this.gainNode = n(), this.gainNode.connect(s(e)), this.buffer.myapi === z ? t.bufferObject && (this.instanceObject = X.createBufferSource(), this.instanceObject.buffer = t.bufferObject, this.instanceObject.connect(this.gainNode)) : (this.instanceObject = this.buffer.bufferObject, this.buffer.outNode.connect(this.gainNode), this.buffer.added_end_listener || (this.buffer.added_end_listener = !0, this.buffer.bufferObject.addEventListener("ended", function() {
						j = i.tag, i.stopped = !0, B.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, F)
					})));
					break;
				case G:
					this.instanceObject = new window.Media(D + this.src, null, null, function(t) {
						t === window.Media.MEDIA_STOPPED && (i.hasPlaybackEnded = !0, i.stopped = !0, j = i.tag, B.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, F))
					});
					break;
				case U:
					this.instanceObject = !0
			}
		}

		function k(t, e) {
			var i = t.isPlaying() ? 1 : 0,
				r = e.isPlaying() ? 1 : 0;
			return i === r ? 0 : r > i ? 1 : -1
		}

		function O(t, e) {
			if (cr.clearArray(ye), !t.length) return !Y || Y.hasEnded() ? void 0 : (cr.clearArray(ye), void(ye[0] = Y));
			var i, r, s;
			for (i = 0, r = H.length; r > i; i++) s = H[i], cr.equals_nocase(t, s.tag) && ye.push(s);
			e && ye.sort(k)
		}

		function A(t) {
			var e, i, r, s, n = X.destination;
			if (le.hasOwnProperty(t) && (r = le[t], r.length))
				for (n = r[0].getInputNode(), e = 0, i = r.length; i > e; e++) s = r[e], s.connectTo(e + 1 === i ? X.destination : r[e + 1].getInputNode());
			for (O(t), e = 0, i = ye.length; i > e; e++) ye[e].reconnect(n);
			ae && oe === t && (ae.disconnect(), ae.connect(n))
		}

		function E(t, e) {
			le.hasOwnProperty(t) ? le[t].push(e) : le[t] = [e], A(t)
		}

		function I() {}

		function P() {}

		function L() {}

		function R(t, e) {
			var i = null;
			return le.hasOwnProperty(t) && (i = le[t]), i && e >= 0 && e < i.length && i[e].freqBins ? i[e] : null
		}
		var M = cr.plugins_.Audio.prototype;
		M.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var N = M.Type.prototype;
		N.onCreate = function() {};
		var B = null,
			F = null,
			j = "",
			D = "",
			W = 0,
			z = 1,
			G = 2,
			U = 3,
			V = W,
			X = null,
			q = [],
			H = [],
			Y = null,
			J = !1,
			K = 0,
			Q = !1,
			Z = 1,
			$ = 0,
			te = 0,
			ee = 1,
			ie = 1,
			re = 10,
			se = 1e4,
			ne = 1,
			ae = null,
			oe = "",
			he = !1,
			ce = [],
			le = {},
			ue = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"];
		u.prototype.connectTo = function(t) {
			this.wetNode.disconnect(), this.wetNode.connect(t), this.dryNode.disconnect(), this.dryNode.connect(t)
		}, u.prototype.remove = function() {
			this.inputNode.disconnect(), this.filterNode.disconnect(), this.wetNode.disconnect(), this.dryNode.disconnect()
		}, u.prototype.getInputNode = function() {
			return this.inputNode
		}, u.prototype.setParam = function(t, e, i, r) {
			switch (t) {
				case 0:
					e /= 100, 0 > e && (e = 0), e > 1 && (e = 1), this.params[5] = e, l(this.wetNode.gain, e, i, r), l(this.dryNode.gain, 1 - e, i, r);
					break;
				case 1:
					this.params[1] = e, l(this.filterNode.frequency, e, i, r);
					break;
				case 2:
					this.params[2] = e, l(this.filterNode.detune, e, i, r);
					break;
				case 3:
					this.params[3] = e, l(this.filterNode.Q, e, i, r);
					break;
				case 4:
					this.params[4] = e, l(this.filterNode.gain, e, i, r)
			}
		}, p.prototype.connectTo = function(t) {
			this.wetNode.disconnect(), this.wetNode.connect(t), this.dryNode.disconnect(), this.dryNode.connect(t)
		}, p.prototype.remove = function() {
			this.inputNode.disconnect(), this.mainNode.disconnect(), this.delayNode.disconnect(), this.delayGainNode.disconnect(), this.wetNode.disconnect(), this.dryNode.disconnect()
		}, p.prototype.getInputNode = function() {
			return this.inputNode
		}, p.prototype.setParam = function(e, i, r, s) {
			switch (e) {
				case 0:
					i /= 100, 0 > i && (i = 0), i > 1 && (i = 1), this.params[2] = i, l(this.wetNode.gain, i, r, s), l(this.dryNode.gain, 1 - i, r, s);
					break;
				case 4:
					this.params[1] = t(i), l(this.delayGainNode.gain, t(i), r, s);
					break;
				case 5:
					this.params[0] = i, l(this.delayNode.delayTime, i, r, s)
			}
		}, d.prototype.connectTo = function(t) {
			this.wetNode.disconnect(), this.wetNode.connect(t), this.dryNode.disconnect(), this.dryNode.connect(t)
		}, d.prototype.remove = function() {
			this.inputNode.disconnect(), this.convolveNode.disconnect(), this.wetNode.disconnect(), this.dryNode.disconnect()
		}, d.prototype.getInputNode = function() {
			return this.inputNode
		}, d.prototype.setParam = function(t, e, i, r) {
			switch (t) {
				case 0:
					e /= 100, 0 > e && (e = 0), e > 1 && (e = 1), this.params[1] = e, l(this.wetNode.gain, e, i, r), l(this.dryNode.gain, 1 - e, i, r)
			}
		}, f.prototype.connectTo = function(t) {
			this.dryNode.disconnect(), this.dryNode.connect(t), this.wetNode.disconnect(), this.wetNode.connect(t)
		}, f.prototype.remove = function() {
			this.inputNode.disconnect(), this.delayNode.disconnect(), this.oscNode.disconnect(), this.oscGainNode.disconnect(), this.dryNode.disconnect(), this.wetNode.disconnect(), this.feedbackNode.disconnect()
		}, f.prototype.getInputNode = function() {
			return this.inputNode
		}, f.prototype.setParam = function(t, e, i, r) {
			switch (t) {
				case 0:
					e /= 100, 0 > e && (e = 0), e > 1 && (e = 1), this.params[4] = e, l(this.wetNode.gain, e / 2, i, r), l(this.dryNode.gain, 1 - e / 2, i, r);
					break;
				case 6:
					this.params[1] = e / 1e3, l(this.oscGainNode.gain, e / 1e3, i, r);
					break;
				case 7:
					this.params[2] = e, l(this.oscNode.frequency, e, i, r);
					break;
				case 8:
					this.params[3] = e / 100, l(this.feedbackNode.gain, e / 100, i, r)
			}
		}, g.prototype.connectTo = function(t) {
			this.dryNode.disconnect(), this.dryNode.connect(t), this.wetNode.disconnect(), this.wetNode.connect(t)
		}, g.prototype.remove = function() {
			this.inputNode.disconnect(), this.filterNode.disconnect(), this.oscNode.disconnect(), this.oscGainNode.disconnect(), this.dryNode.disconnect(), this.wetNode.disconnect()
		}, g.prototype.getInputNode = function() {
			return this.inputNode
		}, g.prototype.setParam = function(t, e, i, r) {
			switch (t) {
				case 0:
					e /= 100, 0 > e && (e = 0), e > 1 && (e = 1), this.params[5] = e, l(this.wetNode.gain, e / 2, i, r), l(this.dryNode.gain, 1 - e / 2, i, r);
					break;
				case 1:
					this.params[0] = e, l(this.filterNode.frequency, e, i, r);
					break;
				case 2:
					this.params[1] = e, l(this.filterNode.detune, e, i, r);
					break;
				case 3:
					this.params[2] = e, l(this.filterNode.Q, e, i, r);
					break;
				case 6:
					this.params[3] = e, l(this.oscGainNode.gain, e, i, r);
					break;
				case 7:
					this.params[4] = e, l(this.oscNode.frequency, e, i, r)
			}
		}, m.prototype.connectTo = function(t) {
			this.node.disconnect(), this.node.connect(t)
		}, m.prototype.remove = function() {
			this.node.disconnect()
		}, m.prototype.getInputNode = function() {
			return this.node
		}, m.prototype.setParam = function(e, i, r, s) {
			switch (e) {
				case 4:
					this.params[0] = t(i), l(this.node.gain, t(i), r, s)
			}
		}, y.prototype.connectTo = function(t) {
			this.node.disconnect(), this.node.connect(t)
		}, y.prototype.remove = function() {
			this.oscNode.disconnect(), this.oscGainNode.disconnect(), this.node.disconnect()
		}, y.prototype.getInputNode = function() {
			return this.node
		}, y.prototype.setParam = function(t, e, i, r) {
			switch (t) {
				case 0:
					e /= 100, 0 > e && (e = 0), e > 1 && (e = 1), this.params[1] = e, l(this.node.gain.value, 1 - e / 2, i, r), l(this.oscGainNode.gain.value, e / 2, i, r);
					break;
				case 7:
					this.params[0] = e, l(this.oscNode.frequency, e, i, r)
			}
		}, _.prototype.connectTo = function(t) {
			this.wetNode.disconnect(), this.wetNode.connect(t), this.dryNode.disconnect(), this.dryNode.connect(t)
		}, _.prototype.remove = function() {
			this.oscNode.disconnect(), this.ringNode.disconnect(), this.inputNode.disconnect(), this.wetNode.disconnect(), this.dryNode.disconnect()
		}, _.prototype.getInputNode = function() {
			return this.inputNode
		}, _.prototype.setParam = function(t, e, i, r) {
			switch (t) {
				case 0:
					e /= 100, 0 > e && (e = 0), e > 1 && (e = 1), this.params[1] = e, l(this.wetNode.gain, e, i, r), l(this.dryNode.gain, 1 - e, i, r);
					break;
				case 7:
					this.params[0] = e, l(this.oscNode.frequency, e, i, r)
			}
		}, v.prototype.setDrive = function(t, e) {.01 > t && (t = .01), this.preGain.gain.value = t, this.postGain.gain.value = Math.pow(1 / t, .6) * e
		}, v.prototype.shape = function(t, e, i) {
			var r = 1.05 * i * e,
				s = r - e,
				n = 0 > t ? -1 : 1,
				a = 0 > t ? -t : t,
				o = e > a ? a : e + s * b(a - e, 1 / s);
			return o *= n
		}, v.prototype.generateColortouchCurve = function(t, e) {
			for (var r = i(t), s = i(e), n = 65536, a = n / 2, o = 0, h = 0; a > h; ++h) o = h / a, o = this.shape(o, r, s), this.curve[a + h] = o, this.curve[a - h - 1] = -o
		}, v.prototype.connectTo = function(t) {
			this.wetNode.disconnect(), this.wetNode.connect(t), this.dryNode.disconnect(), this.dryNode.connect(t)
		}, v.prototype.remove = function() {
			this.inputNode.disconnect(), this.preGain.disconnect(), this.waveShaper.disconnect(), this.postGain.disconnect(), this.wetNode.disconnect(), this.dryNode.disconnect()
		}, v.prototype.getInputNode = function() {
			return this.inputNode
		}, v.prototype.setParam = function(t, e, i, r) {
			switch (t) {
				case 0:
					e /= 100, 0 > e && (e = 0), e > 1 && (e = 1), this.params[4] = e, l(this.wetNode.gain, e, i, r), l(this.dryNode.gain, 1 - e, i, r)
			}
		}, w.prototype.connectTo = function(t) {
			this.node.disconnect(), this.node.connect(t)
		}, w.prototype.remove = function() {
			this.node.disconnect()
		}, w.prototype.getInputNode = function() {
			return this.node
		}, w.prototype.setParam = function() {}, x.prototype.tick = function() {
			this.node.getFloatFrequencyData(this.freqBins), this.node.getByteTimeDomainData(this.signal);
			var t = this.node.fftSize,
				i = 0;
			this.peak = 0;
			for (var r = 0, s = 0; t > i; i++) s = (this.signal[i] - 128) / 128, 0 > s && (s = -s), this.peak < s && (this.peak = s), r += s * s;
			this.peak = e(this.peak), this.rms = e(Math.sqrt(r / t))
		}, x.prototype.connectTo = function(t) {
			this.node.disconnect(), this.node.connect(t)
		}, x.prototype.remove = function() {
			this.node.disconnect()
		}, x.prototype.getInputNode = function() {
			return this.node
		}, x.prototype.setParam = function() {};
		var pe = 4;
		S.prototype.setObject = function(t) {
			this.obj = t, this.obj && (this.lastX = this.obj.x, this.lastY = this.obj.y), cr.clearArray(this.speeds)
		}, S.prototype.hasObject = function() {
			return !!this.obj
		}, S.prototype.tick = function(t) {
			if (this.obj && 0 !== t) {
				this.moveAngle = cr.angleTo(this.lastX, this.lastY, this.obj.x, this.obj.y);
				var e = cr.distanceTo(this.lastX, this.lastY, this.obj.x, this.obj.y) / t;
				this.speeds.length < pe ? this.speeds.push(e) : (this.speeds.shift(), this.speeds.push(e)), this.lastX = this.obj.x, this.lastY = this.obj.y
			}
		}, S.prototype.getSpeed = function() {
			if (!this.speeds.length) return 0;
			var t, e, i = 0;
			for (t = 0, e = this.speeds.length; e > t; t++) i += this.speeds[t];
			return i / this.speeds.length
		}, S.prototype.getVelocityX = function() {
			return Math.cos(this.moveAngle) * this.getSpeed()
		}, S.prototype.getVelocityY = function() {
			return Math.sin(this.moveAngle) * this.getSpeed()
		};
		var de = !1;
		T.prototype.decodeAudioBuffer = function() {
			if (!this.bufferObject && this.audioData) {
				var t = this;
				if (X.decodeAudioData) X.decodeAudioData(this.audioData, function(e) {
					t.bufferObject = e, t.audioData = null;
					var i, r, s, n;
					if (cr.is_undefined(t.playTagWhenReady) || Q) {
						if (!cr.is_undefined(t.convolveWhenReady)) {
							var a = t.convolveWhenReady.convolveNode;
							a.normalize = t.normalizeWhenReady, a.buffer = e
						}
					} else if (t.panWhenReady.length) {
						for (r = 0, s = t.panWhenReady.length; s > r; r++)
							if (i = t.panWhenReady[r], n = new C(t, i.thistag), n.setPannerEnabled(!0), "undefined" == typeof i.objUid || (i.obj = B.getObjectByUID(i.objUid), i.obj)) {
								if (i.obj) {
									var o = cr.rotatePtAround(i.obj.x, i.obj.y, -i.obj.layer.getAngle(), $, te, !0),
										h = cr.rotatePtAround(i.obj.x, i.obj.y, -i.obj.layer.getAngle(), $, te, !1);
									n.setPan(o, h, cr.to_degrees(i.obj.angle - i.obj.layer.getAngle()), i.ia, i.oa, i.og), n.setObject(i.obj)
								} else n.setPan(i.x, i.y, i.a, i.ia, i.oa, i.og);
								n.play(t.loopWhenReady, t.volumeWhenReady, t.seekWhenReady), t.pauseWhenReady && n.pause(), H.push(n)
							}
						cr.clearArray(t.panWhenReady)
					} else n = new C(t, t.playTagWhenReady || ""), n.play(t.loopWhenReady, t.volumeWhenReady, t.seekWhenReady), t.pauseWhenReady && n.pause(), H.push(n)
				}, function() {
					t.failedToLoad = !0
				});
				else if (this.bufferObject = X.createBuffer(this.audioData, !1), this.audioData = null, cr.is_undefined(this.playTagWhenReady) || Q) {
					if (!cr.is_undefined(this.convolveWhenReady)) {
						var e = this.convolveWhenReady.convolveNode;
						e.normalize = this.normalizeWhenReady, e.buffer = this.bufferObject
					}
				} else {
					var i = new C(this, this.playTagWhenReady);
					i.play(this.loopWhenReady, this.volumeWhenReady, this.seekWhenReady), this.pauseWhenReady && i.pause(), H.push(i)
				}
			}
		}, T.prototype.isLoaded = function() {
			switch (this.myapi) {
				case W:
					var t = this.bufferObject.readyState >= 4;
					return t && (this.wasEverReady = !0), t || this.wasEverReady;
				case z:
					return !!this.audioData || !!this.bufferObject;
				case G:
					return !0;
				case U:
					return !0
			}
			return !1
		}, T.prototype.isLoadedAndDecoded = function() {
			switch (this.myapi) {
				case W:
					return this.isLoaded();
				case z:
					return !!this.bufferObject;
				case G:
					return !0;
				case U:
					return !0
			}
			return !1
		}, T.prototype.hasFailedToLoad = function() {
			switch (this.myapi) {
				case W:
					return !!this.bufferObject.error;
				case z:
					return this.failedToLoad
			}
			return !1
		}, C.prototype.hasEnded = function() {
			switch (this.myapi) {
				case W:
					return this.instanceObject.ended;
				case z:
					return this.buffer.myapi === z ? this.fresh || this.stopped || !this.instanceObject.loop ? this.is_paused ? !1 : this.hasPlaybackEnded : !1 : this.instanceObject.ended;
				case G:
					return this.hasPlaybackEnded;
				case U:
			}
			return !0
		}, C.prototype.canBeRecycled = function() {
			return this.fresh || this.stopped ? !0 : this.hasEnded()
		}, C.prototype.setPannerEnabled = function(t) {
			if (V === z)
				if (!this.pannerEnabled && t) {
					if (!this.gainNode) return;
					this.pannerNode || (this.pannerNode = X.createPanner(), this.pannerNode.panningModel = "number" == typeof this.pannerNode.panningModel ? ee : ["equalpower", "HRTF", "soundfield"][ee], this.pannerNode.distanceModel = "number" == typeof this.pannerNode.distanceModel ? ie : ["linear", "inverse", "exponential"][ie], this.pannerNode.refDistance = re, this.pannerNode.maxDistance = se, this.pannerNode.rolloffFactor = ne), this.gainNode.disconnect(), this.gainNode.connect(this.pannerNode), this.pannerNode.connect(s(this.tag)), this.pannerEnabled = !0
				} else if (this.pannerEnabled && !t) {
				if (!this.gainNode) return;
				this.pannerNode.disconnect(), this.gainNode.disconnect(), this.gainNode.connect(s(this.tag)), this.pannerEnabled = !1
			}
		}, C.prototype.setPan = function(t, e, i, r, s, n) {
			this.pannerEnabled && V === z && (this.pannerNode.setPosition(t, e, 0), this.pannerNode.setOrientation(Math.cos(cr.to_radians(i)), Math.sin(cr.to_radians(i)), 0), this.pannerNode.coneInnerAngle = r, this.pannerNode.coneOuterAngle = s, this.pannerNode.coneOuterGain = n, this.panX = t, this.panY = e, this.panAngle = i, this.panConeInner = r, this.panConeOuter = s, this.panConeOuterGain = n)
		}, C.prototype.setObject = function(t) {
			this.pannerEnabled && V === z && (this.objectTracker || (this.objectTracker = new S), this.objectTracker.setObject(t))
		}, C.prototype.tick = function(t) {
			if (this.pannerEnabled && V === z && this.objectTracker && this.objectTracker.hasObject() && this.isPlaying()) {
				this.objectTracker.tick(t);
				var e = this.objectTracker.obj,
					i = cr.rotatePtAround(e.x, e.y, -e.layer.getAngle(), $, te, !0),
					r = cr.rotatePtAround(e.x, e.y, -e.layer.getAngle(), $, te, !1);
				this.pannerNode.setPosition(i, r, 0);
				var s = 0;
				"undefined" != typeof this.objectTracker.obj.angle && (s = e.angle - e.layer.getAngle(), this.pannerNode.setOrientation(Math.cos(s), Math.sin(s), 0)), i = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -e.layer.getAngle(), 0, 0, !0), r = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -e.layer.getAngle(), 0, 0, !1), this.pannerNode.setVelocity(i, r, 0)
			}
		}, C.prototype.play = function(t, e, i) {
			var r = this.instanceObject;
			this.looping = t, this.volume = e;
			var s = i || 0;
			switch (this.myapi) {
				case W:
					if (1 !== r.playbackRate && (r.playbackRate = 1), r.volume !== e * Z && (r.volume = e * Z), r.loop !== t && (r.loop = t), r.muted && (r.muted = !1), r.currentTime !== s) try {
						r.currentTime = s
					} catch (n) {}
					if (this.is_music && he && !B.isInUserInputEvent) ce.push(this);
					else try {
						this.instanceObject.play()
					} catch (a) {
						console && console.log && console.log("[C2] WARNING: exception trying to play audio '" + this.buffer.src + "': ", a)
					}
					break;
				case z:
					if (this.muted = !1, this.mutevol = 1, this.buffer.myapi === z) this.gainNode.gain.value = e * Z, this.fresh || (this.instanceObject = X.createBufferSource(), this.instanceObject.buffer = this.buffer.bufferObject, this.instanceObject.connect(this.gainNode)), this.instanceObject.onended = this.onended_handler, this.active_buffer = this.instanceObject, this.instanceObject.loop = t, this.hasPlaybackEnded = !1, 0 === s ? o(this.instanceObject) : h(this.instanceObject, s, this.getDuration());
					else {
						if (1 !== r.playbackRate && (r.playbackRate = 1), r.loop !== t && (r.loop = t), r.volume = e * Z, r.currentTime !== s) try {
							r.currentTime = s
						} catch (n) {}
						this.is_music && he && !B.isInUserInputEvent ? ce.push(this) : r.play()
					}
					break;
				case G:
					(!this.fresh && this.stopped || 0 !== s) && r.seekTo(s), r.play(), this.hasPlaybackEnded = !1;
					break;
				case U:
					B.isDirectCanvas ? AppMobi.context.playSound(this.src, t) : AppMobi.player.playSound(this.src, t)
			}
			this.playbackRate = 1, this.startTime = (this.isTimescaled ? B.kahanTime.sum : B.wallTime.sum) - s, this.fresh = !1, this.stopped = !1, this.is_paused = !1
		}, C.prototype.stop = function() {
			switch (this.myapi) {
				case W:
					this.instanceObject.paused || this.instanceObject.pause();
					break;
				case z:
					this.buffer.myapi === z ? c(this.instanceObject) : this.instanceObject.paused || this.instanceObject.pause();
					break;
				case G:
					this.instanceObject.stop();
					break;
				case U:
					B.isDirectCanvas && AppMobi.context.stopSound(this.src)
			}
			this.stopped = !0, this.is_paused = !1
		}, C.prototype.pause = function() {
			if (!(this.fresh || this.stopped || this.hasEnded() || this.is_paused)) {
				switch (this.myapi) {
					case W:
						this.instanceObject.paused || this.instanceObject.pause();
						break;
					case z:
						this.buffer.myapi === z ? (this.resume_position = this.getPlaybackTime(), this.looping && (this.resume_position = this.resume_position % this.getDuration()), this.is_paused = !0, c(this.instanceObject)) : this.instanceObject.paused || this.instanceObject.pause();
						break;
					case G:
						this.instanceObject.pause();
						break;
					case U:
						B.isDirectCanvas && AppMobi.context.stopSound(this.src)
				}
				this.is_paused = !0
			}
		}, C.prototype.resume = function() {
			if (!(this.fresh || this.stopped || this.hasEnded()) && this.is_paused) {
				switch (this.myapi) {
					case W:
						this.instanceObject.play();
						break;
					case z:
						this.buffer.myapi === z ? (this.instanceObject = X.createBufferSource(), this.instanceObject.buffer = this.buffer.bufferObject, this.instanceObject.connect(this.gainNode), this.instanceObject.onended = this.onended_handler, this.active_buffer = this.instanceObject, this.instanceObject.loop = this.looping, this.gainNode.gain.value = Z * this.volume * this.mutevol, this.startTime = (this.isTimescaled ? B.kahanTime.sum : B.wallTime.sum) - this.resume_position, h(this.instanceObject, this.resume_position, this.getDuration())) : this.instanceObject.play();
						break;
					case G:
						this.instanceObject.play();
						break;
					case U:
						B.isDirectCanvas && AppMobi.context.resumeSound(this.src)
				}
				this.is_paused = !1
			}
		}, C.prototype.seek = function(t) {
			if (!(this.fresh || this.stopped || this.hasEnded())) switch (this.myapi) {
				case W:
					try {
						this.instanceObject.currentTime = t
					} catch (e) {}
					break;
				case z:
					if (this.buffer.myapi === z) this.is_paused ? this.resume_position = t : (this.pause(), this.resume_position = t, this.resume());
					else try {
						this.instanceObject.currentTime = t
					} catch (e) {}
					break;
				case G:
					break;
				case U:
					B.isDirectCanvas && AppMobi.context.seekSound(this.src, t)
			}
		}, C.prototype.reconnect = function(t) {
			this.myapi === z && (this.pannerEnabled ? (this.pannerNode.disconnect(), this.pannerNode.connect(t)) : (this.gainNode.disconnect(), this.gainNode.connect(t)))
		}, C.prototype.getDuration = function() {
			switch (this.myapi) {
				case W:
					return "undefined" != typeof this.instanceObject.duration ? this.instanceObject.duration : 0;
				case z:
					return this.buffer.bufferObject.duration;
				case G:
					return this.instanceObject.getDuration();
				case U:
					return B.isDirectCanvas ? AppMobi.context.getDurationSound(this.src) : 0
			}
			return 0
		}, C.prototype.getPlaybackTime = function() {
			var t = this.getDuration(),
				e = 0;
			switch (this.myapi) {
				case W:
					"undefined" != typeof this.instanceObject.currentTime && (e = this.instanceObject.currentTime);
					break;
				case z:
					if (this.buffer.myapi === z) {
						if (this.is_paused) return this.resume_position;
						e = (this.isTimescaled ? B.kahanTime.sum : B.wallTime.sum) - this.startTime
					} else "undefined" != typeof this.instanceObject.currentTime && (e = this.instanceObject.currentTime);
					break;
				case G:
					break;
				case U:
					B.isDirectCanvas && (e = AppMobi.context.getPlaybackTimeSound(this.src))
			}
			return !this.looping && e > t && (e = t), e
		}, C.prototype.isPlaying = function() {
			return !(this.is_paused || this.fresh || this.stopped || this.hasEnded())
		}, C.prototype.setVolume = function(t) {
			this.volume = t, this.updateVolume()
		}, C.prototype.updateVolume = function() {
			var t = this.volume * Z;
			switch (isFinite(t) || (t = 0), this.myapi) {
				case W:
					"undefined" != typeof this.instanceObject.volume && this.instanceObject.volume !== t && (this.instanceObject.volume = t);
					break;
				case z:
					this.buffer.myapi === z ? this.gainNode.gain.value = t * this.mutevol : "undefined" != typeof this.instanceObject.volume && this.instanceObject.volume !== t && (this.instanceObject.volume = t);
					break;
				case G:
					break;
				case U:
			}
		}, C.prototype.getVolume = function() {
			return this.volume
		}, C.prototype.doSetMuted = function(t) {
			switch (this.myapi) {
				case W:
					this.instanceObject.muted !== !!t && (this.instanceObject.muted = !!t);
					break;
				case z:
					this.buffer.myapi === z ? (this.mutevol = t ? 0 : 1, this.gainNode.gain.value = Z * this.volume * this.mutevol) : this.instanceObject.muted !== !!t && (this.instanceObject.muted = !!t);
					break;
				case G:
					break;
				case U:
			}
		}, C.prototype.setMuted = function(t) {
			this.is_muted = !!t, this.doSetMuted(this.is_muted || this.is_silent)
		}, C.prototype.setSilent = function(t) {
			this.is_silent = !!t, this.doSetMuted(this.is_muted || this.is_silent)
		}, C.prototype.setLooping = function(t) {
			switch (this.looping = t, this.myapi) {
				case W:
					this.instanceObject.loop !== !!t && (this.instanceObject.loop = !!t);
					break;
				case z:
					this.instanceObject.loop !== !!t && (this.instanceObject.loop = !!t);
					break;
				case G:
					break;
				case U:
					B.isDirectCanvas && AppMobi.context.setLoopingSound(this.src, t)
			}
		}, C.prototype.setPlaybackRate = function(t) {
			this.playbackRate = t, this.updatePlaybackRate()
		}, C.prototype.updatePlaybackRate = function() {
			var t = this.playbackRate;
			switch (this.isTimescaled && (t *= B.timescale), this.myapi) {
				case W:
					this.instanceObject.playbackRate !== t && (this.instanceObject.playbackRate = t);
					break;
				case z:
					this.buffer.myapi === z ? this.instanceObject.playbackRate.value !== t && (this.instanceObject.playbackRate.value = t) : this.instanceObject.playbackRate !== t && (this.instanceObject.playbackRate = t);
					break;
				case G:
					break;
				case U:
			}
		}, C.prototype.setSuspended = function(t) {
			switch (this.myapi) {
				case W:
					t ? this.isPlaying() ? (this.resume_me = !0, this.instanceObject.pause()) : this.resume_me = !1 : this.resume_me && (this.instanceObject.play(), this.resume_me = !1);
					break;
				case z:
					t ? this.isPlaying() ? (this.resume_me = !0, this.buffer.myapi === z ? (this.resume_position = this.getPlaybackTime(), this.looping && (this.resume_position = this.resume_position % this.getDuration()), c(this.instanceObject)) : this.instanceObject.pause()) : this.resume_me = !1 : this.resume_me && (this.buffer.myapi === z ? (this.instanceObject = X.createBufferSource(), this.instanceObject.buffer = this.buffer.bufferObject, this.instanceObject.connect(this.gainNode), this.instanceObject.onended = this.onended_handler, this.active_buffer = this.instanceObject, this.instanceObject.loop = this.looping, this.gainNode.gain.value = Z * this.volume * this.mutevol, this.startTime = (this.isTimescaled ? B.kahanTime.sum : B.wallTime.sum) - this.resume_position, h(this.instanceObject, this.resume_position, this.getDuration())) : this.instanceObject.play(), this.resume_me = !1);
					break;
				case G:
					t ? this.isPlaying() ? (this.instanceObject.pause(), this.resume_me = !0) : this.resume_me = !1 : this.resume_me && (this.resume_me = !1, this.instanceObject.play());
					break;
				case U:
			}
		}, M.Instance = function(t) {
			if (this.type = t, this.runtime = t.runtime, B = this.runtime, F = this, this.listenerTracker = null, this.listenerZ = -600, !(this.runtime.isiOS || this.runtime.isAndroid && (this.runtime.isChrome || this.runtime.isAndroidStockBrowser)) || this.runtime.isCrosswalk || this.runtime.isDomFree || this.runtime.isAmazonWebApp || (he = !0), X = null, "undefined" != typeof AudioContext ? (V = z, X = new AudioContext) : "undefined" != typeof webkitAudioContext && (V = z, X = new webkitAudioContext), (this.runtime.isiOS && V === z || he) && document.addEventListener("touchstart", function() {
					var t, e, i;
					if (!de && X) {
						var r = X.createBuffer(1, 1, 22050),
							s = X.createBufferSource();
						s.buffer = r, s.connect(X.destination), o(s), de = !0
					}
					if (he) {
						if (!Q)
							for (t = 0, e = ce.length; e > t; ++t) i = ce[t], i.stopped || i.is_paused || i.instanceObject.play();
						cr.clearArray(ce)
					}
				}, !0), V !== z && (this.runtime.isCordova && "undefined" != typeof window.Media ? V = G : this.runtime.isAppMobi && (V = U)), V === G) {
				D = location.href;
				var e = D.lastIndexOf("/");
				e > -1 && (D = D.substr(0, e + 1)), D = D.replace("file://", "")
			}
			if (this.runtime.isSafari && this.runtime.isWindows && "undefined" == typeof Audio) alert("It looks like you're using Safari for Windows without Quicktime.  Audio cannot be played until Quicktime is installed."), this.runtime.DestroyInstance(this);
			else {
				if (this.runtime.isDirectCanvas) J = this.runtime.isAndroid;
				else try {
					J = !!(new Audio).canPlayType('audio/ogg; codecs="vorbis"')
				} catch (i) {
					J = !1
				}
				switch (V) {
					case W:
						break;
					case z:
						break;
					case G:
						break;
					case U:
				}
				this.runtime.tickMe(this)
			}
		};
		var fe = M.Instance.prototype;
		fe.onCreate = function() {
			this.runtime.audioInstance = this, K = this.properties[0], this.saveload = this.properties[1], this.playinbackground = 0 !== this.properties[2], ee = this.properties[3], ie = this.properties[4], this.listenerZ = -this.properties[5], re = this.properties[6], se = this.properties[7], ne = this.properties[8], this.listenerTracker = new S;
			var t = this.runtime.draw_width || this.runtime.width,
				e = this.runtime.draw_height || this.runtime.height;
			V === z && ("undefined" != typeof X.listener.dopplerFactor && (X.listener.dopplerFactor = 0), X.listener.setPosition(t / 2, e / 2, this.listenerZ), X.listener.setOrientation(0, 0, 1, 0, -1, 0), window.c2OnAudioMicStream = function(t, e) {
				ae && ae.disconnect(), oe = e.toLowerCase(), ae = X.createMediaStreamSource(t), ae.connect(s(oe))
			}), this.runtime.addSuspendCallback(function(t) {
				F.onSuspend(t)
			});
			var i = this;
			this.runtime.addDestroyCallback(function(t) {
				i.onInstanceDestroyed(t)
			})
		}, fe.onInstanceDestroyed = function(t) {
			var e, i, r;
			for (e = 0, i = H.length; i > e; e++) r = H[e], r.objectTracker && r.objectTracker.obj === t && (r.objectTracker.obj = null, r.pannerEnabled && r.isPlaying() && r.looping && r.stop());
			this.listenerTracker.obj === t && (this.listenerTracker.obj = null)
		}, fe.saveToJSON = function() {
			var t, e, i, r, s, n, a, o = {
					silent: Q,
					masterVolume: Z,
					listenerZ: this.listenerZ,
					listenerUid: this.listenerTracker.hasObject() ? this.listenerTracker.obj.uid : -1,
					playing: [],
					effects: {}
				},
				h = o.playing;
			for (t = 0, e = H.length; e > t; t++) i = H[t], i.isPlaying() && 3 !== this.saveload && (i.is_music && 1 === this.saveload || (i.is_music || 2 !== this.saveload) && (a = i.getPlaybackTime(), i.looping && (a %= i.getDuration()), r = {
				tag: i.tag,
				buffersrc: i.buffer.src,
				is_music: i.is_music,
				playbackTime: a,
				volume: i.volume,
				looping: i.looping,
				muted: i.is_muted,
				playbackRate: i.playbackRate,
				paused: i.is_paused,
				resume_position: i.resume_position
			}, i.pannerEnabled && (r.pan = {}, n = r.pan, i.objectTracker && i.objectTracker.hasObject() ? n.objUid = i.objectTracker.obj.uid : (n.x = i.panX, n.y = i.panY, n.a = i.panAngle), n.ia = i.panConeInner, n.oa = i.panConeOuter, n.og = i.panConeOuterGain), h.push(r)));
			var c, l = o.effects;
			for (s in le)
				if (le.hasOwnProperty(s)) {
					for (c = [], t = 0, e = le[s].length; e > t; t++) c.push({
						type: le[s][t].type,
						params: le[s][t].params
					});
					l[s] = c
				}
			return o
		};
		var ge = [];
		fe.loadFromJSON = function(t) {
			var e = t.silent;
			Z = t.masterVolume, this.listenerZ = t.listenerZ, this.listenerTracker.setObject(null);
			var i = t.listenerUid; - 1 !== i && (this.listenerTracker.loadUid = i, ge.push(this.listenerTracker));
			var r, s, n, a, o, h, c, l, b, T, C, k, O, A, I = t.playing;
			if (3 !== this.saveload)
				for (r = 0, s = H.length; s > r; r++) C = H[r], C.is_music && 1 === this.saveload || (C.is_music || 2 !== this.saveload) && C.stop();
			var P, L, R, M;
			for (k in le)
				if (le.hasOwnProperty(k))
					for (r = 0, s = le[k].length; s > r; r++) le[k][r].remove();
			cr.wipe(le);
			for (k in t.effects)
				if (t.effects.hasOwnProperty(k))
					for (P = t.effects[k], r = 0, s = P.length; s > r; r++) switch (L = P[r].type, R = P[r].params, L) {
						case "filter":
							E(k, new u(R[0], R[1], R[2], R[3], R[4], R[5]));
							break;
						case "delay":
							E(k, new p(R[0], R[1], R[2]));
							break;
						case "convolve":
							a = R[2], T = this.getAudioBuffer(a, !1), T.bufferObject ? M = new d(T.bufferObject, R[0], R[1], a) : (M = new d(null, R[0], R[1], a), T.normalizeWhenReady = R[0], T.convolveWhenReady = M), E(k, M);
							break;
						case "flanger":
							E(k, new f(R[0], R[1], R[2], R[3], R[4]));
							break;
						case "phaser":
							E(k, new g(R[0], R[1], R[2], R[3], R[4], R[5]));
							break;
						case "gain":
							E(k, new m(R[0]));
							break;
						case "tremolo":
							E(k, new y(R[0], R[1]));
							break;
						case "ringmod":
							E(k, new _(R[0], R[1]));
							break;
						case "distortion":
							E(k, new v(R[0], R[1], R[2], R[3], R[4]));
							break;
						case "compressor":
							E(k, new w(R[0], R[1], R[2], R[3], R[4]));
							break;
						case "analyser":
							E(k, new x(R[0], R[1]))
					}
				for (r = 0, s = I.length; s > r; r++) 3 !== this.saveload && (n = I[r], a = n.buffersrc, o = n.is_music, h = n.tag, c = n.playbackTime, l = n.looping, b = n.volume, O = n.pan, A = O && O.hasOwnProperty("objUid") ? O.objUid : -1, o && 1 === this.saveload || (o || 2 !== this.saveload) && (C = this.getAudioInstance(a, h, o, l, b), C ? (C.resume_position = n.resume_position, C.setPannerEnabled(!!O), C.play(l, b, c), C.updatePlaybackRate(), C.updateVolume(), C.doSetMuted(C.is_muted || C.is_silent), n.paused && C.pause(), n.muted && C.setMuted(!0), C.doSetMuted(C.is_muted || C.is_silent), O && (-1 !== A ? (C.objectTracker = C.objectTracker || new S, C.objectTracker.loadUid = A, ge.push(C.objectTracker)) : C.setPan(O.x, O.y, O.a, O.ia, O.oa, O.og))) : (T = this.getAudioBuffer(a, o), T.seekWhenReady = c, T.pauseWhenReady = n.paused, O && T.panWhenReady.push(-1 !== A ? {
					objUid: A,
					ia: O.ia,
					oa: O.oa,
					og: O.og,
					thistag: h
				} : {
					x: O.x,
					y: O.y,
					a: O.a,
					ia: O.ia,
					oa: O.oa,
					og: O.og,
					thistag: h
				}))));
			if (e && !Q) {
				for (r = 0, s = H.length; s > r; r++) H[r].setSilent(!0);
				Q = !0
			} else if (!e && Q) {
				for (r = 0, s = H.length; s > r; r++) H[r].setSilent(!1);
				Q = !1
			}
		}, fe.afterLoad = function() {
			var t, e, i, r;
			for (t = 0, e = ge.length; e > t; t++) i = ge[t], r = this.runtime.getObjectByUID(i.loadUid), i.setObject(r), i.loadUid = -1, r && ($ = r.x, te = r.y);
			cr.clearArray(ge)
		}, fe.onSuspend = function(t) {
			if (!this.playinbackground) {
				!t && X && X.resume && X.resume();
				var e, i;
				for (e = 0, i = H.length; i > e; e++) H[e].setSuspended(t);
				t && X && X.suspend && X.suspend()
			}
		}, fe.tick = function() {
			var t, e, i, r = this.runtime.dt;
			for (t = 0, e = H.length; e > t; t++) i = H[t], i.tick(r), 0 !== K && i.updatePlaybackRate();
			var s, n, a;
			for (s in le)
				if (le.hasOwnProperty(s))
					for (n = le[s], t = 0, e = n.length; e > t; t++) a = n[t], a.tick && a.tick();
			V === z && this.listenerTracker.hasObject() && (this.listenerTracker.tick(r), $ = this.listenerTracker.obj.x, te = this.listenerTracker.obj.y, X.listener.setPosition(this.listenerTracker.obj.x, this.listenerTracker.obj.y, this.listenerZ), X.listener.setVelocity(this.listenerTracker.getVelocityX(), this.listenerTracker.getVelocityY(), 0))
		};
		var me = [];
		fe.setPreloadList = function(t) {
			var e, i, r, s, n, a, o = 0;
			for (e = 0, i = t.length; i > e; ++e) r = t[e], s = r[0], n = 2 * r[1], a = s.length > 4 && ".ogg" === s.substr(s.length - 4), (a && J || !a && !J) && (me.push({
				filename: s,
				size: n,
				obj: null
			}), o += n);
			return o
		}, fe.startPreloads = function() {
			var t, e, i, r;
			for (t = 0, e = me.length; e > t; ++t) i = me[t], r = this.runtime.files_subfolder + i.filename, i.obj = this.getAudioBuffer(r, !1)
		}, fe.getPreloadedSize = function() {
			var t, e, i, r = 0;
			for (t = 0, e = me.length; e > t; ++t) i = me[t], i.obj.isLoadedAndDecoded() || i.obj.hasFailedToLoad() || this.runtime.isDomFree || this.runtime.isAndroidStockBrowser ? r += i.size : i.obj.isLoaded() && (r += Math.floor(i.size / 2));
			return r
		}, fe.getAudioBuffer = function(t, e) {
			var i, r, s, n = null;
			for (i = 0, r = q.length; r > i; i++)
				if (s = q[i], s.src === t) {
					n = s;
					break
				}
			return n || (n = new T(t, e), q.push(n)), n
		}, fe.getAudioInstance = function(t, e, i, r, s) {
			var n, a, o;
			for (n = 0, a = H.length; a > n; n++)
				if (o = H[n], o.src === t && (o.canBeRecycled() || i)) return o.tag = e, o;
			var h = this.getAudioBuffer(t, i);
			return h.bufferObject ? (o = new C(h, e), H.push(o), o) : ("<preload>" !== e && (h.playTagWhenReady = e, h.loopWhenReady = r, h.volumeWhenReady = s), null)
		};
		var ye = [];
		I.prototype.OnEnded = function(t) {
			return cr.equals_nocase(j, t)
		}, I.prototype.PreloadsComplete = function() {
			var t, e;
			for (t = 0, e = q.length; e > t; t++)
				if (!q[t].isLoadedAndDecoded() && !q[t].hasFailedToLoad()) return !1;
			return !0
		}, I.prototype.AdvancedAudioSupported = function() {
			return V === z
		}, I.prototype.IsSilent = function() {
			return Q
		}, I.prototype.IsAnyPlaying = function() {
			var t, e;
			for (t = 0, e = H.length; e > t; t++)
				if (H[t].isPlaying()) return !0;
			return !1
		}, I.prototype.IsTagPlaying = function(t) {
			O(t);
			var e, i;
			for (e = 0, i = ye.length; i > e; e++)
				if (ye[e].isPlaying()) return !0;
			return !1
		}, M.cnds = new I, P.prototype.Play = function(e, i, r, s) {
			if (!Q) {
				var n = t(r),
					a = e[1],
					o = this.runtime.files_subfolder + e[0] + (J ? ".ogg" : ".m4a");
				Y = this.getAudioInstance(o, s, a, 0 !== i, n), Y && (Y.setPannerEnabled(!1), Y.play(0 !== i, n))
			}
		}, P.prototype.PlayAtPosition = function(e, i, r, s, n, a, o, h, c, l) {
			if (!Q) {
				var u = t(r),
					p = e[1],
					d = this.runtime.files_subfolder + e[0] + (J ? ".ogg" : ".m4a");
				if (Y = this.getAudioInstance(d, l, p, 0 !== i, u), !Y) {
					var f = this.getAudioBuffer(d, p);
					return void f.panWhenReady.push({
						x: s,
						y: n,
						a: a,
						ia: o,
						oa: h,
						og: t(c),
						thistag: l
					})
				}
				Y.setPannerEnabled(!0), Y.setPan(s, n, a, o, h, t(c)), Y.play(0 !== i, u)
			}
		}, P.prototype.PlayAtObject = function(e, i, r, s, n, a, o, h) {
			if (!Q && s) {
				var c = s.getFirstPicked();
				if (c) {
					var l = t(r),
						u = e[1],
						p = this.runtime.files_subfolder + e[0] + (J ? ".ogg" : ".m4a");
					if (Y = this.getAudioInstance(p, h, u, 0 !== i, l), !Y) {
						var d = this.getAudioBuffer(p, u);
						return void d.panWhenReady.push({
							obj: c,
							ia: n,
							oa: a,
							og: t(o),
							thistag: h
						})
					}
					Y.setPannerEnabled(!0);
					var f = cr.rotatePtAround(c.x, c.y, -c.layer.getAngle(), $, te, !0),
						g = cr.rotatePtAround(c.x, c.y, -c.layer.getAngle(), $, te, !1);
					Y.setPan(f, g, cr.to_degrees(c.angle - c.layer.getAngle()), n, a, t(o)), Y.setObject(c), Y.play(0 !== i, l)
				}
			}
		}, P.prototype.PlayByName = function(e, i, r, s, n) {
			if (!Q) {
				var a = t(s),
					o = 1 === e,
					h = this.runtime.files_subfolder + i.toLowerCase() + (J ? ".ogg" : ".m4a");
				Y = this.getAudioInstance(h, n, o, 0 !== r, a), Y && (Y.setPannerEnabled(!1), Y.play(0 !== r, a))
			}
		}, P.prototype.PlayAtPositionByName = function(e, i, r, s, n, a, o, h, c, l, u) {
			if (!Q) {
				var p = t(s),
					d = 1 === e,
					f = this.runtime.files_subfolder + i.toLowerCase() + (J ? ".ogg" : ".m4a");
				if (Y = this.getAudioInstance(f, u, d, 0 !== r, p), !Y) {
					var g = this.getAudioBuffer(f, d);
					return void g.panWhenReady.push({
						x: n,
						y: a,
						a: o,
						ia: h,
						oa: c,
						og: t(l),
						thistag: u
					})
				}
				Y.setPannerEnabled(!0), Y.setPan(n, a, o, h, c, t(l)), Y.play(0 !== r, p)
			}
		}, P.prototype.PlayAtObjectByName = function(e, i, r, s, n, a, o, h, c) {
			if (!Q && n) {
				var l = n.getFirstPicked();
				if (l) {
					var u = t(s),
						p = 1 === e,
						d = this.runtime.files_subfolder + i.toLowerCase() + (J ? ".ogg" : ".m4a");
					if (Y = this.getAudioInstance(d, c, p, 0 !== r, u), !Y) {
						var f = this.getAudioBuffer(d, p);
						return void f.panWhenReady.push({
							obj: l,
							ia: a,
							oa: o,
							og: t(h),
							thistag: c
						})
					}
					Y.setPannerEnabled(!0);
					var g = cr.rotatePtAround(l.x, l.y, -l.layer.getAngle(), $, te, !0),
						m = cr.rotatePtAround(l.x, l.y, -l.layer.getAngle(), $, te, !1);
					Y.setPan(g, m, cr.to_degrees(l.angle - l.layer.getAngle()), a, o, t(h)), Y.setObject(l), Y.play(0 !== r, u)
				}
			}
		}, P.prototype.SetLooping = function(t, e) {
			O(t);
			var i, r;
			for (i = 0, r = ye.length; r > i; i++) ye[i].setLooping(0 === e)
		}, P.prototype.SetMuted = function(t, e) {
			O(t);
			var i, r;
			for (i = 0, r = ye.length; r > i; i++) ye[i].setMuted(0 === e)
		}, P.prototype.SetVolume = function(e, i) {
			O(e);
			var r, s, n = t(i);
			for (r = 0, s = ye.length; s > r; r++) ye[r].setVolume(n)
		}, P.prototype.Preload = function(t) {
			if (!Q) {
				var e = t[1],
					i = this.runtime.files_subfolder + t[0] + (J ? ".ogg" : ".m4a");
				return V === U ? void(this.runtime.isDirectCanvas ? AppMobi.context.loadSound(i) : AppMobi.player.loadSound(i)) : void(V !== G && this.getAudioInstance(i, "<preload>", e, !1))
			}
		}, P.prototype.PreloadByName = function(t, e) {
			if (!Q) {
				var i = 1 === t,
					r = this.runtime.files_subfolder + e.toLowerCase() + (J ? ".ogg" : ".m4a");
				return V === U ? void(this.runtime.isDirectCanvas ? AppMobi.context.loadSound(r) : AppMobi.player.loadSound(r)) : void(V !== G && this.getAudioInstance(r, "<preload>", i, !1))
			}
		}, P.prototype.SetPlaybackRate = function(t, e) {
			O(t), 0 > e && (e = 0);
			var i, r;
			for (i = 0, r = ye.length; r > i; i++) ye[i].setPlaybackRate(e)
		}, P.prototype.Stop = function(t) {
			O(t);
			var e, i;
			for (e = 0, i = ye.length; i > e; e++) ye[e].stop()
		}, P.prototype.StopAll = function() {
			var t, e;
			for (t = 0, e = H.length; e > t; t++) H[t].stop()
		}, P.prototype.SetPaused = function(t, e) {
			O(t);
			var i, r;
			for (i = 0, r = ye.length; r > i; i++) 0 === e ? ye[i].pause() : ye[i].resume()
		}, P.prototype.Seek = function(t, e) {
			O(t);
			var i, r;
			for (i = 0, r = ye.length; r > i; i++) ye[i].seek(e)
		}, P.prototype.SetSilent = function(t) {
			var e, i;
			if (2 === t && (t = Q ? 1 : 0), 0 !== t || Q) {
				if (1 === t && Q) {
					for (e = 0, i = H.length; i > e; e++) H[e].setSilent(!1);
					Q = !1
				}
			} else {
				for (e = 0, i = H.length; i > e; e++) H[e].setSilent(!0);
				Q = !0
			}
		}, P.prototype.SetMasterVolume = function(e) {
			Z = t(e);
			var i, r;
			for (i = 0, r = H.length; r > i; i++) H[i].updateVolume()
		}, P.prototype.AddFilterEffect = function(t, e, i, r, s, n, a) {
			V !== z || 0 > e || e >= ue.length || !X.createBiquadFilter || (t = t.toLowerCase(), a /= 100, 0 > a && (a = 0), a > 1 && (a = 1), E(t, new u(e, i, r, s, n, a)))
		}, P.prototype.AddDelayEffect = function(e, i, r, s) {
			V === z && (e = e.toLowerCase(), s /= 100, 0 > s && (s = 0), s > 1 && (s = 1), E(e, new p(i, t(r), s)))
		}, P.prototype.AddFlangerEffect = function(t, e, i, r, s, n) {
			V === z && X.createOscillator && (t = t.toLowerCase(), n /= 100, 0 > n && (n = 0), n > 1 && (n = 1), E(t, new f(e / 1e3, i / 1e3, r, s / 100, n)))
		}, P.prototype.AddPhaserEffect = function(t, e, i, r, s, n, a) {
			V === z && X.createOscillator && (t = t.toLowerCase(), a /= 100, 0 > a && (a = 0), a > 1 && (a = 1), E(t, new g(e, i, r, s, n, a)))
		}, P.prototype.AddConvolutionEffect = function(t, e, i, r) {
			if (V === z && X.createConvolver) {
				var s = 0 === i,
					n = this.runtime.files_subfolder + e[0] + (J ? ".ogg" : ".m4a"),
					a = this.getAudioBuffer(n, !1);
				t = t.toLowerCase(), r /= 100, 0 > r && (r = 0), r > 1 && (r = 1);
				var o;
				a.bufferObject ? o = new d(a.bufferObject, s, r, n) : (o = new d(null, s, r, n), a.normalizeWhenReady = s, a.convolveWhenReady = o), E(t, o)
			}
		}, P.prototype.AddGainEffect = function(e, i) {
			V === z && (e = e.toLowerCase(), E(e, new m(t(i))))
		}, P.prototype.AddMuteEffect = function(t) {
			V === z && (t = t.toLowerCase(), E(t, new m(0)))
		}, P.prototype.AddTremoloEffect = function(t, e, i) {
			V === z && X.createOscillator && (t = t.toLowerCase(), i /= 100, 0 > i && (i = 0), i > 1 && (i = 1), E(t, new y(e, i)))
		}, P.prototype.AddRingModEffect = function(t, e, i) {
			V === z && X.createOscillator && (t = t.toLowerCase(), i /= 100, 0 > i && (i = 0), i > 1 && (i = 1), E(t, new _(e, i)))
		}, P.prototype.AddDistortionEffect = function(t, e, i, r, s, n) {
			V === z && X.createWaveShaper && (t = t.toLowerCase(), n /= 100, 0 > n && (n = 0), n > 1 && (n = 1), E(t, new v(e, i, r, s, n)))
		}, P.prototype.AddCompressorEffect = function(t, e, i, r, s, n) {
			V === z && X.createDynamicsCompressor && (t = t.toLowerCase(), E(t, new w(e, i, r, s / 1e3, n / 1e3)))
		}, P.prototype.AddAnalyserEffect = function(t, e, i) {
			V === z && (t = t.toLowerCase(), E(t, new x(e, i)))
		}, P.prototype.RemoveEffects = function(t) {
			if (V === z) {
				t = t.toLowerCase();
				var e, i, r;
				if (le.hasOwnProperty(t) && (r = le[t], r.length)) {
					for (e = 0, i = r.length; i > e; e++) r[e].remove();
					cr.clearArray(r), A(t)
				}
			}
		}, P.prototype.SetEffectParameter = function(t, e, i, r, s, n) {
			if (V === z) {
				t = t.toLowerCase(), e = Math.floor(e);
				var a;
				le.hasOwnProperty(t) && (a = le[t], 0 > e || e >= a.length || a[e].setParam(i, r, s, n))
			}
		}, P.prototype.SetListenerObject = function(t) {
			if (t && V === z) {
				var e = t.getFirstPicked();
				e && (this.listenerTracker.setObject(e), $ = e.x, te = e.y)
			}
		}, P.prototype.SetListenerZ = function(t) {
			this.listenerZ = t
		}, M.acts = new P, L.prototype.Duration = function(t, e) {
			O(e, !0), t.set_float(ye.length ? ye[0].getDuration() : 0)
		}, L.prototype.PlaybackTime = function(t, e) {
			O(e, !0), t.set_float(ye.length ? ye[0].getPlaybackTime() : 0)
		}, L.prototype.Volume = function(t, i) {
			if (O(i, !0), ye.length) {
				var r = ye[0].getVolume();
				t.set_float(e(r))
			} else t.set_float(0)
		}, L.prototype.MasterVolume = function(t) {
			t.set_float(e(Z))
		}, L.prototype.EffectCount = function(t, e) {
			e = e.toLowerCase();
			var i = null;
			le.hasOwnProperty(e) && (i = le[e]), t.set_int(i ? i.length : 0)
		}, L.prototype.AnalyserFreqBinCount = function(t, e, i) {
			e = e.toLowerCase(), i = Math.floor(i);
			var r = R(e, i);
			t.set_int(r ? r.node.frequencyBinCount : 0)
		}, L.prototype.AnalyserFreqBinAt = function(t, e, i, r) {
			e = e.toLowerCase(), i = Math.floor(i), r = Math.floor(r);
			var s = R(e, i);
			t.set_float(s ? 0 > r || r >= s.node.frequencyBinCount ? 0 : s.freqBins[r] : 0)
		}, L.prototype.AnalyserPeakLevel = function(t, e, i) {
			e = e.toLowerCase(), i = Math.floor(i);
			var r = R(e, i);
			t.set_float(r ? r.peak : 0)
		}, L.prototype.AnalyserRMSLevel = function(t, e, i) {
			e = e.toLowerCase(), i = Math.floor(i);
			var r = R(e, i);
			t.set_float(r ? r.rms : 0)
		}, M.exps = new L
	}(), cr.plugins_.Browser = function(t) {
		this.runtime = t
	},
	function() {
		function maybeLoadBatteryManager() {
			if (!loadedBatteryManager && navigator.getBattery) {
				var t = navigator.getBattery();
				loadedBatteryManager = !0, t && t.then(function(t) {
					batteryManager = t
				})
			}
		}

		function Cnds() {}

		function Acts() {}

		function onFullscreenError(t) {
			console && console.warn && console.warn("Fullscreen request failed: ", t), crruntime.setSize(window.innerWidth, window.innerHeight)
		}

		function Exps() {}
		var pluginProto = cr.plugins_.Browser.prototype;
		pluginProto.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var typeProto = pluginProto.Type.prototype;
		typeProto.onCreate = function() {}, pluginProto.Instance = function(t) {
			this.type = t, this.runtime = t.runtime
		};
		var instanceProto = pluginProto.Instance.prototype;
		instanceProto.onCreate = function() {
			var t = this;
			window.addEventListener("resize", function() {
				t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnResize, t)
			}), "undefined" != typeof navigator.onLine && (window.addEventListener("online", function() {
				t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOnline, t)
			}), window.addEventListener("offline", function() {
				t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOffline, t)
			})), "undefined" != typeof window.applicationCache && (window.applicationCache.addEventListener("updateready", function() {
				t.runtime.loadingprogress = 1, t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, t)
			}), window.applicationCache.addEventListener("progress", function(e) {
				t.runtime.loadingprogress = e.loaded / e.total
			})), this.runtime.isDirectCanvas || (document.addEventListener("appMobi.device.update.available", function() {
				t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, t)
			}), document.addEventListener("backbutton", function() {
				t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, t)
			}), document.addEventListener("menubutton", function() {
				t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, t)
			}), document.addEventListener("searchbutton", function() {
				t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnSearchButton, t)
			}), document.addEventListener("tizenhwkey", function(e) {
				var i;
				switch (e.keyName) {
					case "back":
						i = t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, t), i || window.tizen && window.tizen.application.getCurrentApplication().exit();
						break;
					case "menu":
						i = t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, t), i || e.preventDefault()
				}
			})), this.runtime.isWinJS && WinJS.Application && (WinJS.Application.onbackclick = function() {
				return !!t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, t)
			}), this.runtime.addSuspendCallback(function(e) {
				e ? t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageHidden, t) : t.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageVisible, t)
			}), this.is_arcade = "undefined" != typeof window.is_scirra_arcade
		};
		var batteryManager = null,
			loadedBatteryManager = !1;
		Cnds.prototype.CookiesEnabled = function() {
			return navigator ? navigator.cookieEnabled : !1
		}, Cnds.prototype.IsOnline = function() {
			return navigator ? navigator.onLine : !1
		}, Cnds.prototype.HasJava = function() {
			return navigator ? navigator.javaEnabled() : !1
		}, Cnds.prototype.OnOnline = function() {
			return !0
		}, Cnds.prototype.OnOffline = function() {
			return !0
		}, Cnds.prototype.IsDownloadingUpdate = function() {
			return "undefined" == typeof window.applicationCache ? !1 : window.applicationCache.status === window.applicationCache.DOWNLOADING
		}, Cnds.prototype.OnUpdateReady = function() {
			return !0
		}, Cnds.prototype.PageVisible = function() {
			return !this.runtime.isSuspended
		}, Cnds.prototype.OnPageVisible = function() {
			return !0
		}, Cnds.prototype.OnPageHidden = function() {
			return !0
		}, Cnds.prototype.OnResize = function() {
			return !0
		}, Cnds.prototype.IsFullscreen = function() {
			return !!(document.mozFullScreen || document.webkitIsFullScreen || document.fullScreen || this.runtime.isNodeFullscreen)
		}, Cnds.prototype.OnBackButton = function() {
			return !0
		}, Cnds.prototype.OnMenuButton = function() {
			return !0
		}, Cnds.prototype.OnSearchButton = function() {
			return !0
		}, Cnds.prototype.IsMetered = function() {
			var t = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
			return t ? !!t.metered : !1
		}, Cnds.prototype.IsCharging = function() {
			var t = navigator.battery || navigator.mozBattery || navigator.webkitBattery;
			return t ? !!t.charging : (maybeLoadBatteryManager(), batteryManager ? !!batteryManager.charging : !0)
		}, Cnds.prototype.IsPortraitLandscape = function(t) {
			var e = window.innerWidth <= window.innerHeight ? 0 : 1;
			return e === t
		}, Cnds.prototype.SupportsFullscreen = function() {
			if (this.runtime.isNodeWebkit) return !0;
			var t = this.runtime.canvasdiv || this.runtime.canvas;
			return !!(t.requestFullscreen || t.mozRequestFullScreen || t.msRequestFullscreen || t.webkitRequestFullScreen)
		}, pluginProto.cnds = new Cnds, Acts.prototype.Alert = function(t) {
			this.runtime.isDomFree || alert(t.toString())
		}, Acts.prototype.Close = function() {
			this.runtime.isCocoonJs ? CocoonJS.App.forceToFinish() : window.tizen ? window.tizen.application.getCurrentApplication().exit() : navigator.app && navigator.app.exitApp ? navigator.app.exitApp() : navigator.device && navigator.device.exitApp ? navigator.device.exitApp() : this.is_arcade || this.runtime.isDomFree || window.close()
		}, Acts.prototype.Focus = function() {
			if (this.runtime.isNodeWebkit) {
				var t = window.nwgui.Window.get();
				t.focus()
			} else this.is_arcade || this.runtime.isDomFree || window.focus()
		}, Acts.prototype.Blur = function() {
			if (this.runtime.isNodeWebkit) {
				var t = window.nwgui.Window.get();
				t.blur()
			} else this.is_arcade || this.runtime.isDomFree || window.blur()
		}, Acts.prototype.GoBack = function() {
			navigator.app && navigator.app.backHistory ? navigator.app.backHistory() : this.is_arcade || this.runtime.isDomFree || !window.back || window.back()
		}, Acts.prototype.GoForward = function() {
			this.is_arcade || this.runtime.isDomFree || !window.forward || window.forward()
		}, Acts.prototype.GoHome = function() {
			this.is_arcade || this.runtime.isDomFree || !window.home || window.home()
		}, Acts.prototype.GoToURL = function(t, e) {
			this.runtime.isCocoonJs ? CocoonJS.App.openURL(t) : this.runtime.isEjecta ? ejecta.openURL(t) : this.runtime.isWinJS ? Windows.System.Launcher.launchUriAsync(new Windows.Foundation.Uri(t)) : navigator.app && navigator.app.loadUrl ? navigator.app.loadUrl(t, {
				openExternal: !0
			}) : this.runtime.isCordova ? window.open(t, "_system") : this.is_arcade || this.runtime.isDomFree || (2 !== e || this.is_arcade ? 1 !== e || this.is_arcade ? window.location = t : window.parent.location = t : window.top.location = t)
		}, Acts.prototype.GoToURLWindow = function(t, e) {
			this.runtime.isCocoonJs ? CocoonJS.App.openURL(t) : this.runtime.isEjecta ? ejecta.openURL(t) : this.runtime.isWinJS ? Windows.System.Launcher.launchUriAsync(new Windows.Foundation.Uri(t)) : navigator.app && navigator.app.loadUrl ? navigator.app.loadUrl(t, {
				openExternal: !0
			}) : this.runtime.isCordova ? window.open(t, "_system") : this.is_arcade || this.runtime.isDomFree || window.open(t, e)
		}, Acts.prototype.Reload = function() {
			this.is_arcade || this.runtime.isDomFree || window.location.reload()
		};
		var firstRequestFullscreen = !0,
			crruntime = null;
		Acts.prototype.RequestFullScreen = function(t) {
			if (this.runtime.isDomFree) return void cr.logexport("[Construct 2] Requesting fullscreen is not supported on this platform - the request has been ignored");
			if (t >= 2 && (t += 1), 6 === t && (t = 2), this.runtime.isNodeWebkit) this.runtime.isDebug ? debuggerFullscreen(!0) : !this.runtime.isNodeFullscreen && window.nwgui && (window.nwgui.Window.get().enterFullscreen(), this.runtime.isNodeFullscreen = !0, this.runtime.fullscreen_scaling = t >= 2 ? t : 0);
			else {
				if (document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || document.fullScreen || document.fullScreenElement) return;
				this.runtime.fullscreen_scaling = t >= 2 ? t : 0;
				var e = this.runtime.canvasdiv || this.runtime.canvas;
				firstRequestFullscreen && (firstRequestFullscreen = !1, crruntime = this.runtime, e.addEventListener("mozfullscreenerror", onFullscreenError), e.addEventListener("webkitfullscreenerror", onFullscreenError), e.addEventListener("MSFullscreenError", onFullscreenError), e.addEventListener("fullscreenerror", onFullscreenError)), e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.msRequestFullscreen ? e.msRequestFullscreen() : e.webkitRequestFullScreen && ("undefined" != typeof Element && "undefined" != typeof Element.ALLOW_KEYBOARD_INPUT ? e.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT) : e.webkitRequestFullScreen())
			}
		}, Acts.prototype.CancelFullScreen = function() {
			return this.runtime.isDomFree ? void cr.logexport("[Construct 2] Exiting fullscreen is not supported on this platform - the request has been ignored") : void(this.runtime.isNodeWebkit ? this.runtime.isDebug ? debuggerFullscreen(!1) : this.runtime.isNodeFullscreen && window.nwgui && (window.nwgui.Window.get().leaveFullscreen(), this.runtime.isNodeFullscreen = !1) : document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.webkitCancelFullScreen && document.webkitCancelFullScreen())
		}, Acts.prototype.Vibrate = function(t) {
			try {
				var e, i, r = t.split(",");
				for (e = 0, i = r.length; i > e; e++) r[e] = parseInt(r[e], 10);
				navigator.vibrate ? navigator.vibrate(r) : navigator.mozVibrate ? navigator.mozVibrate(r) : navigator.webkitVibrate ? navigator.webkitVibrate(r) : navigator.msVibrate && navigator.msVibrate(r)
			} catch (s) {}
		}, Acts.prototype.InvokeDownload = function(t, e) {
			var i = document.createElement("a");
			if ("undefined" == typeof i.download) window.open(t);
			else {
				var r = document.getElementsByTagName("body")[0];
				i.textContent = e, i.href = t, i.download = e, r.appendChild(i);
				var s = document.createEvent("MouseEvent");
				s.initMouseEvent("click", !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), i.dispatchEvent(s), r.removeChild(i)
			}
		}, Acts.prototype.InvokeDownloadString = function(t, e, i) {
			var r = "data:" + e + "," + encodeURIComponent(t),
				s = document.createElement("a");
			if ("undefined" == typeof s.download) window.open(r);
			else {
				var n = document.getElementsByTagName("body")[0];
				s.textContent = i, s.href = r, s.download = i, n.appendChild(s);
				var a = document.createEvent("MouseEvent");
				a.initMouseEvent("click", !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(a), n.removeChild(s)
			}
		}, Acts.prototype.ConsoleLog = function(t, e) {
			"undefined" != typeof console && (0 === t && console.log && console.log(e.toString()), 1 === t && console.warn && console.warn(e.toString()), 2 === t && console.error && console.error(e.toString()))
		}, Acts.prototype.ConsoleGroup = function(t) {
			console && console.group && console.group(t)
		}, Acts.prototype.ConsoleGroupEnd = function() {
			console && console.groupEnd && console.groupEnd()
		}, Acts.prototype.ExecJs = function(js_) {
			try {
				eval && eval(js_)
			} catch (e) {
				console && console.error && console.error("Error executing Javascript: ", e)
			}
		};
		var orientations = ["portrait", "landscape", "portrait-primary", "portrait-secondary", "landscape-primary", "landscape-secondary"];
		Acts.prototype.LockOrientation = function(t) {
			if (t = Math.floor(t), !(0 > t || t >= orientations.length)) {
				this.runtime.autoLockOrientation = !1;
				var e = orientations[t];
				screen.orientation && screen.orientation.lock ? screen.orientation.lock(e) : screen.lockOrientation ? screen.lockOrientation(e) : screen.webkitLockOrientation ? screen.webkitLockOrientation(e) : screen.mozLockOrientation ? screen.mozLockOrientation(e) : screen.msLockOrientation && screen.msLockOrientation(e)
			}
		}, Acts.prototype.UnlockOrientation = function() {
			this.runtime.autoLockOrientation = !1, screen.orientation && screen.orientation.unlock ? screen.orientation.unlock() : screen.unlockOrientation ? screen.unlockOrientation() : screen.webkitUnlockOrientation ? screen.webkitUnlockOrientation() : screen.mozUnlockOrientation ? screen.mozUnlockOrientation() : screen.msUnlockOrientation && screen.msUnlockOrientation()
		}, pluginProto.acts = new Acts, Exps.prototype.URL = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : window.location.toString())
		}, Exps.prototype.Protocol = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : window.location.protocol)
		}, Exps.prototype.Domain = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : window.location.hostname)
		}, Exps.prototype.PathName = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : window.location.pathname)
		}, Exps.prototype.Hash = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : window.location.hash)
		}, Exps.prototype.Referrer = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : document.referrer)
		}, Exps.prototype.Title = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : document.title)
		}, Exps.prototype.Name = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : navigator.appName)
		}, Exps.prototype.Version = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : navigator.appVersion)
		}, Exps.prototype.Language = function(t) {
			t.set_string(navigator && navigator.language ? navigator.language : "")
		}, Exps.prototype.Platform = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : navigator.platform)
		}, Exps.prototype.Product = function(t) {
			t.set_string(navigator && navigator.product ? navigator.product : "")
		}, Exps.prototype.Vendor = function(t) {
			t.set_string(navigator && navigator.vendor ? navigator.vendor : "")
		}, Exps.prototype.UserAgent = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : navigator.userAgent)
		}, Exps.prototype.QueryString = function(t) {
			t.set_string(this.runtime.isDomFree ? "" : window.location.search)
		}, Exps.prototype.QueryParam = function(t, e) {
			if (this.runtime.isDomFree) return void t.set_string("");
			var i = RegExp("[?&]" + e + "=([^&]*)").exec(window.location.search);
			t.set_string(i ? decodeURIComponent(i[1].replace(/\+/g, " ")) : "")
		}, Exps.prototype.Bandwidth = function(t) {
			var e = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
			t.set_float(e ? "undefined" != typeof e.bandwidth ? e.bandwidth : "undefined" != typeof e.downlinkMax ? e.downlinkMax : Number.POSITIVE_INFINITY : Number.POSITIVE_INFINITY)
		}, Exps.prototype.ConnectionType = function(t) {
			var e = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
			t.set_string(e ? e.type || "unknown" : "unknown")
		}, Exps.prototype.BatteryLevel = function(t) {
			var e = navigator.battery || navigator.mozBattery || navigator.webkitBattery;
			e ? t.set_float(e.level) : (maybeLoadBatteryManager(), t.set_float(batteryManager ? batteryManager.level : 1))
		}, Exps.prototype.BatteryTimeLeft = function(t) {
			var e = navigator.battery || navigator.mozBattery || navigator.webkitBattery;
			e ? t.set_float(e.dischargingTime) : (maybeLoadBatteryManager(), t.set_float(batteryManager ? batteryManager.dischargingTime : Number.POSITIVE_INFINITY))
		}, Exps.prototype.ExecJS = function(ret, js_) {
			if (!eval) return void ret.set_any(0);
			var result = 0;
			try {
				result = eval(js_)
			} catch (e) {
				console && console.error && console.error("Error executing Javascript: ", e)
			}
			ret.set_any("number" == typeof result ? result : "string" == typeof result ? result : "boolean" == typeof result && result ? 1 : 0)
		}, Exps.prototype.ScreenWidth = function(t) {
			t.set_int(screen.width)
		}, Exps.prototype.ScreenHeight = function(t) {
			t.set_int(screen.height)
		}, Exps.prototype.DevicePixelRatio = function(t) {
			t.set_float(this.runtime.devicePixelRatio)
		}, pluginProto.exps = new Exps
	}(), cr.plugins_.Famobi = function(t) {
		this.runtime = t
	},
	function() {
		function t() {}

		function e() {}

		function i() {}
		var r = cr.plugins_.Famobi.prototype;
		r.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var s = r.Type.prototype;
		s.onCreate = function() {}, r.Instance = function(t) {
			this.type = t, this.runtime = t.runtime
		};
		var n = r.Instance.prototype;
		n.onCreate = function() {}, n.onDestroy = function() {}, n.saveToJSON = function() {
			return {}
		}, n.loadFromJSON = function() {}, n.draw = function() {}, n.drawGL = function() {}, t.prototype.MyCondition = function(t) {
			return t >= 0
		}, t.prototype.LocalStorageExists = function(t) {
			try {
				return "undefined" == typeof window.localStorage ? !1 : 0 != window.localStorage.getItem(t)
			} catch (e) {
				console.debug(e)
			}
		}, t.prototype.SessionStorageExists = function(t) {
			try {
				return "undefined" == typeof window.sessionStorage ? !1 : 0 != window.sessionStorage.getItem(t)
			} catch (e) {
				console.debug(e)
			}
		}, t.prototype.CompareKeyText = function(t, e, i) {
			try {
				if ("undefined" == typeof window.localStorage) return !1;
				var r = window.localStorage.getItem(t) || "";
				return i ? r == e : cr.equals_nocase(r, e)
			} catch (s) {
				console.debug(s)
			}
		}, t.prototype.CompareKeyNumber = function(t, e, i) {
			try {
				if ("undefined" == typeof window.localStorage) return !1;
				var r = window.localStorage.getItem(t) || "";
				return cr.do_cmp(parseFloat(r), e, i)
			} catch (s) {
				console.debug(s)
			}
		}, t.prototype.CompareSessionKeyText = function(t, e, i) {
			try {
				if ("undefined" == typeof window.sessionStorage) return !1;
				var r = window.sessionStorage.getItem(t) || "";
				return i ? r == e : cr.equals_nocase(r, e)
			} catch (s) {
				console.debug(s)
			}
		}, t.prototype.CompareSessionKeyNumber = function(t, e, i) {
			try {
				if ("undefined" == typeof window.sessionStorage) return !1;
				var r = window.sessionStorage.getItem(t) || "";
				return cr.do_cmp(parseFloat(r), e, i)
			} catch (s) {
				console.debug(s)
			}
		}, r.cnds = new t, e.prototype.GameOver = function() {
			try {
				// window.famobi.gameOver()
				console.log('GameOver');
			} catch (t) {
				console.debug(t)
			}
		}, e.prototype.LevelUp = function(t) {
			try {
				// window.famobi.levelUp(t)
			} catch (e) {
				console.debug(e)
			}
		}, e.prototype.SubmitHighscore = function(t, e) {
			try {
				// window.famobi.submitHighscore(t, e)
				console.log(e);
				updateShare(e);
				Play68.setRankingScoreDesc(e);
			} catch (i) {
				console.debug(i)
			}
		}, e.prototype.__ = function(t) {
			try {
				return t
			} catch (e) {
				console.debug(e)
			}
		}, e.prototype.GetMoreGamesButtonImage = function() {
			try {
				// return window.famobi.getMoreGamesButtonImage()
			} catch (t) {
				console.debug(t)
			}
		}, e.prototype.MoreGamesLink = function() {
			try {
				// window.famobi.moreGamesLink()
				console.log('MoreGamesLink');
				// Play68.goHome();
				parent.location.href = "http://wxsxz117.cc:8080/games/index.html";
			} catch (t) {
				console.debug(t)
			}
		}, e.prototype.ShowAd = function() {
			try {
				// window.famobi.showAd()
			} catch (t) {
				console.debug(t)
			}
		}, e.prototype.ForceAd = function() {
			try {
				// window.famobi.forceAd()
			} catch (t) {
				console.debug(t)
			}
		}, e.prototype.SetItemLocalStorage = function(t, e) {
			try {
				window.localStorage.setItem(t, e)
			} catch (i) {
				console.debug(i)
			}
		}, e.prototype.GetItemLocalStorage = function(t) {
			try {
				return window.localStorage.getItem(t)
			} catch (e) {
				console.debug(e)
			}
		}, e.prototype.RemoveItemLocalStorage = function(t) {
			try {
				window.localStorage.removeItem(t)
			} catch (e) {
				console.debug(e)
			}
		}, e.prototype.ClearLocalStorage = function() {
			try {
				window.localStorage.Clear()
			} catch (t) {
				console.debug(t)
			}
		}, e.prototype.SetItemSessionStorage = function(t, e) {
			try {
				window.sessionStorage.setItem(t, e)
			} catch (i) {
				console.debug(i)
			}
		}, e.prototype.GetItemSessionStorage = function(t) {
			try {
				return window.sessionStorage.getItem(t)
			} catch (e) {
				console.debug(e)
			}
		}, e.prototype.RemoveItemSessionStorage = function(t) {
			try {
				window.sessionStorage.removeItem(t)
			} catch (e) {
				console.debug(e)
			}
		}, e.prototype.ClearSessionStorage = function() {
			try {
				window.sessionStorage.Clear()
			} catch (t) {
				console.debug(t)
			}
		}, r.acts = new e, i.prototype.GetMoreGamesButtonImage = function(t) {
			t.set_string(e.prototype.GetMoreGamesButtonImage())
		}, i.prototype.Translate = function(t, i) {
			t.set_string(e.prototype.__(i))
		}, r.exps = new i
	}(), cr.plugins_.Keyboard = function(t) {
		this.runtime = t
	},
	function() {
		function t() {}

		function e() {}

		function i() {}

		function r(t) {
			switch (t = Math.floor(t)) {
				case 8:
					return "backspace";
				case 9:
					return "tab";
				case 13:
					return "enter";
				case 16:
					return "shift";
				case 17:
					return "control";
				case 18:
					return "alt";
				case 19:
					return "pause";
				case 20:
					return "capslock";
				case 27:
					return "esc";
				case 33:
					return "pageup";
				case 34:
					return "pagedown";
				case 35:
					return "end";
				case 36:
					return "home";
				case 37:
					return "←";
				case 38:
					return "↑";
				case 39:
					return "→";
				case 40:
					return "↓";
				case 45:
					return "insert";
				case 46:
					return "del";
				case 91:
					return "left window key";
				case 92:
					return "right window key";
				case 93:
					return "select";
				case 96:
					return "numpad 0";
				case 97:
					return "numpad 1";
				case 98:
					return "numpad 2";
				case 99:
					return "numpad 3";
				case 100:
					return "numpad 4";
				case 101:
					return "numpad 5";
				case 102:
					return "numpad 6";
				case 103:
					return "numpad 7";
				case 104:
					return "numpad 8";
				case 105:
					return "numpad 9";
				case 106:
					return "numpad *";
				case 107:
					return "numpad +";
				case 109:
					return "numpad -";
				case 110:
					return "numpad .";
				case 111:
					return "numpad /";
				case 112:
					return "F1";
				case 113:
					return "F2";
				case 114:
					return "F3";
				case 115:
					return "F4";
				case 116:
					return "F5";
				case 117:
					return "F6";
				case 118:
					return "F7";
				case 119:
					return "F8";
				case 120:
					return "F9";
				case 121:
					return "F10";
				case 122:
					return "F11";
				case 123:
					return "F12";
				case 144:
					return "numlock";
				case 145:
					return "scroll lock";
				case 186:
					return ";";
				case 187:
					return "=";
				case 188:
					return ",";
				case 189:
					return "-";
				case 190:
					return ".";
				case 191:
					return "/";
				case 192:
					return "'";
				case 219:
					return "[";
				case 220:
					return "\\";
				case 221:
					return "]";
				case 222:
					return "#";
				case 223:
					return "`";
				default:
					return String.fromCharCode(t)
			}
		}
		var s = cr.plugins_.Keyboard.prototype;
		s.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var n = s.Type.prototype;
		n.onCreate = function() {}, s.Instance = function(t) {
			this.type = t, this.runtime = t.runtime, this.keyMap = new Array(256), this.usedKeys = new Array(256), this.triggerKey = 0
		};
		var a = s.Instance.prototype;
		a.onCreate = function() {
			var t = this;
			this.runtime.isDomFree || (jQuery(document).keydown(function(e) {
				t.onKeyDown(e)
			}), jQuery(document).keyup(function(e) {
				t.onKeyUp(e)
			}))
		};
		var o = [32, 33, 34, 35, 36, 37, 38, 39, 40, 44];
		a.onKeyDown = function(t) {
			var e = !1;
			if (window != window.top && o.indexOf(t.which) > -1 && (t.preventDefault(), e = !0, t.stopPropagation()), this.keyMap[t.which]) return void(this.usedKeys[t.which] && !e && t.preventDefault());
			this.keyMap[t.which] = !0, this.triggerKey = t.which, this.runtime.isInUserInputEvent = !0, this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKey, this);
			var i = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKey, this),
				r = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCode, this);
			this.runtime.isInUserInputEvent = !1, (i || r) && (this.usedKeys[t.which] = !0, e || t.preventDefault())
		}, a.onKeyUp = function(t) {
			this.keyMap[t.which] = !1, this.triggerKey = t.which, this.runtime.isInUserInputEvent = !0, this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKeyReleased, this);
			var e = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyReleased, this),
				i = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCodeReleased, this);
			this.runtime.isInUserInputEvent = !1, (e || i || this.usedKeys[t.which]) && (this.usedKeys[t.which] = !0, t.preventDefault())
		}, a.saveToJSON = function() {
			return {
				triggerKey: this.triggerKey
			}
		}, a.loadFromJSON = function(t) {
			this.triggerKey = t.triggerKey
		}, t.prototype.IsKeyDown = function(t) {
			return this.keyMap[t]
		}, t.prototype.OnKey = function(t) {
			return t === this.triggerKey
		}, t.prototype.OnAnyKey = function() {
			return !0
		}, t.prototype.OnAnyKeyReleased = function() {
			return !0
		}, t.prototype.OnKeyReleased = function(t) {
			return t === this.triggerKey
		}, t.prototype.IsKeyCodeDown = function(t) {
			return t = Math.floor(t), 0 > t || t >= this.keyMap.length ? !1 : this.keyMap[t]
		}, t.prototype.OnKeyCode = function(t) {
			return t === this.triggerKey
		}, t.prototype.OnKeyCodeReleased = function(t) {
			return t === this.triggerKey
		}, s.cnds = new t, s.acts = new e, i.prototype.LastKeyCode = function(t) {
			t.set_int(this.triggerKey)
		}, i.prototype.StringFromKeyCode = function(t, e) {
			t.set_string(r(e))
		}, s.exps = new i
	}(), ! function() {
		var t, e, i, r;
		! function() {
			var s = {},
				n = {};
			t = function(t, e, i) {
				s[t] = {
					deps: e,
					callback: i
				}
			}, r = i = e = function(t) {
				function i(e) {
					if ("." !== e.charAt(0)) return e;
					for (var i = e.split("/"), r = t.split("/").slice(0, -1), s = 0, n = i.length; n > s; s++) {
						var a = i[s];
						if (".." === a) r.pop();
						else {
							if ("." === a) continue;
							r.push(a)
						}
					}
					return r.join("/")
				}
				if (r._eak_seen = s, n[t]) return n[t];
				if (n[t] = {}, !s[t]) throw new Error("Could not find module " + t);
				for (var a, o = s[t], h = o.deps, c = o.callback, l = [], u = 0, p = h.length; p > u; u++) l.push("exports" === h[u] ? a = {} : e(i(h[u])));
				var d = c.apply(this, l);
				return n[t] = a || d
			}
		}(), t("promise/all", ["./utils", "exports"], function(t, e) {
			"use strict";

			function i(t) {
				var e = this;
				if (!r(t)) throw new TypeError("You must pass an array to all.");
				return new e(function(e, i) {
					function r(t) {
						return function(e) {
							n(t, e)
						}
					}

					function n(t, i) {
						o[t] = i, 0 === --h && e(o)
					}
					var a, o = [],
						h = t.length;
					0 === h && e([]);
					for (var c = 0; c < t.length; c++) a = t[c], a && s(a.then) ? a.then(r(c), i) : n(c, a)
				})
			}
			var r = t.isArray,
				s = t.isFunction;
			e.all = i
		}), t("promise/asap", ["exports"], function(t) {
			"use strict";

			function e() {
				return function() {
					process.nextTick(s)
				}
			}

			function i() {
				var t = 0,
					e = new h(s),
					i = document.createTextNode("");
				return e.observe(i, {
						characterData: !0
					}),
					function() {
						i.data = t = ++t % 2
					}
			}

			function r() {
				return function() {
					c.setTimeout(s, 1)
				}
			}

			function s() {
				for (var t = 0; t < l.length; t++) {
					var e = l[t],
						i = e[0],
						r = e[1];
					i(r)
				}
				l = []
			}

			function n(t, e) {
				var i = l.push([t, e]);
				1 === i && a()
			}
			var a, o = "undefined" != typeof window ? window : {},
				h = o.MutationObserver || o.WebKitMutationObserver,
				c = "undefined" != typeof global ? global : void 0 === this ? window : this,
				l = [];
			a = "undefined" != typeof process && "[object process]" === {}.toString.call(process) ? e() : h ? i() : r(), t.asap = n
		}), t("promise/config", ["exports"], function(t) {
			"use strict";

			function e(t, e) {
				return 2 !== arguments.length ? i[t] : void(i[t] = e)
			}
			var i = {
				instrument: !1
			};
			t.config = i, t.configure = e
		}), t("promise/polyfill", ["./promise", "./utils", "exports"], function(t, e, i) {
			"use strict";

			function r() {
				var t;
				t = "undefined" != typeof global ? global : "undefined" != typeof window && window.document ? window : self;
				var e = "Promise" in t && "resolve" in t.Promise && "reject" in t.Promise && "all" in t.Promise && "race" in t.Promise && function() {
					var e;
					return new t.Promise(function(t) {
						e = t
					}), n(e)
				}();
				e || (t.Promise = s)
			}
			var s = t.Promise,
				n = e.isFunction;
			i.polyfill = r
		}), t("promise/promise", ["./config", "./utils", "./all", "./race", "./resolve", "./reject", "./asap", "exports"], function(t, e, i, r, s, n, a, o) {
			"use strict";

			function h(t) {
				if (!w(t)) throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
				if (!(this instanceof h)) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
				this._subscribers = [], c(t, this)
			}

			function c(t, e) {
				function i(t) {
					f(e, t)
				}

				function r(t) {
					m(e, t)
				}
				try {
					t(i, r)
				} catch (s) {
					r(s)
				}
			}

			function l(t, e, i, r) {
				var s, n, a, o, h = w(i);
				if (h) try {
					s = i(r), a = !0
				} catch (c) {
					o = !0, n = c
				} else s = r, a = !0;
				d(e, s) || (h && a ? f(e, s) : o ? m(e, n) : t === E ? f(e, s) : t === I && m(e, s))
			}

			function u(t, e, i, r) {
				var s = t._subscribers,
					n = s.length;
				s[n] = e, s[n + E] = i, s[n + I] = r
			}

			function p(t, e) {
				for (var i, r, s = t._subscribers, n = t._detail, a = 0; a < s.length; a += 3) i = s[a], r = s[a + e], l(e, i, r, n);
				t._subscribers = null
			}

			function d(t, e) {
				var i, r = null;
				try {
					if (t === e) throw new TypeError("A promises callback cannot return that same promise.");
					if (b(e) && (r = e.then, w(r))) return r.call(e, function(r) {
						return i ? !0 : (i = !0, void(e !== r ? f(t, r) : g(t, r)))
					}, function(e) {
						return i ? !0 : (i = !0, void m(t, e))
					}), !0
				} catch (s) {
					return i ? !0 : (m(t, s), !0)
				}
				return !1
			}

			function f(t, e) {
				t === e ? g(t, e) : d(t, e) || g(t, e)
			}

			function g(t, e) {
				t._state === O && (t._state = A, t._detail = e, v.async(y, t))
			}

			function m(t, e) {
				t._state === O && (t._state = A, t._detail = e, v.async(_, t))
			}

			function y(t) {
				p(t, t._state = E)
			}

			function _(t) {
				p(t, t._state = I)
			}
			var v = t.config,
				b = (t.configure, e.objectOrFunction),
				w = e.isFunction,
				x = (e.now, i.all),
				S = r.race,
				T = s.resolve,
				C = n.reject,
				k = a.asap;
			v.async = k;
			var O = void 0,
				A = 0,
				E = 1,
				I = 2;
			h.prototype = {
				constructor: h,
				_state: void 0,
				_detail: void 0,
				_subscribers: void 0,
				then: function(t, e) {
					var i = this,
						r = new this.constructor(function() {});
					if (this._state) {
						var s = arguments;
						v.async(function() {
							l(i._state, r, s[i._state - 1], i._detail)
						})
					} else u(this, r, t, e);
					return r
				},
				"catch": function(t) {
					return this.then(null, t)
				}
			}, h.all = x, h.race = S, h.resolve = T, h.reject = C, o.Promise = h
		}), t("promise/race", ["./utils", "exports"], function(t, e) {
			"use strict";

			function i(t) {
				var e = this;
				if (!r(t)) throw new TypeError("You must pass an array to race.");
				return new e(function(e, i) {
					for (var r, s = 0; s < t.length; s++) r = t[s], r && "function" == typeof r.then ? r.then(e, i) : e(r)
				})
			}
			var r = t.isArray;
			e.race = i
		}), t("promise/reject", ["exports"], function(t) {
			"use strict";

			function e(t) {
				var e = this;
				return new e(function(e, i) {
					i(t)
				})
			}
			t.reject = e
		}), t("promise/resolve", ["exports"], function(t) {
			"use strict";

			function e(t) {
				if (t && "object" == typeof t && t.constructor === this) return t;
				var e = this;
				return new e(function(e) {
					e(t)
				})
			}
			t.resolve = e
		}), t("promise/utils", ["exports"], function(t) {
			"use strict";

			function e(t) {
				return i(t) || "object" == typeof t && null !== t
			}

			function i(t) {
				return "function" == typeof t
			}

			function r(t) {
				return "[object Array]" === Object.prototype.toString.call(t)
			}
			var s = Date.now || function() {
				return (new Date).getTime()
			};
			t.objectOrFunction = e, t.isFunction = i, t.isArray = r, t.now = s
		}), e("promise/polyfill").polyfill()
	}(),
	function() {
		"use strict";

		function t(t, e) {
			var i = "";
			if (t && (i = t.toString()), t && ("[object ArrayBuffer]" === t.toString() || t.buffer && "[object ArrayBuffer]" === t.buffer.toString())) {
				var s, a = n;
				t instanceof ArrayBuffer ? (s = t, a += o) : (s = t.buffer, "[object Int8Array]" === i ? a += c : "[object Uint8Array]" === i ? a += l : "[object Uint8ClampedArray]" === i ? a += u : "[object Int16Array]" === i ? a += p : "[object Uint16Array]" === i ? a += f : "[object Int32Array]" === i ? a += d : "[object Uint32Array]" === i ? a += g : "[object Float32Array]" === i ? a += m : "[object Float64Array]" === i ? a += y : e(new Error("Failed to get type for BinaryArray"))), e(a + r(s))
			} else if ("[object Blob]" === i) {
				var _ = new FileReader;
				_.onload = function() {
					var t = r(this.result);
					e(n + h + t)
				}, _.readAsArrayBuffer(t)
			} else try {
				e(JSON.stringify(t))
			} catch (v) {
				window.console.error("Couldn't convert value into a JSON string: ", t), e(null, v)
			}
		}

		function e(t) {
			if (t.substring(0, a) !== n) return JSON.parse(t);
			var e = t.substring(_),
				r = t.substring(a, _),
				s = i(e);
			switch (r) {
				case o:
					return s;
				case h:
					return new Blob([s]);
				case c:
					return new Int8Array(s);
				case l:
					return new Uint8Array(s);
				case u:
					return new Uint8ClampedArray(s);
				case p:
					return new Int16Array(s);
				case f:
					return new Uint16Array(s);
				case d:
					return new Int32Array(s);
				case g:
					return new Uint32Array(s);
				case m:
					return new Float32Array(s);
				case y:
					return new Float64Array(s);
				default:
					throw new Error("Unkown type: " + r)
			}
		}

		function i(t) {
			var e, i, r, n, a, o = .75 * t.length,
				h = t.length,
				c = 0;
			"=" === t[t.length - 1] && (o--, "=" === t[t.length - 2] && o--);
			var l = new ArrayBuffer(o),
				u = new Uint8Array(l);
			for (e = 0; h > e; e += 4) i = s.indexOf(t[e]), r = s.indexOf(t[e + 1]), n = s.indexOf(t[e + 2]), a = s.indexOf(t[e + 3]), u[c++] = i << 2 | r >> 4, u[c++] = (15 & r) << 4 | n >> 2, u[c++] = (3 & n) << 6 | 63 & a;
			return l
		}

		function r(t) {
			var e, i = new Uint8Array(t),
				r = "";
			for (e = 0; e < i.length; e += 3) r += s[i[e] >> 2], r += s[(3 & i[e]) << 4 | i[e + 1] >> 4], r += s[(15 & i[e + 1]) << 2 | i[e + 2] >> 6], r += s[63 & i[e + 2]];
			return i.length % 3 === 2 ? r = r.substring(0, r.length - 1) + "=" : i.length % 3 === 1 && (r = r.substring(0, r.length - 2) + "=="), r
		}
		var s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
			n = "__lfsc__:",
			a = n.length,
			o = "arbf",
			h = "blob",
			c = "si08",
			l = "ui08",
			u = "uic8",
			p = "si16",
			d = "si32",
			f = "ur16",
			g = "ui32",
			m = "fl32",
			y = "fl64",
			_ = a + o.length,
			v = {
				serialize: t,
				deserialize: e,
				stringToBuffer: i,
				bufferToString: r
			};
		"undefined" != typeof module && module.exports ? module.exports = v : "function" == typeof define && define.amd ? define("localforageSerializer", function() {
			return v
		}) : this.localforageSerializer = v
	}.call(window),
	function() {
		"use strict";

		function t(t) {
			var e = this,
				i = {
					db: null
				};
			if (t)
				for (var r in t) i[r] = t[r];
			return new l(function(t, r) {
				var s = u.open(i.name, i.version);
				s.onerror = function() {
					r(s.error)
				}, s.onupgradeneeded = function() {
					s.result.createObjectStore(i.storeName)
				}, s.onsuccess = function() {
					i.db = s.result, e._dbInfo = i, t()
				}
			})
		}

		function e(t, e) {
			var i = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var r = new l(function(e, r) {
				i.ready().then(function() {
					var s = i._dbInfo,
						n = s.db.transaction(s.storeName, "readonly").objectStore(s.storeName),
						a = n.get(t);
					a.onsuccess = function() {
						var t = a.result;
						void 0 === t && (t = null), e(t)
					}, a.onerror = function() {
						r(a.error)
					}
				})["catch"](r)
			});
			return c(r, e), r
		}

		function i(t, e) {
			var i = this,
				r = new l(function(e, r) {
					i.ready().then(function() {
						var s = i._dbInfo,
							n = s.db.transaction(s.storeName, "readonly").objectStore(s.storeName),
							a = n.openCursor(),
							o = 1;
						a.onsuccess = function() {
							var i = a.result;
							if (i) {
								var r = t(i.value, i.key, o++);
								void 0 !== r ? e(r) : i["continue"]()
							} else e()
						}, a.onerror = function() {
							r(a.error)
						}
					})["catch"](r)
				});
			return c(r, e), r
		}

		function r(t, e, i) {
			var r = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var s = new l(function(i, s) {
				r.ready().then(function() {
					var n = r._dbInfo,
						a = n.db.transaction(n.storeName, "readwrite"),
						o = a.objectStore(n.storeName);
					null === e && (e = void 0);
					var h = o.put(e, t);
					a.oncomplete = function() {
						void 0 === e && (e = null), i(e)
					}, a.onabort = a.onerror = function() {
						var t = h.error ? h.error : h.transaction.error;
						s(t)
					}
				})["catch"](s)
			});
			return c(s, i), s
		}

		function s(t, e) {
			var i = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var r = new l(function(e, r) {
				i.ready().then(function() {
					var s = i._dbInfo,
						n = s.db.transaction(s.storeName, "readwrite"),
						a = n.objectStore(s.storeName),
						o = a["delete"](t);
					n.oncomplete = function() {
						e()
					}, n.onerror = function() {
						r(o.error)
					}, n.onabort = function() {
						var t = o.error ? o.error : o.transaction.error;
						r(t)
					}
				})["catch"](r)
			});
			return c(r, e), r
		}

		function n(t) {
			var e = this,
				i = new l(function(t, i) {
					e.ready().then(function() {
						var r = e._dbInfo,
							s = r.db.transaction(r.storeName, "readwrite"),
							n = s.objectStore(r.storeName),
							a = n.clear();
						s.oncomplete = function() {
							t()
						}, s.onabort = s.onerror = function() {
							var t = a.error ? a.error : a.transaction.error;
							i(t)
						}
					})["catch"](i)
				});
			return c(i, t), i
		}

		function a(t) {
			var e = this,
				i = new l(function(t, i) {
					e.ready().then(function() {
						var r = e._dbInfo,
							s = r.db.transaction(r.storeName, "readonly").objectStore(r.storeName),
							n = s.count();
						n.onsuccess = function() {
							t(n.result)
						}, n.onerror = function() {
							i(n.error)
						}
					})["catch"](i)
				});
			return c(i, t), i
		}

		function o(t, e) {
			var i = this,
				r = new l(function(e, r) {
					return 0 > t ? void e(null) : void i.ready().then(function() {
						var s = i._dbInfo,
							n = s.db.transaction(s.storeName, "readonly").objectStore(s.storeName),
							a = !1,
							o = n.openCursor();
						o.onsuccess = function() {
							var i = o.result;
							return i ? void(0 === t ? e(i.key) : a ? e(i.key) : (a = !0, i.advance(t))) : void e(null)
						}, o.onerror = function() {
							r(o.error)
						}
					})["catch"](r)
				});
			return c(r, e), r
		}

		function h(t) {
			var e = this,
				i = new l(function(t, i) {
					e.ready().then(function() {
						var r = e._dbInfo,
							s = r.db.transaction(r.storeName, "readonly").objectStore(r.storeName),
							n = s.openCursor(),
							a = [];
						n.onsuccess = function() {
							var e = n.result;
							return e ? (a.push(e.key), void e["continue"]()) : void t(a)
						}, n.onerror = function() {
							i(n.error)
						}
					})["catch"](i)
				});
			return c(i, t), i
		}

		function c(t, e) {
			e && t.then(function(t) {
				e(null, t)
			}, function(t) {
				e(t)
			})
		}
		var l = "undefined" != typeof module && module.exports ? require("promise") : this.Promise,
			u = u || this.indexedDB || this.webkitIndexedDB || this.mozIndexedDB || this.OIndexedDB || this.msIndexedDB;
		if (u) {
			var p = {
				_driver: "asyncStorage",
				_initStorage: t,
				iterate: i,
				getItem: e,
				setItem: r,
				removeItem: s,
				clear: n,
				length: a,
				key: o,
				keys: h
			};
			"undefined" != typeof module && module.exports ? module.exports = p : "function" == typeof define && define.amd ? define("asyncStorage", function() {
				return p
			}) : this.asyncStorage = p
		}
	}.call(window),
	function() {
		"use strict";

		function t(t) {
			var e = this,
				i = {};
			if (t)
				for (var r in t) i[r] = t[r];
			i.keyPrefix = i.name + "/", e._dbInfo = i;
			var s = new l(function(t) {
				m === g.DEFINE ? require(["localforageSerializer"], t) : t(m === g.EXPORT ? require("./../utils/serializer") : u.localforageSerializer)
			});
			return s.then(function(t) {
				return p = t, l.resolve()
			})
		}

		function e(t) {
			var e = this,
				i = e.ready().then(function() {
					for (var t = e._dbInfo.keyPrefix, i = d.length - 1; i >= 0; i--) {
						var r = d.key(i);
						0 === r.indexOf(t) && d.removeItem(r)
					}
				});
			return c(i, t), i
		}

		function i(t, e) {
			var i = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var r = i.ready().then(function() {
				var e = i._dbInfo,
					r = d.getItem(e.keyPrefix + t);
				return r && (r = p.deserialize(r)), r
			});
			return c(r, e), r
		}

		function r(t, e) {
			var i = this,
				r = i.ready().then(function() {
					for (var e = i._dbInfo.keyPrefix, r = e.length, s = d.length, n = 0; s > n; n++) {
						var a = d.key(n),
							o = d.getItem(a);
						if (o && (o = p.deserialize(o)), o = t(o, a.substring(r), n + 1), void 0 !== o) return o
					}
				});
			return c(r, e), r
		}

		function s(t, e) {
			var i = this,
				r = i.ready().then(function() {
					var e, r = i._dbInfo;
					try {
						e = d.key(t)
					} catch (s) {
						e = null
					}
					return e && (e = e.substring(r.keyPrefix.length)), e
				});
			return c(r, e), r
		}

		function n(t) {
			var e = this,
				i = e.ready().then(function() {
					for (var t = e._dbInfo, i = d.length, r = [], s = 0; i > s; s++) 0 === d.key(s).indexOf(t.keyPrefix) && r.push(d.key(s).substring(t.keyPrefix.length));
					return r
				});
			return c(i, t), i
		}

		function a(t) {
			var e = this,
				i = e.keys().then(function(t) {
					return t.length
				});
			return c(i, t), i
		}

		function o(t, e) {
			var i = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var r = i.ready().then(function() {
				var e = i._dbInfo;
				d.removeItem(e.keyPrefix + t)
			});
			return c(r, e), r
		}

		function h(t, e, i) {
			var r = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var s = r.ready().then(function() {
				void 0 === e && (e = null);
				var i = e;
				return new l(function(s, n) {
					p.serialize(e, function(e, a) {
						if (a) n(a);
						else try {
							var o = r._dbInfo;
							d.setItem(o.keyPrefix + t, e), s(i)
						} catch (h) {
							("QuotaExceededError" === h.name || "NS_ERROR_DOM_QUOTA_REACHED" === h.name) && n(h), n(h)
						}
					})
				})
			});
			return c(s, i), s
		}

		function c(t, e) {
			e && t.then(function(t) {
				e(null, t)
			}, function(t) {
				e(t)
			})
		}
		var l = "undefined" != typeof module && module.exports ? require("promise") : this.Promise,
			u = this,
			p = null,
			d = null;
		try {
			if (!(this.localStorage && "setItem" in this.localStorage)) return;
			d = this.localStorage
		} catch (f) {
			return
		}
		var g = {
				DEFINE: 1,
				EXPORT: 2,
				WINDOW: 3
			},
			m = g.WINDOW;
		"undefined" != typeof module && module.exports ? m = g.EXPORT : "function" == typeof define && define.amd && (m = g.DEFINE);
		var y = {
			_driver: "localStorageWrapper",
			_initStorage: t,
			iterate: r,
			getItem: i,
			setItem: h,
			removeItem: o,
			clear: e,
			length: a,
			key: s,
			keys: n
		};
		m === g.EXPORT ? module.exports = y : m === g.DEFINE ? define("localStorageWrapper", function() {
			return y
		}) : this.localStorageWrapper = y
	}.call(window),
	function() {
		"use strict";

		function t(t) {
			var e = this,
				i = {
					db: null
				};
			if (t)
				for (var r in t) i[r] = "string" != typeof t[r] ? t[r].toString() : t[r];
			var s = new l(function(t) {
					g === f.DEFINE ? require(["localforageSerializer"], t) : t(g === f.EXPORT ? require("./../utils/serializer") : u.localforageSerializer)
				}),
				n = new l(function(r, s) {
					try {
						i.db = d(i.name, String(i.version), i.description, i.size)
					} catch (n) {
						return e.setDriver(e.LOCALSTORAGE).then(function() {
							return e._initStorage(t)
						}).then(r)["catch"](s)
					}
					i.db.transaction(function(t) {
						t.executeSql("CREATE TABLE IF NOT EXISTS " + i.storeName + " (id INTEGER PRIMARY KEY, key unique, value)", [], function() {
							e._dbInfo = i, r()
						}, function(t, e) {
							s(e)
						})
					})
				});
			return s.then(function(t) {
				return p = t, n
			})
		}

		function e(t, e) {
			var i = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var r = new l(function(e, r) {
				i.ready().then(function() {
					var s = i._dbInfo;
					s.db.transaction(function(i) {
						i.executeSql("SELECT * FROM " + s.storeName + " WHERE key = ? LIMIT 1", [t], function(t, i) {
							var r = i.rows.length ? i.rows.item(0).value : null;
							r && (r = p.deserialize(r)), e(r)
						}, function(t, e) {
							r(e)
						})
					})
				})["catch"](r)
			});
			return c(r, e), r
		}

		function i(t, e) {
			var i = this,
				r = new l(function(e, r) {
					i.ready().then(function() {
						var s = i._dbInfo;
						s.db.transaction(function(i) {
							i.executeSql("SELECT * FROM " + s.storeName, [], function(i, r) {
								for (var s = r.rows, n = s.length, a = 0; n > a; a++) {
									var o = s.item(a),
										h = o.value;
									if (h && (h = p.deserialize(h)), h = t(h, o.key, a + 1), void 0 !== h) return void e(h)
								}
								e()
							}, function(t, e) {
								r(e)
							})
						})
					})["catch"](r)
				});
			return c(r, e), r
		}

		function r(t, e, i) {
			var r = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var s = new l(function(i, s) {
				r.ready().then(function() {
					void 0 === e && (e = null);
					var n = e;
					p.serialize(e, function(e, a) {
						if (a) s(a);
						else {
							var o = r._dbInfo;
							o.db.transaction(function(r) {
								r.executeSql("INSERT OR REPLACE INTO " + o.storeName + " (key, value) VALUES (?, ?)", [t, e], function() {
									i(n)
								}, function(t, e) {
									s(e)
								})
							}, function(t) {
								t.code === t.QUOTA_ERR && s(t)
							})
						}
					})
				})["catch"](s)
			});
			return c(s, i), s
		}

		function s(t, e) {
			var i = this;
			"string" != typeof t && (window.console.warn(t + " used as a key, but it is not a string."), t = String(t));
			var r = new l(function(e, r) {
				i.ready().then(function() {
					var s = i._dbInfo;
					s.db.transaction(function(i) {
						i.executeSql("DELETE FROM " + s.storeName + " WHERE key = ?", [t], function() {
							e()
						}, function(t, e) {
							r(e)
						})
					})
				})["catch"](r)
			});
			return c(r, e), r
		}

		function n(t) {
			var e = this,
				i = new l(function(t, i) {
					e.ready().then(function() {
						var r = e._dbInfo;
						r.db.transaction(function(e) {
							e.executeSql("DELETE FROM " + r.storeName, [], function() {
								t()
							}, function(t, e) {
								i(e)
							})
						})
					})["catch"](i)
				});
			return c(i, t), i
		}

		function a(t) {
			var e = this,
				i = new l(function(t, i) {
					e.ready().then(function() {
						var r = e._dbInfo;
						r.db.transaction(function(e) {
							e.executeSql("SELECT COUNT(key) as c FROM " + r.storeName, [], function(e, i) {
								var r = i.rows.item(0).c;
								t(r)
							}, function(t, e) {
								i(e)
							})
						})
					})["catch"](i)
				});
			return c(i, t), i
		}

		function o(t, e) {
			var i = this,
				r = new l(function(e, r) {
					i.ready().then(function() {
						var s = i._dbInfo;
						s.db.transaction(function(i) {
							i.executeSql("SELECT key FROM " + s.storeName + " WHERE id = ? LIMIT 1", [t + 1], function(t, i) {
								var r = i.rows.length ? i.rows.item(0).key : null;
								e(r)
							}, function(t, e) {
								r(e)
							})
						})
					})["catch"](r)
				});
			return c(r, e), r
		}

		function h(t) {
			var e = this,
				i = new l(function(t, i) {
					e.ready().then(function() {
						var r = e._dbInfo;
						r.db.transaction(function(e) {
							e.executeSql("SELECT key FROM " + r.storeName, [], function(e, i) {
								for (var r = [], s = 0; s < i.rows.length; s++) r.push(i.rows.item(s).key);
								t(r)
							}, function(t, e) {
								i(e)
							})
						})
					})["catch"](i)
				});
			return c(i, t), i
		}

		function c(t, e) {
			e && t.then(function(t) {
				e(null, t)
			}, function(t) {
				e(t)
			})
		}
		var l = "undefined" != typeof module && module.exports ? require("promise") : this.Promise,
			u = this,
			p = null,
			d = this.openDatabase;
		if (d) {
			var f = {
					DEFINE: 1,
					EXPORT: 2,
					WINDOW: 3
				},
				g = f.WINDOW;
			"undefined" != typeof module && module.exports ? g = f.EXPORT : "function" == typeof define && define.amd && (g = f.DEFINE);
			var m = {
				_driver: "webSQLStorage",
				_initStorage: t,
				iterate: i,
				getItem: e,
				setItem: r,
				removeItem: s,
				clear: n,
				length: a,
				key: o,
				keys: h
			};
			g === f.DEFINE ? define("webSQLStorage", function() {
				return m
			}) : g === f.EXPORT ? module.exports = m : this.webSQLStorage = m
		}
	}.call(window),
	function() {
		"use strict";

		function t(t, e) {
			t[e] = function() {
				var i = arguments;
				return t.ready().then(function() {
					return t[e].apply(t, i)
				})
			}
		}

		function e() {
			for (var t = 1; t < arguments.length; t++) {
				var e = arguments[t];
				if (e)
					for (var i in e) e.hasOwnProperty(i) && (arguments[0][i] = d(e[i]) ? e[i].slice() : e[i])
			}
			return arguments[0]
		}

		function i(t) {
			for (var e in a)
				if (a.hasOwnProperty(e) && a[e] === t) return !0;
			return !1
		}

		function r(i) {
			this._config = e({}, l, i), this._driverSet = null, this._ready = !1, this._dbInfo = null;
			for (var r = 0; r < h.length; r++) t(this, h[r]);
			this.setDriver(this._config.driver)
		}
		var s = "undefined" != typeof module && module.exports ? require("promise") : this.Promise,
			n = {},
			a = {
				INDEXEDDB: "asyncStorage",
				LOCALSTORAGE: "localStorageWrapper",
				WEBSQL: "webSQLStorage"
			},
			o = [a.INDEXEDDB, a.WEBSQL, a.LOCALSTORAGE],
			h = ["clear", "getItem", "iterate", "key", "keys", "length", "removeItem", "setItem"],
			c = {
				DEFINE: 1,
				EXPORT: 2,
				WINDOW: 3
			},
			l = {
				description: "",
				driver: o.slice(),
				name: "localforage",
				size: 4980736,
				storeName: "keyvaluepairs",
				version: 1
			},
			u = c.WINDOW;
		"undefined" != typeof module && module.exports ? u = c.EXPORT : "function" == typeof define && define.amd && (u = c.DEFINE);
		var p = function(t) {
				var e = e || t.indexedDB || t.webkitIndexedDB || t.mozIndexedDB || t.OIndexedDB || t.msIndexedDB,
					i = {};
				return i[a.WEBSQL] = !!t.openDatabase, i[a.INDEXEDDB] = !! function() {
					if ("undefined" != typeof t.openDatabase && t.navigator && t.navigator.userAgent && /Safari/.test(t.navigator.userAgent) && !/Chrome/.test(t.navigator.userAgent)) return !1;
					try {
						return e && "function" == typeof e.open && "undefined" != typeof t.IDBKeyRange
					} catch (i) {
						return !1
					}
				}(), i[a.LOCALSTORAGE] = !! function() {
					try {
						return t.localStorage && "setItem" in t.localStorage && t.localStorage.setItem
					} catch (e) {
						return !1
					}
				}(), i
			}(this),
			d = Array.isArray || function(t) {
				return "[object Array]" === Object.prototype.toString.call(t)
			},
			f = this;
		r.prototype.INDEXEDDB = a.INDEXEDDB, r.prototype.LOCALSTORAGE = a.LOCALSTORAGE, r.prototype.WEBSQL = a.WEBSQL, r.prototype.config = function(t) {
			if ("object" == typeof t) {
				if (this._ready) return new Error("Can't call config() after localforage has been used.");
				for (var e in t) "storeName" === e && (t[e] = t[e].replace(/\W/g, "_")), this._config[e] = t[e];
				return "driver" in t && t.driver && this.setDriver(this._config.driver), !0
			}
			return "string" == typeof t ? this._config[t] : this._config
		}, r.prototype.defineDriver = function(t, e, r) {
			var a = new s(function(e, r) {
				try {
					var a = t._driver,
						o = new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver"),
						c = new Error("Custom driver name already in use: " + t._driver);
					if (!t._driver) return void r(o);
					if (i(t._driver)) return void r(c);
					for (var l = h.concat("_initStorage"), u = 0; u < l.length; u++) {
						var d = l[u];
						if (!d || !t[d] || "function" != typeof t[d]) return void r(o)
					}
					var f = s.resolve(!0);
					"_support" in t && (f = t._support && "function" == typeof t._support ? t._support() : s.resolve(!!t._support)), f.then(function(i) {
						p[a] = i, n[a] = t, e()
					}, r)
				} catch (g) {
					r(g)
				}
			});
			return a.then(e, r), a
		}, r.prototype.driver = function() {
			return this._driver || null
		}, r.prototype.ready = function(t) {
			var e = this,
				i = new s(function(t, i) {
					e._driverSet.then(function() {
						null === e._ready && (e._ready = e._initStorage(e._config)), e._ready.then(t, i)
					})["catch"](i)
				});
			return i.then(t, t), i
		}, r.prototype.setDriver = function(t, e, r) {
			function a() {
				o._config.driver = o.driver()
			}
			var o = this;
			return "string" == typeof t && (t = [t]), this._driverSet = new s(function(e, r) {
				var a = o._getFirstSupportedDriver(t),
					h = new Error("No available storage method found.");
				if (!a) return o._driverSet = s.reject(h), void r(h);
				if (o._dbInfo = null, o._ready = null, i(a)) {
					if (u === c.DEFINE) return void require([a], function(t) {
						o._extend(t), e()
					});
					if (u === c.EXPORT) {
						var l;
						switch (a) {
							case o.INDEXEDDB:
								l = require("./drivers/indexeddb");
								break;
							case o.LOCALSTORAGE:
								l = require("./drivers/localstorage");
								break;
							case o.WEBSQL:
								l = require("./drivers/websql")
						}
						o._extend(l)
					} else o._extend(f[a])
				} else {
					if (!n[a]) return o._driverSet = s.reject(h), void r(h);
					o._extend(n[a])
				}
				e()
			}), this._driverSet.then(a, a), this._driverSet.then(e, r), this._driverSet
		}, r.prototype.supports = function(t) {
			return !!p[t]
		}, r.prototype._extend = function(t) {
			e(this, t)
		}, r.prototype._getFirstSupportedDriver = function(t) {
			if (t && d(t))
				for (var e = 0; e < t.length; e++) {
					var i = t[e];
					if (this.supports(i)) return i
				}
			return null
		}, r.prototype.createInstance = function(t) {
			return new r(t)
		};
		var g = new r;
		u === c.DEFINE ? define("localforage", function() {
			return g
		}) : u === c.EXPORT ? module.exports = g : this.localforage = g
	}.call(window), cr.plugins_.LocalStorage = function(t) {
		this.runtime = t
	},
	function() {
		function t(t) {
			return t ? "string" == typeof t ? t : "string" == typeof t.message ? t.message : "string" == typeof t.name ? t.name : "string" == typeof t.data ? t.data : "unknown error" : "unknown error"
		}

		function e(t) {
			return l ? t.substr(0, l.length) === l : !0
		}

		function i(t) {
			return l ? e(t) ? t.substr(l.length) : void 0 : t
		}

		function r() {}

		function s() {}

		function n() {}
		var a = "",
			o = "",
			h = [],
			c = "",
			l = "",
			u = "undefined" != typeof window.is_scirra_arcade;
		u && (l = "sa" + window.scirra_arcade_id + "_");
		var p = cr.plugins_.LocalStorage.prototype;
		p.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var d = p.Type.prototype;
		d.onCreate = function() {}, p.Instance = function(t) {
			this.type = t, this.runtime = t.runtime
		};
		var f = p.Instance.prototype;
		f.onCreate = function() {
			this.pendingSets = 0, this.pendingGets = 0
		}, f.onDestroy = function() {}, f.saveToJSON = function() {
			return {}
		}, f.loadFromJSON = function() {};
		var g = !0;
		r.prototype.OnItemSet = function(t) {
			return a === t
		}, r.prototype.OnAnyItemSet = function() {
			return !0
		}, r.prototype.OnItemGet = function(t) {
			return a === t
		}, r.prototype.OnAnyItemGet = function() {
			return !0
		}, r.prototype.OnItemRemoved = function(t) {
			return a === t
		}, r.prototype.OnAnyItemRemoved = function() {
			return !0
		}, r.prototype.OnCleared = function() {
			return !0
		}, r.prototype.OnAllKeyNamesLoaded = function() {
			return !0
		}, r.prototype.OnError = function() {
			return !0
		}, r.prototype.OnItemExists = function(t) {
			return a === t
		}, r.prototype.OnItemMissing = function(t) {
			return a === t
		}, r.prototype.CompareKey = function(t, e) {
			return cr.do_cmp(a, t, e)
		}, r.prototype.CompareValue = function(t, e) {
			return cr.do_cmp(o, t, e)
		}, r.prototype.IsProcessingSets = function() {
			return this.pendingSets > 0
		}, r.prototype.IsProcessingGets = function() {
			return this.pendingGets > 0
		}, r.prototype.OnAllSetsComplete = function() {
			return !0
		}, r.prototype.OnAllGetsComplete = function() {
			return !0
		}, p.cnds = new r, s.prototype.SetItem = function(e, i) {
			var r = l + e;
			this.pendingSets++;
			var s = this;
			localforage.setItem(r, i, function(i, r) {
				g = !0, s.pendingSets--, i ? (c = t(i), s.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnError, s)) : (a = e, o = r, s.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnAnyItemSet, s), s.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnItemSet, s), a = "", o = ""), 0 === s.pendingSets && s.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnAllSetsComplete, s)
			})
		}, s.prototype.GetItem = function(e) {
			var i = l + e;
			this.pendingGets++;
			var r = this;
			localforage.getItem(i, function(i, s) {
				r.pendingGets--, i ? (c = t(i), r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnError, r)) : (a = e, o = s, ("undefined" == typeof o || null === o) && (o = ""), r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnAnyItemGet, r), r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnItemGet, r), a = "", o = ""), 0 === r.pendingGets && r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnAllGetsComplete, r)
			})
		}, s.prototype.CheckItemExists = function(e) {
			var i = l + e,
				r = this;
			localforage.getItem(i, function(i, s) {
				i ? (c = t(i), r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnError, r)) : (a = e, null === s ? (o = "", r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnItemMissing, r)) : (o = s, r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnItemExists, r)), a = "", o = "")
			})
		}, s.prototype.RemoveItem = function(e) {
			var i = l + e,
				r = this;
			localforage.removeItem(i, function(i) {
				g = !0, i ? (c = t(i), r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnError, r)) : (a = e, o = "", r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnAnyItemRemoved, r), r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnItemRemoved, r), a = "")
			})
		}, s.prototype.ClearStorage = function() {
			if (!u) {
				var e = this;
				localforage.clear(function(i) {
					g = !0, i ? (c = t(i), e.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnError, e)) : (a = "", o = "", cr.clearArray(h), e.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnCleared, e))
				})
			}
		}, s.prototype.GetAllKeyNames = function() {
			var r = this;
			localforage.keys(function(s, n) {
				var a, o, l;
				if (s) c = t(s), r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnError, r);
				else {
					for (cr.clearArray(h), a = 0, o = n.length; o > a; ++a) l = n[a], e(l) && h.push(i(l));
					r.runtime.trigger(cr.plugins_.LocalStorage.prototype.cnds.OnAllKeyNamesLoaded, r)
				}
			})
		}, p.acts = new s, n.prototype.ItemValue = function(t) {
			t.set_any(o)
		}, n.prototype.Key = function(t) {
			t.set_string(a)
		}, n.prototype.KeyCount = function(t) {
			t.set_int(h.length)
		}, n.prototype.KeyAt = function(t, e) {
			return e = Math.floor(e), 0 > e || e >= h.length ? void t.set_string("") : void t.set_string(h[e])
		}, n.prototype.ErrorMessage = function(t) {
			t.set_string(c)
		}, p.exps = new n
	}(), cr.plugins_.MagiCam = function(t) {
		this.runtime = t
	},
	function() {
		function t(t, e, i, r, s, n) {
			this.type = t, this.duration = e, this.param1 = i, this.param2 = r, this.param3 = s, this.param4 = n, this.progress = 0
		}

		function e(t, e, i, r, s) {
			this.global = s, this.name = t, this.x = e, this.y = i, this.scale = r, this.following = !1, this.followedObjects = [], this.followedObjectUIDs = [], this.objectWeights = [], this.followedObjectIPs = [], this.followLag = 1, this.zoomToContain = !1, this.zoomMarginH = 0, this.zoomMarginV = 0, this.zoomBoundU = -1, this.zoomBoundL = -1, this.transitions = [], this.moveTransFinished = !1, this.zoomTransFinished = !1, this.isShaking = !1, this.shakeX = 0, this.shakeY = 0, this.shakeZoom = 0, this.shakeTimer = 0, this.shakeStrength = 0, this.shakeMaxDeviation = 0, this.shakeMaxZoomDeviation = 0, this.shakeLength = 0, this.shakeBuildTime = 0, this.shakeDropTime = 0
		}

		function i() {}

		function r() {}

		function s() {}
		var n = {};
		n.lerp = function(t, e, i) {
			return t + (e - t) * i
		}, n.cubic = function(t, e, i, r, s) {
			return this.lerp(this.lerp(this.lerp(t, e, s), this.lerp(e, i, s), s), this.lerp(this.lerp(e, i, s), this.lerp(i, r, s), s), s)
		}, n.clamp = function(t, e, i) {
			return e > t ? e : t > i ? i : t
		}, e.prototype.GetName = function() {
			return this.name
		}, e.prototype.GetX = function() {
			return this.x
		}, e.prototype.SetX = function(t) {
			this.x = t
		}, e.prototype.GetY = function() {
			return this.y
		}, e.prototype.SetY = function(t) {
			this.y = t
		}, e.prototype.GetShakeX = function() {
			return this.shakeX
		}, e.prototype.GetShakeY = function() {
			return this.shakeY
		}, e.prototype.SetFollowedObject = function(t) {
			this.followedObject = t
		}, e.prototype.ShakeCamera = function(t) {
			if (this.isShaking)
				if (this.shakeTimer += t, this.shakeTimer < this.shakeLength) {
					var e = 0;
					e = this.shakeTimer < this.shakeBuildTime ? n.lerp(0, this.shakeStrength, this.shakeTimer / this.shakeBuildTime) : this.shakeStrength, this.shakeTimer > this.shakeDropTime && (e = n.lerp(this.shakeStrength, 0, (this.shakeTimer - this.shakeDropTime) / (this.shakeLength - this.shakeDropTime)));
					var i = Math.floor(361 * Math.random()) / 57.2958,
						r = n.lerp(0, Math.cos(i) * this.shakeMaxDeviation, e),
						s = n.lerp(0, Math.sin(i) * this.shakeMaxDeviation, e),
						a = n.lerp(0, Math.floor(201 * Math.random() - 100) / 100 * this.shakeMaxZoomDeviation, e);
					this.shakeX = n.lerp(this.shakeX, r, e), this.shakeY = n.lerp(this.shakeY, s, e), this.shakeZoom = n.lerp(this.shakeZoom, a, e)
				} else this.isShaking = !1, this.shakeX = 0, this.shakeY = 0, this.shakeZoom = 0
		}, e.prototype.ProcessTransitions = function(t) {
			this.moveTransFinished = !1, this.zoomTransFinished = !1;
			for (var e, i = 0; i < this.transitions.length;) e = this.transitions[i], e.progress = n.clamp(e.progress + 1 / e.duration * t, 0, 1), "MOVE" == e.type ? (this.x = n.cubic(e.param3, e.param3, e.param1, e.param1, e.progress), this.y = n.cubic(e.param4, e.param4, e.param2, e.param2, e.progress)) : "SCALE" == e.type && (this.scale = n.cubic(e.param2, e.param2, e.param1, e.param1, e.progress)), 1 == e.progress ? ("MOVE" == e.type ? this.moveTransFinished = !0 : "SCALE" == e.type && (this.zoomTransFinished = !0), this.transitions.splice(i, 1)) : i++
		}, e.prototype.UpdateCameraTarget = function(t, e) {
			for (var i = 0; i < this.transitions.length; i++) {
				var r = this.transitions[i];
				"MOVE" == r.type ? (r.param1 = e.GetX(), r.param2 = e.GetY()) : "SCALE" == r.type && (r.param1 = e.scale)
			}
		}, e.prototype.ProcessFollowing = function(t, e, i, r) {
			var s = this.followedObjects,
				a = this.followedObjectIPs;
			if (this.following && s.length > 0) {
				var o = 0,
					h = 0,
					c = 0;
				if (this.zoomToContain) {
					for (var l = 0, u = 0, p = 0, d = 0, f = !1, g = !1, m = !1, y = !1, _ = 0; _ < s.length; _++) {
						var v = s[_];
						v.update_bbox(), f ? l = Math.min(l, v.bbox.left) : (l = v.bbox.left, f = !0), g ? u = Math.max(u, v.bbox.right) : (u = v.bbox.right, g = !0), m ? p = Math.min(p, v.bbox.top) : (p = v.bbox.top, m = !0), y ? d = Math.max(d, v.bbox.bottom) : (d = v.bbox.bottom, y = !0)
					}
					var b = (e - 2 * this.zoomMarginH) / (u - l),
						w = (i - 2 * this.zoomMarginV) / (d - p);
					o = n.lerp(l, u, .5), h = n.lerp(p, d, .5), this.x < e / 2 / b && (b = (e - this.zoomMarginH) / u, o = e / b / 2), this.x > r.width - e / 2 / b && (b = (e - this.zoomMarginH) / (r.width - l), o = r.width - e / b / 2), this.y < i / 2 / w && (w = (i - this.zoomMarginV) / d, h = i / w / 2), this.y > r.height - i / 2 / w && (w = (i - this.zoomMarginV) / (r.height - p), h = r.height - i / w / 2), c = Math.min(b, w), -1 != this.zoomBoundL && c < this.zoomBoundL && (c = this.zoomBoundL), -1 != this.zoomBoundU && c > this.zoomBoundU && (c = this.zoomBoundU)
				} else {
					for (var x = 0, S = 0, T = 0, _ = 0; _ < s.length; _++) x += s[_].getImagePoint(a[_], !0) * this.objectWeights[_], S += s[_].getImagePoint(a[_], !1) * this.objectWeights[_], T += this.objectWeights[_];
					o = x / T, h = S / T
				}
				if (1 == this.followLag) this.x = o, this.y = h, this.zoomToContain && (this.scale = c);
				else {
					var C = 4 * this.followLag * t * Math.sqrt(1 / t);
					this.x = n.lerp(this.x, o, C), this.y = n.lerp(this.y, h, C), this.zoomToContain && (this.scale = n.lerp(this.scale, c, C))
				}
			}
		};
		var a = cr.plugins_.MagiCam.prototype;
		a.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var o = a.Type.prototype;
		o.onCreate = function() {}, a.Instance = function(t) {
			this.type = t, this.runtime = t.runtime, this.localCameras = [], this.localCameraCount = 0, this.localCameraCountOld = 0, this.transCamera = null, this.transTarget = null, this.isSwitchingCameras = !1, this.globalCameras = [], this.activeCamera = null
		};
		var h = a.Instance.prototype;
		h.onCreate = function() {
			this.runtime.tickMe(this), this.my_timescale = -1
		}, h.saveToJSON = function() {
			null != this.transCamera && this.localCameras.push(this.transCamera);
			for (var t = {
					lcc: this.localCameraCount,
					olcc: this.localCameraCountOld,
					alcc: this.localCameras.length,
					agcc: this.globalCameras.length,
					tcnn: null == this.transCamera ? !1 : !0
				}, e = 0; e < this.localCameras.length; e++) {
				t["lc" + e + "g"] = this.localCameras[e].global, t["lc" + e + "n"] = this.localCameras[e].name, t["lc" + e + "x"] = this.localCameras[e].x, t["lc" + e + "y"] = this.localCameras[e].y, t["lc" + e + "s"] = this.localCameras[e].scale, t["lc" + e + "f"] = this.localCameras[e].following, t["lc" + e + "foc"] = this.localCameras[e].followedObjects.length;
				for (var i = 0; i < this.localCameras[e].followedObjects.length; i++) t["lc" + e + "fo" + i] = this.localCameras[e].followedObjects[i].uid;
				for (var r = 0; r < this.localCameras[e].objectWeights.length; r++) t["lc" + e + "fow" + r] = this.localCameras[e].objectWeights[r];
				for (var s = 0; s < this.localCameras[e].followedObjectIPs.length; s++) t["lc" + e + "foip" + s] = this.localCameras[e].followedObjectIPs[s];
				t["lc" + e + "fl"] = this.localCameras[e].followLag, t["lc" + e + "ztc"] = this.localCameras[e].zoomToContain, t["lc" + e + "zmh"] = this.localCameras[e].zoomMarginH, t["lc" + e + "zmv"] = this.localCameras[e].zoomMarginV, t["lc" + e + "zbu"] = this.localCameras[e].zoomBoundU, t["lc" + e + "zbl"] = this.localCameras[e].zoomBoundL, t["lc" + e + "tc"] = this.localCameras[e].transitions.length;
				for (var n = 0; n < this.localCameras[e].transitions.length; n++) t["lc" + e + "t" + n + "tp"] = this.localCameras[e].transitions[n].type, t["lc" + e + "t" + n + "d"] = this.localCameras[e].transitions[n].duration, t["lc" + e + "t" + n + "p1"] = this.localCameras[e].transitions[n].param1, t["lc" + e + "t" + n + "p2"] = this.localCameras[e].transitions[n].param2, t["lc" + e + "t" + n + "p3"] = this.localCameras[e].transitions[n].param3, t["lc" + e + "t" + n + "p4"] = this.localCameras[e].transitions[n].param4, t["lc" + e + "t" + n + "pr"] = this.localCameras[e].transitions[n].progress;
				t["lc" + e + "mtf"] = this.localCameras[e].moveTransFinished, t["lc" + e + "ztf"] = this.localCameras[e].zoomTransFinished, t["lc" + e + "csis"] = this.localCameras[e].isShaking, t["lc" + e + "cssx"] = this.localCameras[e].shakeX, t["lc" + e + "cssy"] = this.localCameras[e].shakeY, t["lc" + e + "cssz"] = this.localCameras[e].shakeZoom, t["lc" + e + "csst"] = this.localCameras[e].shakeTimer, t["lc" + e + "csss"] = this.localCameras[e].shakeStrength, t["lc" + e + "cssmd"] = this.localCameras[e].shakeMaxDeviation, t["lc" + e + "cssmzd"] = this.localCameras[e].shakeMaxZoomDeviation, t["lc" + e + "cssl"] = this.localCameras[e].shakeLength, t["lc" + e + "cssbt"] = this.localCameras[e].shakeBuildTime, t["lc" + e + "cssdt"] = this.localCameras[e].shakeDropTime
			}
			for (var e = 0; e < this.globalCameras.length; e++) {
				t["gc" + e + "g"] = this.globalCameras[e].global, t["gc" + e + "n"] = this.globalCameras[e].name, t["gc" + e + "x"] = this.globalCameras[e].x, t["gc" + e + "y"] = this.globalCameras[e].y, t["gc" + e + "s"] = this.globalCameras[e].scale, t["gc" + e + "f"] = this.globalCameras[e].following, t["gc" + e + "foc"] = this.globalCameras[e].followedObjects.length;
				for (var i = 0; i < this.globalCameras[e].followedObjects.length; i++) t["gc" + e + "fo" + i] = this.globalCameras[e].followedObjects[i].uid;
				for (var r = 0; r < this.globalCameras[e].objectWeights.length; r++) t["gc" + e + "fow" + r] = this.globalCameras[e].objectWeights[r];
				for (var s = 0; s < this.globalCameras[e].followedObjectIPs.length; s++) t["gc" + e + "foip" + s] = this.globalCameras[e].followedObjectIPs[s];
				t["gc" + e + "fl"] = this.globalCameras[e].followLag, t["gc" + e + "ztc"] = this.globalCameras[e].zoomToContain, t["gc" + e + "zmh"] = this.globalCameras[e].zoomMarginH, t["gc" + e + "zmv"] = this.globalCameras[e].zoomMarginV, t["gc" + e + "zbu"] = this.globalCameras[e].zoomBoundU, t["gc" + e + "zbl"] = this.globalCameras[e].zoomBoundL, t["gc" + e + "tc"] = this.globalCameras[e].transitions.length;
				for (var n = 0; n < this.globalCameras[e].transitions.length; n++) t["gc" + e + "t" + n + "tp"] = this.globalCameras[e].transitions[n].type, t["gc" + e + "t" + n + "d"] = this.globalCameras[e].transitions[n].duration, t["gc" + e + "t" + n + "p1"] = this.globalCameras[e].transitions[n].param1, t["gc" + e + "t" + n + "p2"] = this.globalCameras[e].transitions[n].param2, t["gc" + e + "t" + n + "p3"] = this.globalCameras[e].transitions[n].param3, t["gc" + e + "t" + n + "p4"] = this.globalCameras[e].transitions[n].param4;
				t["gc" + e + "mtf"] = this.globalCameras[e].moveTransFinished, t["gc" + e + "ztf"] = this.globalCameras[e].zoomTransFinished, t["gc" + e + "csis"] = this.globalCameras[e].isShaking, t["gc" + e + "cssx"] = this.globalCameras[e].shakeX, t["gc" + e + "cssy"] = this.globalCameras[e].shakeY, t["gc" + e + "cssz"] = this.globalCameras[e].shakeZoom, t["gc" + e + "csst"] = this.globalCameras[e].shakeTimer, t["gc" + e + "csss"] = this.globalCameras[e].shakeStrength, t["gc" + e + "cssmd"] = this.globalCameras[e].shakeMaxDeviation, t["gc" + e + "cssmzd"] = this.globalCameras[e].shakeMaxZoomDeviation, t["gc" + e + "cssl"] = this.globalCameras[e].shakeLength, t["gc" + e + "cssbt"] = this.globalCameras[e].shakeBuildTime, t["gc" + e + "cssdt"] = this.globalCameras[e].shakeDropTime
			}
			return t.ac = null != this.activeCamera ? this.activeCamera.name : "null", null != this.transTarget && (t.tt = this.transTarget.name), t
		}, h.loadFromJSON = function(i) {
			this.localCameras = [], this.globalCameras = [], this.localCameraCount = i.lcc, this.localCameraCountOld = i.olcc;
			for (var r = i.alcc, s = 0; r > s; s++) {
				var n = new e("", 0, 0, 0, !1);
				n.global = i["lc" + s + "g"], n.name = i["lc" + s + "n"], n.x = i["lc" + s + "x"], n.y = i["lc" + s + "y"], n.scale = i["lc" + s + "s"], n.following = i["lc" + s + "f"];
				for (var a = i["lc" + s + "foc"], o = 0; a > o; o++) n.followedObjectUIDs.push(i["lc" + s + "fo" + o]);
				for (var h = 0; a > h; h++) n.objectWeights.push(i["lc" + s + "fow" + h]);
				for (var c = 0; a > c; c++) n.followedObjectIPs.push(i["lc" + s + "foip" + c]);
				n.followLag = i["lc" + s + "fl"], n.zoomToContain = i["lc" + s + "ztc"], n.zoomMarginH = i["lc" + s + "zmh"], n.zoomMarginV = i["lc" + s + "zmv"], n.zoomBoundU = i["lc" + s + "zbu"], n.zoomBoundL = i["lc" + s + "zbl"];
				for (var l = i["lc" + s + "tc"], u = 0; l > u; u++) {
					var p = new t("", 0, 0, 0, 0);
					p.type = i["lc" + s + "t" + u + "tp"], p.duration = i["lc" + s + "t" + u + "d"], p.param1 = i["lc" + s + "t" + u + "p1"], p.param2 = i["lc" + s + "t" + u + "p2"], p.param3 = i["lc" + s + "t" + u + "p3"], p.param4 = i["lc" + s + "t" + u + "p4"], p.progress = i["lc" + s + "t" + u + "pr"], n.transitions.push(p)
				}
				n.moveTransFinished = i["lc" + s + "mtf"], n.zoomTransFinished = i["lc" + s + "ztf"], n.isShaking = i["lc" + s + "csis"], n.shakeX = i["lc" + s + "cssx"], n.shakeY = i["lc" + s + "cssy"], n.shakeZoom = i["lc" + s + "cssz"], n.shakeTimer = i["lc" + s + "csst"], n.shakeStrength = i["lc" + s + "csss"], n.shakeMaxDeviation = i["lc" + s + "cssmd"], n.shakeMaxZoomDeviation = i["lc" + s + "cssmzd"], n.shakeLength = i["lc" + s + "cssl"], n.shakeBuildTime = i["lc" + s + "cssbt"], n.shakeDropTime = i["lc" + s + "cssdt"], this.localCameras.push(n)
			}
			for (var d = i.agcc, s = 0; d > s; s++) {
				var n = new e("", 0, 0, 0, !1);
				n.global = i["gc" + s + "g"], n.name = i["gc" + s + "n"], n.x = i["gc" + s + "x"], n.y = i["gc" + s + "y"], n.scale = i["gc" + s + "s"], n.following = i["gc" + s + "f"];
				for (var a = i["gc" + s + "foc"], o = 0; a > o; o++) n.followedObjectUIDs.push(i["gc" + s + "fo" + o]);
				for (var h = 0; a > h; h++) n.objectWeights.push(i["gc" + s + "fow" + h]);
				for (var c = 0; a > c; c++) n.followedObjectIPs.push(i["gc" + s + "foip" + c]);
				n.followLag = i["gc" + s + "fl"], n.zoomToContain = i["gc" + s + "ztc"], n.zoomMarginH = i["gc" + s + "zmh"], n.zoomMarginV = i["gc" + s + "zmv"], n.zoomBoundU = i["gc" + s + "zbu"], n.zoomBoundL = i["gc" + s + "zbl"];
				for (var l = i["gc" + s + "tc"], u = 0; l > u; u++) {
					var p = new t("", 0, 0, 0, 0);
					p.type = i["gc" + s + "t" + u + "tp"], p.duration = i["gc" + s + "t" + u + "d"], p.param1 = i["gc" + s + "t" + u + "p1"], p.param2 = i["gc" + s + "t" + u + "p2"], p.param3 = i["gc" + s + "t" + u + "p3"], p.param4 = i["gc" + s + "t" + u + "p4"], n.transitions.push(p)
				}
				n.moveTransFinished = i["gc" + s + "mtf"], n.zoomTransFinished = i["gc" + s + "ztf"], n.isShaking = i["gc" + s + "csis"], n.shakeX = i["gc" + s + "cssx"], n.shakeY = i["gc" + s + "cssy"], n.shakeZoom = i["gc" + s + "cssz"], n.shakeTimer = i["gc" + s + "csst"], n.shakeStrength = i["gc" + s + "csss"], n.shakeMaxDeviation = i["gc" + s + "cssmd"], n.shakeMaxZoomDeviation = i["gc" + s + "cssmzd"], n.shakeLength = i["gc" + s + "cssl"], n.shakeBuildTime = i["gc" + s + "cssbt"], n.shakeDropTime = i["gc" + s + "cssdt"], this.globalCameras.push(n)
			}
			var f = i.ac;
			this.activeCamera = "null" == f ? null : this.GetCamera(f);
			var g = i.tcnn;
			g && (this.transCamera = this.localCameras.pop(), this.transTarget = this.GetCamera(i.tt))
		}, h.afterLoad = function() {
			for (var t = 0; t < this.localCameras.length; t++)
				for (var e = 0; e < this.localCameras[t].followedObjectUIDs.length; e++) this.localCameras[t].followedObjects.push(this.runtime.getObjectByUID(this.localCameras[t].followedObjectUIDs[e]));
			for (var t = 0; t < this.globalCameras.length; t++)
				for (var e = 0; e < this.globalCameras[t].followedObjectUIDs.length; e++) this.globalCameras[t].followedObjects.push(this.runtime.getObjectByUID(this.globalCameras[t].followedObjectUIDs[e]))
		}, h.onLayoutChange = function() {
			for (var t = 0; t < this.localCameraCountOld; t++) this.localCameras.shift();
			this.localCameraCount -= this.localCameraCountOld
		}, h.tick = function() {
			this.localCameraCountOld = this.localCameraCount;
			var t = this.runtime.getDt(this);
			0 == t && (t = .1);
			for (var e = 0; e < this.globalCameras.length; e++) this.globalCameras[e].ProcessTransitions(t), this.globalCameras[e].ProcessFollowing(t, this.runtime.original_width, this.runtime.original_height, this.runtime.running_layout), this.globalCameras[e].ShakeCamera(t);
			for (var e = 0; e < this.localCameras.length; e++) this.localCameras[e].ProcessTransitions(t), this.localCameras[e].ProcessFollowing(t, this.runtime.original_width, this.runtime.original_height, this.runtime.running_layout), this.localCameras[e].ShakeCamera(t);
			null != this.transCamera && (this.transCamera.UpdateCameraTarget(t, this.transTarget), this.transCamera.ProcessTransitions(t), this.transCamera.moveTransFinished && (this.activeCamera = this.transTarget, this.transCamera = null)), null != this.activeCamera && (this.runtime.running_layout.scrollToX(this.activeCamera.GetX() + this.activeCamera.GetShakeX()), this.runtime.running_layout.scrollToY(this.activeCamera.GetY() + this.activeCamera.GetShakeY()), this.runtime.running_layout.scale = this.activeCamera.scale + this.activeCamera.shakeZoom, this.runtime.redraw = !0)
		}, h.draw = function() {}, h.drawGL = function() {}, h.GetCamera = function(t) {
			if ("" == t) return this.activeCamera;
			for (var e = this.globalCameras.length - 1; e >= 0; e--)
				if (this.globalCameras[e].GetName() == t) return this.globalCameras[e];
			for (var e = this.localCameras.length - 1; e >= 0; e--)
				if (this.localCameras[e].GetName() == t) return this.localCameras[e];
			return null
		}, i.prototype.TransitionFinished = function(t, e) {
			var i = this.GetCamera(t);
			if (null != i) {
				if (0 == e) return i.moveTransFinished;
				if (1 == e) return i.zoomTransFinished
			}
			return !1
		}, i.prototype.TransitionIsInProgress = function(t, e) {
			var i = this.GetCamera(t);
			if (null != i)
				for (var r = 0; r < i.transitions.length; r++) {
					if ("MOVE" == i.transitions[r].type && 0 == e) return !0;
					if ("SCALE" == i.transitions[r].type && 1 == e) return !0
				}
			return !1
		}, a.cnds = new i, r.prototype.FollowObject = function(t, e, i, r) {
			if (e) {
				var s = this.GetCamera(t);
				if (null != s) {
					var n = e.getFirstPicked();
					if (s.global && !e.global) return void alert("MagiCam:\n\nObject not global - global cameras must follow global objects.");
					s.followedObjects.push(n), s.objectWeights.push(i), s.followedObjectIPs.push(r)
				}
			}
		}, r.prototype.SetFollowLag = function(t, e) {
			var i = this.GetCamera(t);
			null != i && (i.followLag = 1 - e / 100)
		}, r.prototype.ZoomToContain = function(t, e, i, r, s, n) {
			var a = this.GetCamera(t);
			null != a && (0 == e ? (a.zoomToContain = !0, a.zoomMarginH = i, a.zoomMarginV = r, a.zoomBoundU = s, a.zoomBoundL = n) : a.zoomToContain = !1)
		}, r.prototype.EnableFollowing = function(t, e) {
			var i = this.GetCamera(t);
			null != i && (i.following = 0 == e ? !0 : !1)
		}, r.prototype.UnfollowObject = function(t, e) {
			if (e) {
				var i = this.GetCamera(t);
				if (null != i)
					for (var r = e.getFirstPicked(), s = 0; s < i.followedObjects.length; s++)
						if (i.followedObjects[s] == r) {
							i.followedObjects.splice(s, 1);
							break
						}
			}
		}, r.prototype.CreateLocalCamera = function(t, i, r, s, n) {
			return "" == t ? void alert("Camera name must not be blank.") : (this.localCameras.push(new e(t, i, r, s, !1)), this.localCameraCount++, void(1 == n && (this.activeCamera = this.localCameras[this.localCameras.length - 1], this.runtime.running_layout.scale = this.activeCamera.scale)))
		}, r.prototype.CreateGlobalCamera = function(t, i, r, s, n) {
			return "" == t ? void alert("Camera name must not be blank.") : void(null == this.GetCamera(t) && (this.globalCameras.push(new e(t, i, r, s, !0)), 1 == n && (this.activeCamera = this.globalCameras[this.globalCameras.length - 1], this.runtime.running_layout.scrollToX(this.activeCamera.GetX()), this.runtime.running_layout.scrollToY(this.activeCamera.GetY()), this.runtime.running_layout.scale = this.activeCamera.scale)))
		}, r.prototype.SetActiveCamera = function(t) {
			var e = this.GetCamera(t);
			null != e && (this.activeCamera = e, this.runtime.running_layout.scrollToX(e.GetX()), this.runtime.running_layout.scrollToY(e.GetY()), this.runtime.running_layout.scale = e.scale)
		}, r.prototype.SetScrollSmoothing = function() {}, r.prototype.SetXPosition = function(t, e) {
			var i = this.GetCamera(t);
			null != i && i.SetX(e)
		}, r.prototype.SetYPosition = function(t, e) {
			var i = this.GetCamera(t);
			null != i && i.SetY(e)
		}, r.prototype.SetPosition = function(t, e, i) {
			var r = this.GetCamera(t);
			null != r && (r.SetX(e), r.SetY(i))
		}, r.prototype.SetZoom = function(t, e) {
			var i = this.GetCamera(t);
			null != i && (i.scale = e)
		}, r.prototype.TransitionToPoint = function(e, i, r, s) {
			var n = this.GetCamera(e);
			if (null != n) {
				for (var a = 0; a < n.transitions.length; a++)
					if ("MOVE" == n.transitions[a].type) {
						n.transitions.splice(a, 1);
						break
					}
				n.transitions.push(new t("MOVE", s, i, r, n.GetX(), n.GetY())), n.following = !1, n.zoomToContain = !1
			}
		}, r.prototype.TransitionToZoom = function(e, i, r) {
			var s = this.GetCamera(e);
			if (null != s) {
				for (var n = 0; n < s.transitions.length; n++)
					if ("SCALE" == s.transitions[n].type) {
						s.transitions.splice(n, 1);
						break
					}
				s.transitions.push(new t("SCALE", r, i, s.scale, null, null)), s.zoomToContain = !1
			}
		}, r.prototype.TransitionToCamera = function(i, r) {
			var s = this.GetCamera(i);
			null != s && (this.transTarget = s, this.transCamera = new e("transCamera", this.activeCamera.GetX(), this.activeCamera.GetY(), this.activeCamera.scale, !1), this.transCamera.transitions.push(new t("MOVE", r, this.transTarget.GetX(), this.transTarget.GetY(), this.transCamera.GetX(), this.transCamera.GetY())), this.transCamera.transitions.push(new t("SCALE", r, this.transTarget.scale, this.transCamera.scale, null, null)), this.activeCamera = this.transCamera, this.isSwitchingCameras = !0)
		}, r.prototype.ShakeCamera = function(t, e, i, r, s, n, a) {
			var o = this.GetCamera(t);
			null != o && (o.isShaking = !0, o.shakeStrength = e / 100, o.shakeMaxDeviation = i, o.shakeMaxZoomDeviation = r, o.shakeBuildTime = s, o.shakeDropTime = n, o.shakeLength = a, o.shakeTimer = 0)
		}, a.acts = new r, s.prototype.MovementTransitionProgress = function(t, e) {
			var i = this.GetCamera(e);
			if (null != i)
				for (var r = 0; r < i.transitions.length; r++)
					if ("MOVE" == i.transitions[r].type) return void t.set_float(i.transitions[r].progress);
			t.set_float(0)
		}, s.prototype.ZoomTransitionProgress = function(t, e) {
			var i = this.GetCamera(e);
			if (null != i)
				for (var r = 0; r < i.transitions.length; r++)
					if ("SCALE" == i.transitions[r].type) return void t.set_float(i.transitions[r].progress);
			t.set_float(0)
		}, s.prototype.GetX = function(t, e) {
			var i = this.GetCamera(e);
			return null != i ? void t.set_float(i.x) : void t.set_float(0)
		}, s.prototype.GetY = function(t, e) {
			var i = this.GetCamera(e);
			return null != i ? void t.set_float(i.y) : void t.set_float(0)
		}, s.prototype.GetZoom = function(t, e) {
			var i = this.GetCamera(e);
			return null != i ? void t.set_float(i.scale) : void t.set_float(0)
		}, s.prototype.GetActiveCamera = function(t) {
			return null != this.activeCamera ? void t.set_string(this.activeCamera.name) : void t.set_string("null")
		}, a.exps = new s
	}(), cr.plugins_.Mouse = function(t) {
		this.runtime = t
	},
	function() {
		function t() {}

		function e() {}

		function i() {}
		var r = cr.plugins_.Mouse.prototype;
		r.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var s = r.Type.prototype;
		s.onCreate = function() {}, r.Instance = function(t) {
			this.type = t, this.runtime = t.runtime, this.buttonMap = new Array(4), this.mouseXcanvas = 0, this.mouseYcanvas = 0, this.triggerButton = 0, this.triggerType = 0, this.triggerDir = 0, this.handled = !1
		};
		var n = r.Instance.prototype;
		n.onCreate = function() {
			var t = this;
			if (!this.runtime.isDomFree) {
				jQuery(document).mousemove(function(e) {
					t.onMouseMove(e)
				}), jQuery(document).mousedown(function(e) {
					t.onMouseDown(e)
				}), jQuery(document).mouseup(function(e) {
					t.onMouseUp(e)
				}), jQuery(document).dblclick(function(e) {
					t.onDoubleClick(e)
				});
				var e = function(e) {
					t.onWheel(e)
				};
				document.addEventListener("mousewheel", e, !1), document.addEventListener("DOMMouseScroll", e, !1)
			}
		};
		var a = {
			left: 0,
			top: 0
		};
		n.onMouseMove = function(t) {
			var e = this.runtime.isDomFree ? a : jQuery(this.runtime.canvas).offset();
			this.mouseXcanvas = t.pageX - e.left, this.mouseYcanvas = t.pageY - e.top
		}, n.mouseInGame = function() {
			return this.runtime.fullscreen_mode > 0 ? !0 : this.mouseXcanvas >= 0 && this.mouseYcanvas >= 0 && this.mouseXcanvas < this.runtime.width && this.mouseYcanvas < this.runtime.height
		}, n.onMouseDown = function(t) {
			this.mouseInGame() && (this.buttonMap[t.which] = !0, this.runtime.isInUserInputEvent = !0, this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnAnyClick, this), this.triggerButton = t.which - 1, this.triggerType = 0, this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this), this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this), this.runtime.isInUserInputEvent = !1)
		}, n.onMouseUp = function(t) {
			this.buttonMap[t.which] && (this.runtime.had_a_click && !this.runtime.isMobile && t.preventDefault(), this.runtime.had_a_click = !0, this.buttonMap[t.which] = !1, this.runtime.isInUserInputEvent = !0, this.triggerButton = t.which - 1, this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnRelease, this), this.runtime.isInUserInputEvent = !1)
		}, n.onDoubleClick = function(t) {
			this.mouseInGame() && (t.preventDefault(), this.runtime.isInUserInputEvent = !0, this.triggerButton = t.which - 1, this.triggerType = 1, this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this), this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this), this.runtime.isInUserInputEvent = !1)
		}, n.onWheel = function(t) {
			var e = t.wheelDelta ? t.wheelDelta : t.detail ? -t.detail : 0;
			this.triggerDir = 0 > e ? 0 : 1, this.handled = !1, this.runtime.isInUserInputEvent = !0, this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnWheel, this), this.runtime.isInUserInputEvent = !1, this.handled && cr.isCanvasInputEvent(t) && t.preventDefault()
		}, t.prototype.OnClick = function(t, e) {
			return t === this.triggerButton && e === this.triggerType
		}, t.prototype.OnAnyClick = function() {
			return !0
		}, t.prototype.IsButtonDown = function(t) {
			return this.buttonMap[t + 1]
		}, t.prototype.OnRelease = function(t) {
			return t === this.triggerButton
		}, t.prototype.IsOverObject = function(t) {
			var e = this.runtime.getCurrentCondition(),
				i = this.mouseXcanvas,
				r = this.mouseYcanvas;
			return cr.xor(this.runtime.testAndSelectCanvasPointOverlap(t, i, r, e.inverted), e.inverted)
		}, t.prototype.OnObjectClicked = function(t, e, i) {
			return t !== this.triggerButton || e !== this.triggerType ? !1 : this.runtime.testAndSelectCanvasPointOverlap(i, this.mouseXcanvas, this.mouseYcanvas, !1)
		}, t.prototype.OnWheel = function(t) {
			return this.handled = !0, t === this.triggerDir
		}, r.cnds = new t;
		var o = null;
		e.prototype.SetCursor = function(t) {
			var e = ["auto", "pointer", "text", "crosshair", "move", "help", "wait", "none"][t];
			o !== e && (o = e, this.runtime.canvas && this.runtime.canvas.style && (this.runtime.canvas.style.cursor = e))
		}, e.prototype.SetCursorSprite = function(t) {
			if (!this.runtime.isDomFree && !this.runtime.isMobile && t) {
				var e = t.getFirstPicked();
				if (e && e.curFrame) {
					var i = e.curFrame;
					if (o !== i) {
						o = i;
						var r = i.getDataUri(),
							s = "url(" + r + ") " + Math.round(i.hotspotX * i.width) + " " + Math.round(i.hotspotY * i.height) + ", auto";
						jQuery(this.runtime.canvas).css("cursor", s)
					}
				}
			}
		}, r.acts = new e, i.prototype.X = function(t, e) {
			var i, r, s, n, a;
			cr.is_undefined(e) ? (i = this.runtime.getLayerByNumber(0), r = i.scale, s = i.zoomRate, n = i.parallaxX, a = i.angle, i.scale = 1, i.zoomRate = 1, i.parallaxX = 1, i.angle = 0, t.set_float(i.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, !0)), i.scale = r, i.zoomRate = s, i.parallaxX = n, i.angle = a) : (i = cr.is_number(e) ? this.runtime.getLayerByNumber(e) : this.runtime.getLayerByName(e), t.set_float(i ? i.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, !0) : 0))
		}, i.prototype.Y = function(t, e) {
			var i, r, s, n, a;
			cr.is_undefined(e) ? (i = this.runtime.getLayerByNumber(0), r = i.scale, s = i.zoomRate, n = i.parallaxY, a = i.angle, i.scale = 1, i.zoomRate = 1, i.parallaxY = 1, i.angle = 0, t.set_float(i.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, !1)), i.scale = r, i.zoomRate = s, i.parallaxY = n, i.angle = a) : (i = cr.is_number(e) ? this.runtime.getLayerByNumber(e) : this.runtime.getLayerByName(e), t.set_float(i ? i.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, !1) : 0))
		}, i.prototype.AbsoluteX = function(t) {
			t.set_float(this.mouseXcanvas)
		}, i.prototype.AbsoluteY = function(t) {
			t.set_float(this.mouseYcanvas)
		}, r.exps = new i
	}(), cr.plugins_.Sprite = function(t) {
		this.runtime = t
	},
	function() {
		function t() {
			if (0 === this.datauri.length) {
				var t = document.createElement("canvas");
				t.width = this.width, t.height = this.height;
				var e = t.getContext("2d");
				this.spritesheeted ? e.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height, 0, 0, this.width, this.height) : e.drawImage(this.texture_img, 0, 0, this.width, this.height), this.datauri = t.toDataURL("image/png")
			}
			return this.datauri
		}

		function e() {}

		function i() {
			return m.length ? m.pop() : [0, 0, 0]
		}

		function r(t) {
			t[0] = 0, t[1] = 0, t[2] = 0, m.push(t)
		}

		function s(t, e) {
			return e > t ? "" + t + "," + e : "" + e + "," + t
		}

		function n(t, e, r, n) {
			var a = e.uid,
				o = r.uid,
				h = s(a, o);
			if (t.hasOwnProperty(h)) return void(t[h][2] = n);
			var c = i();
			c[0] = a, c[1] = o, c[2] = n, t[h] = c
		}

		function a(t, e, i) {
			var n = s(e.uid, i.uid);
			t.hasOwnProperty(n) && (r(t[n]), delete t[n])
		}

		function o(t, e) {
			var i, s, n = e.uid;
			for (i in t) t.hasOwnProperty(i) && (s = t[i], (s[0] === n || s[1] === n) && (r(t[i]), delete t[i]))
		}

		function h(t, e, i) {
			var r = s(e.uid, i.uid);
			return t.hasOwnProperty(r) ? (y = t[r][2], !0) : (y = -2, !1)
		}

		function c(t, e, i) {
			if (!t) return !1;
			var r, s, n, a, o, h, c = 0 !== e || 0 !== i,
				l = !1,
				u = this.runtime.getCurrentCondition(),
				p = u.type,
				d = u.inverted,
				f = t.getCurrentSol(),
				g = this.runtime.getCurrentEventStack().current_event.orblock;
			for (f.select_all ? (this.update_bbox(), S.copy(this.bbox), S.offset(e, i), this.runtime.getCollisionCandidates(this.layer, t, S, x), h = x) : h = g ? f.else_instances : f.instances, v = t, w = p !== t && !d, c && (r = this.x, s = this.y, this.x += e, this.y += i, this.set_bbox_changed()), n = 0, a = h.length; a > n; n++)
				if (o = h[n], this.runtime.testOverlap(this, o)) {
					if (l = !0, d) break;
					p !== t && b.add(o)
				}
			return c && (this.x = r, this.y = s, this.set_bbox_changed()), cr.clearArray(x), l
		}

		function l() {}

		function u() {}
		var p = cr.plugins_.Sprite.prototype;
		p.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var d = p.Type.prototype;
		d.onCreate = function() {
			if (!this.is_family) {
				var e, i, r, s, n, a, o, h, c, l;
				for (this.all_frames = [], this.has_loaded_textures = !1, e = 0, i = this.animations.length; i > e; e++) {
					for (n = this.animations[e], o = {}, o.name = n[0], o.speed = n[1], o.loop = n[2], o.repeatcount = n[3], o.repeatto = n[4], o.pingpong = n[5], o.sid = n[6], o.frames = [], r = 0, s = n[7].length; s > r; r++) a = n[7][r], h = {}, h.texture_file = a[0], h.texture_filesize = a[1], h.offx = a[2], h.offy = a[3], h.width = a[4], h.height = a[5], h.duration = a[6], h.hotspotX = a[7], h.hotspotY = a[8], h.image_points = a[9], h.poly_pts = a[10], h.pixelformat = a[11], h.spritesheeted = 0 !== h.width, h.datauri = "", h.getDataUri = t, l = {}, l.left = 0, l.top = 0, l.right = 1, l.bottom = 1, h.sheetTex = l, h.webGL_texture = null, c = this.runtime.findWaitingTexture(a[0]), c ? h.texture_img = c : (h.texture_img = new Image, h.texture_img.cr_src = a[0], h.texture_img.cr_filesize = a[1], h.texture_img.c2webGL_texture = null, this.runtime.waitForImageLoad(h.texture_img, a[0])), cr.seal(h), o.frames.push(h), this.all_frames.push(h);
					cr.seal(o), this.animations[e] = o
				}
			}
		}, d.updateAllCurrentTexture = function() {
			var t, e, i;
			for (t = 0, e = this.instances.length; e > t; t++) i = this.instances[t], i.curWebGLTexture = i.curFrame.webGL_texture
		}, d.onLostWebGLContext = function() {
			if (!this.is_family) {
				var t, e, i;
				for (t = 0, e = this.all_frames.length; e > t; ++t) i = this.all_frames[t], i.texture_img.c2webGL_texture = null, i.webGL_texture = null;
				this.has_loaded_textures = !1, this.updateAllCurrentTexture()
			}
		}, d.onRestoreWebGLContext = function() {
			if (!this.is_family && this.instances.length) {
				var t, e, i;
				for (t = 0, e = this.all_frames.length; e > t; ++t) i = this.all_frames[t], i.webGL_texture = this.runtime.glwrap.loadTexture(i.texture_img, !1, this.runtime.linearSampling, i.pixelformat);
				this.updateAllCurrentTexture()
			}
		}, d.loadTextures = function() {
			if (!this.is_family && !this.has_loaded_textures && this.runtime.glwrap) {
				var t, e, i;
				for (t = 0, e = this.all_frames.length; e > t; ++t) i = this.all_frames[t], i.webGL_texture = this.runtime.glwrap.loadTexture(i.texture_img, !1, this.runtime.linearSampling, i.pixelformat);
				this.has_loaded_textures = !0
			}
		}, d.unloadTextures = function() {
			if (!this.is_family && !this.instances.length && this.has_loaded_textures) {
				var t, e, i;
				for (t = 0, e = this.all_frames.length; e > t; ++t) i = this.all_frames[t], this.runtime.glwrap.deleteTexture(i.webGL_texture), i.webGL_texture = null;
				this.has_loaded_textures = !1
			}
		};
		var f = [];
		d.preloadCanvas2D = function(t) {
			var e, i, r;
			for (cr.clearArray(f), e = 0, i = this.all_frames.length; i > e; ++e) r = this.all_frames[e].texture_img, -1 === f.indexOf(r) && (t.drawImage(r, 0, 0), f.push(r))
		}, p.Instance = function(t) {
			this.type = t, this.runtime = t.runtime;
			var e = this.type.animations[0].frames[0].poly_pts;
			this.recycled ? this.collision_poly.set_pts(e) : this.collision_poly = new cr.CollisionPoly(e)
		};
		var g = p.Instance.prototype;
		g.onCreate = function() {
			this.visible = 0 === this.properties[0], this.isTicking = !1, this.inAnimTrigger = !1, this.collisionsEnabled = 0 !== this.properties[3], 1 === this.type.animations.length && 1 === this.type.animations[0].frames.length || 0 === this.type.animations[0].speed || (this.runtime.tickMe(this), this.isTicking = !0), this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0], this.cur_frame = this.properties[2], this.cur_frame < 0 && (this.cur_frame = 0), this.cur_frame >= this.cur_animation.frames.length && (this.cur_frame = this.cur_animation.frames.length - 1);
			var t = this.cur_animation.frames[this.cur_frame];
			this.collision_poly.set_pts(t.poly_pts), this.hotspotX = t.hotspotX, this.hotspotY = t.hotspotY, this.cur_anim_speed = this.cur_animation.speed, this.recycled ? this.animTimer.reset() : this.animTimer = new cr.KahanAdder, this.frameStart = this.getNowTime(), this.animPlaying = !0, this.animRepeats = 0, this.animForwards = !0, this.animTriggerName = "", this.changeAnimName = "", this.changeAnimFrom = 0, this.changeAnimFrame = -1, this.type.loadTextures();
			var e, i, r, s, n, a, o, h;
			for (e = 0, i = this.type.animations.length; i > e; e++)
				for (n = this.type.animations[e], r = 0, s = n.frames.length; s > r; r++) a = n.frames[r], 0 === a.width && (a.width = a.texture_img.width, a.height = a.texture_img.height), a.spritesheeted && (h = a.texture_img, o = a.sheetTex, o.left = a.offx / h.width, o.top = a.offy / h.height, o.right = (a.offx + a.width) / h.width, o.bottom = (a.offy + a.height) / h.height, 0 === a.offx && 0 === a.offy && a.width === h.width && a.height === h.height && (a.spritesheeted = !1));
			this.curFrame = this.cur_animation.frames[this.cur_frame], this.curWebGLTexture = this.curFrame.webGL_texture
		}, g.saveToJSON = function() {
			var t = {
				a: this.cur_animation.sid,
				f: this.cur_frame,
				cas: this.cur_anim_speed,
				fs: this.frameStart,
				ar: this.animRepeats,
				at: this.animTimer.sum
			};
			return this.animPlaying || (t.ap = this.animPlaying), this.animForwards || (t.af = this.animForwards), t
		}, g.loadFromJSON = function(t) {
			var e = this.getAnimationBySid(t.a);
			e && (this.cur_animation = e), this.cur_frame = t.f, this.cur_frame < 0 && (this.cur_frame = 0), this.cur_frame >= this.cur_animation.frames.length && (this.cur_frame = this.cur_animation.frames.length - 1), this.cur_anim_speed = t.cas, this.frameStart = t.fs, this.animRepeats = t.ar, this.animTimer.reset(), this.animTimer.sum = t.at, this.animPlaying = t.hasOwnProperty("ap") ? t.ap : !0, this.animForwards = t.hasOwnProperty("af") ? t.af : !0, this.curFrame = this.cur_animation.frames[this.cur_frame], this.curWebGLTexture = this.curFrame.webGL_texture, this.collision_poly.set_pts(this.curFrame.poly_pts), this.hotspotX = this.curFrame.hotspotX, this.hotspotY = this.curFrame.hotspotY
		}, g.animationFinish = function(t) {
			this.cur_frame = t ? 0 : this.cur_animation.frames.length - 1, this.animPlaying = !1, this.animTriggerName = this.cur_animation.name, this.inAnimTrigger = !0, this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this), this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this), this.inAnimTrigger = !1, this.animRepeats = 0
		}, g.getNowTime = function() {
			return this.animTimer.sum
		}, g.tick = function() {
			this.animTimer.add(this.runtime.getDt(this)), this.changeAnimName.length && this.doChangeAnim(), this.changeAnimFrame >= 0 && this.doChangeAnimFrame();
			var t, e = this.getNowTime(),
				i = this.cur_animation,
				r = i.frames[this.cur_frame],
				s = r.duration / this.cur_anim_speed;
			this.animPlaying && e >= this.frameStart + s && (this.animForwards ? this.cur_frame++ : this.cur_frame--, this.frameStart += s, this.cur_frame >= i.frames.length && (i.pingpong ? (this.animForwards = !1, this.cur_frame = i.frames.length - 2) : i.loop ? this.cur_frame = i.repeatto : (this.animRepeats++, this.animRepeats >= i.repeatcount ? this.animationFinish(!1) : this.cur_frame = i.repeatto)), this.cur_frame < 0 && (i.pingpong ? (this.cur_frame = 1, this.animForwards = !0, i.loop || (this.animRepeats++, this.animRepeats >= i.repeatcount && this.animationFinish(!0))) : i.loop ? this.cur_frame = i.repeatto : (this.animRepeats++, this.animRepeats >= i.repeatcount ? this.animationFinish(!0) : this.cur_frame = i.repeatto)), this.cur_frame < 0 ? this.cur_frame = 0 : this.cur_frame >= i.frames.length && (this.cur_frame = i.frames.length - 1), e > this.frameStart + i.frames[this.cur_frame].duration / this.cur_anim_speed && (this.frameStart = e), t = i.frames[this.cur_frame], this.OnFrameChanged(r, t), this.runtime.redraw = !0)
		}, g.getAnimationByName = function(t) {
			var e, i, r;
			for (e = 0, i = this.type.animations.length; i > e; e++)
				if (r = this.type.animations[e], cr.equals_nocase(r.name, t)) return r;
			return null
		}, g.getAnimationBySid = function(t) {
			var e, i, r;
			for (e = 0, i = this.type.animations.length; i > e; e++)
				if (r = this.type.animations[e], r.sid === t) return r;
			return null
		}, g.doChangeAnim = function() {
			var t = this.cur_animation.frames[this.cur_frame],
				e = this.getAnimationByName(this.changeAnimName);
			this.changeAnimName = "", e && (cr.equals_nocase(e.name, this.cur_animation.name) && this.animPlaying || (this.cur_animation = e, this.cur_anim_speed = e.speed, this.cur_frame < 0 && (this.cur_frame = 0), this.cur_frame >= this.cur_animation.frames.length && (this.cur_frame = this.cur_animation.frames.length - 1), 1 === this.changeAnimFrom && (this.cur_frame = 0), this.animPlaying = !0, this.frameStart = this.getNowTime(), this.animForwards = !0, this.OnFrameChanged(t, this.cur_animation.frames[this.cur_frame]), this.runtime.redraw = !0))
		}, g.doChangeAnimFrame = function() {
			var t = this.cur_animation.frames[this.cur_frame],
				e = this.cur_frame;
			this.cur_frame = cr.floor(this.changeAnimFrame), this.cur_frame < 0 && (this.cur_frame = 0), this.cur_frame >= this.cur_animation.frames.length && (this.cur_frame = this.cur_animation.frames.length - 1), e !== this.cur_frame && (this.OnFrameChanged(t, this.cur_animation.frames[this.cur_frame]), this.frameStart = this.getNowTime(), this.runtime.redraw = !0), this.changeAnimFrame = -1
		}, g.OnFrameChanged = function(t, e) {
			var i = t.width,
				r = t.height,
				s = e.width,
				n = e.height;
			i != s && (this.width *= s / i), r != n && (this.height *= n / r), this.hotspotX = e.hotspotX, this.hotspotY = e.hotspotY, this.collision_poly.set_pts(e.poly_pts), this.set_bbox_changed(), this.curFrame = e, this.curWebGLTexture = e.webGL_texture;
			var a, o, h;
			for (a = 0, o = this.behavior_insts.length; o > a; a++) h = this.behavior_insts[a], h.onSpriteFrameChanged && h.onSpriteFrameChanged(t, e);
			this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this)
		}, g.draw = function(t) {
			t.globalAlpha = this.opacity;
			var e = this.curFrame,
				i = e.spritesheeted,
				r = e.texture_img,
				s = this.x,
				n = this.y,
				a = this.width,
				o = this.height;
			if (0 === this.angle && a >= 0 && o >= 0) s -= this.hotspotX * a, n -= this.hotspotY * o, this.runtime.pixel_rounding && (s = Math.round(s), n = Math.round(n)), i ? t.drawImage(r, e.offx, e.offy, e.width, e.height, s, n, a, o) : t.drawImage(r, s, n, a, o);
			else {
				this.runtime.pixel_rounding && (s = Math.round(s), n = Math.round(n)), t.save();
				var h = a > 0 ? 1 : -1,
					c = o > 0 ? 1 : -1;
				t.translate(s, n), (1 !== h || 1 !== c) && t.scale(h, c), t.rotate(this.angle * h * c);
				var l = 0 - this.hotspotX * cr.abs(a),
					u = 0 - this.hotspotY * cr.abs(o);
				i ? t.drawImage(r, e.offx, e.offy, e.width, e.height, l, u, cr.abs(a), cr.abs(o)) : t.drawImage(r, l, u, cr.abs(a), cr.abs(o)), t.restore()
			}
		}, g.drawGL_earlyZPass = function(t) {
			this.drawGL(t)
		}, g.drawGL = function(t) {
			t.setTexture(this.curWebGLTexture), t.setOpacity(this.opacity);
			var e = this.curFrame,
				i = this.bquad;
			if (this.runtime.pixel_rounding) {
				var r = Math.round(this.x) - this.x,
					s = Math.round(this.y) - this.y;
				e.spritesheeted ? t.quadTex(i.tlx + r, i.tly + s, i.trx + r, i.try_ + s, i.brx + r, i.bry + s, i.blx + r, i.bly + s, e.sheetTex) : t.quad(i.tlx + r, i.tly + s, i.trx + r, i.try_ + s, i.brx + r, i.bry + s, i.blx + r, i.bly + s)
			} else e.spritesheeted ? t.quadTex(i.tlx, i.tly, i.trx, i.try_, i.brx, i.bry, i.blx, i.bly, e.sheetTex) : t.quad(i.tlx, i.tly, i.trx, i.try_, i.brx, i.bry, i.blx, i.bly)
		}, g.getImagePointIndexByName = function(t) {
			var e, i, r = this.curFrame;
			for (e = 0, i = r.image_points.length; i > e; e++)
				if (cr.equals_nocase(t, r.image_points[e][0])) return e;
			return -1
		}, g.getImagePoint = function(t, e) {
			var i, r = this.curFrame,
				s = r.image_points;
			if (i = cr.is_string(t) ? this.getImagePointIndexByName(t) : t - 1, i = cr.floor(i), 0 > i || i >= s.length) return e ? this.x : this.y;
			var n = (s[i][1] - r.hotspotX) * this.width,
				a = s[i][2];
			a = (a - r.hotspotY) * this.height;
			var o = Math.cos(this.angle),
				h = Math.sin(this.angle),
				c = n * o - a * h;
			return a = a * o + n * h, n = c, n += this.x, a += this.y, e ? n : a
		};
		var m = [],
			y = -2,
			_ = [];
		e.prototype.OnCollision = function(t) {
			if (!t) return !1;
			var e = this.runtime,
				i = e.getCurrentCondition(),
				r = i.type,
				s = null;
			i.extra.collmemory ? s = i.extra.collmemory : (s = {}, i.extra.collmemory = s, e.addDestroyCallback(function(t) {
				o(i.extra.collmemory, t)
			})); {
				var c, l, u, p, d, f, g, m, v, b = r.getCurrentSol(),
					w = t.getCurrentSol(),
					x = b.getObjects(),
					S = this.runtime.tickcount,
					T = S - 1,
					C = e.getCurrentEventStack().current_event;
				C.orblock
			}
			for (l = 0; l < x.length; l++) {
				for (u = x[l], w.select_all ? (u.update_bbox(), this.runtime.getCollisionCandidates(u.layer, t, u.bbox, _), c = _) : c = w.getObjects(), p = 0; p < c.length; p++) d = c[p], e.testOverlap(u, d) || e.checkRegisteredCollision(u, d) ? (m = h(s, u, d), v = !m || T > y, n(s, u, d, S), v && (e.pushCopySol(C.solModifiers), f = r.getCurrentSol(), g = t.getCurrentSol(), f.select_all = !1, g.select_all = !1, r === t ? (f.instances.length = 2, f.instances[0] = u, f.instances[1] = d, r.applySolToContainer()) : (f.instances.length = 1, g.instances.length = 1, f.instances[0] = u, g.instances[0] = d, r.applySolToContainer(), t.applySolToContainer()), C.retrigger(), e.popSol(C.solModifiers))) : a(s, u, d);
				cr.clearArray(_)
			}
			return !1
		};
		var v = null,
			b = new cr.ObjectSet,
			w = !1,
			x = [],
			S = new cr.rect(0, 0, 0, 0);
		d.finish = function(t) {
			if (w) {
				if (t) {
					var e, i, r, s = this.runtime.getCurrentEventStack().current_event.orblock,
						n = v.getCurrentSol(),
						a = b.valuesRef();
					if (n.select_all) {
						for (n.select_all = !1, cr.clearArray(n.instances), e = 0, i = a.length; i > e; ++e) n.instances[e] = a[e];
						if (s)
							for (cr.clearArray(n.else_instances), e = 0, i = v.instances.length; i > e; ++e) r = v.instances[e], b.contains(r) || n.else_instances.push(r)
					} else if (s) {
						var o = n.instances.length;
						for (e = 0, i = a.length; i > e; ++e) n.instances[o + e] = a[e], cr.arrayFindRemove(n.else_instances, a[e])
					} else cr.shallowAssignArray(n.instances, a);
					v.applySolToContainer()
				}
				b.clear(), w = !1
			}
		}, e.prototype.IsOverlapping = function(t) {
			return c.call(this, t, 0, 0)
		}, e.prototype.IsOverlappingOffset = function(t, e, i) {
			return c.call(this, t, e, i)
		}, e.prototype.IsAnimPlaying = function(t) {
			return this.changeAnimName.length ? cr.equals_nocase(this.changeAnimName, t) : cr.equals_nocase(this.cur_animation.name, t)
		}, e.prototype.CompareFrame = function(t, e) {
			return cr.do_cmp(this.cur_frame, t, e)
		}, e.prototype.CompareAnimSpeed = function(t, e) {
			var i = this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed;
			return cr.do_cmp(i, t, e)
		}, e.prototype.OnAnimFinished = function(t) {
			return cr.equals_nocase(this.animTriggerName, t)
		}, e.prototype.OnAnyAnimFinished = function() {
			return !0
		}, e.prototype.OnFrameChanged = function() {
			return !0
		}, e.prototype.IsMirrored = function() {
			return this.width < 0
		}, e.prototype.IsFlipped = function() {
			return this.height < 0
		}, e.prototype.OnURLLoaded = function() {
			return !0
		}, e.prototype.IsCollisionEnabled = function() {
			return this.collisionsEnabled
		}, p.cnds = new e, l.prototype.Spawn = function(t, e, i) {
			if (t && e) {
				var r = this.runtime.createInstance(t, e, this.getImagePoint(i, !0), this.getImagePoint(i, !1));
				if (r) {
					"undefined" != typeof r.angle && (r.angle = this.angle, r.set_bbox_changed()), this.runtime.isInOnDestroy++;
					var s, n, a;
					if (this.runtime.trigger(Object.getPrototypeOf(t.plugin).cnds.OnCreated, r), r.is_contained)
						for (s = 0, n = r.siblings.length; n > s; s++) a = r.siblings[s], this.runtime.trigger(Object.getPrototypeOf(a.type.plugin).cnds.OnCreated, a);
					this.runtime.isInOnDestroy--;
					var o = this.runtime.getCurrentAction(),
						h = !1;
					(cr.is_undefined(o.extra.Spawn_LastExec) || o.extra.Spawn_LastExec < this.runtime.execcount) && (h = !0, o.extra.Spawn_LastExec = this.runtime.execcount);
					var c;
					if (t != this.type && (c = t.getCurrentSol(), c.select_all = !1, h ? (cr.clearArray(c.instances), c.instances[0] = r) : c.instances.push(r), r.is_contained))
						for (s = 0, n = r.siblings.length; n > s; s++) a = r.siblings[s], c = a.type.getCurrentSol(), c.select_all = !1, h ? (cr.clearArray(c.instances), c.instances[0] = a) : c.instances.push(a)
				}
			}
		}, l.prototype.SetEffect = function(t) {
			this.blend_mode = t, this.compositeOp = cr.effectToCompositeOp(t), cr.setGLBlend(this, t, this.runtime.gl), this.runtime.redraw = !0
		}, l.prototype.StopAnim = function() {
			this.animPlaying = !1
		}, l.prototype.StartAnim = function(t) {
			this.animPlaying = !0, this.frameStart = this.getNowTime(), 1 === t && 0 !== this.cur_frame && (this.changeAnimFrame = 0, this.inAnimTrigger || this.doChangeAnimFrame()), this.isTicking || (this.runtime.tickMe(this), this.isTicking = !0)
		}, l.prototype.SetAnim = function(t, e) {
			this.changeAnimName = t, this.changeAnimFrom = e, this.isTicking || (this.runtime.tickMe(this), this.isTicking = !0), this.inAnimTrigger || this.doChangeAnim()
		}, l.prototype.SetAnimFrame = function(t) {
			this.changeAnimFrame = t, this.isTicking || (this.runtime.tickMe(this), this.isTicking = !0), this.inAnimTrigger || this.doChangeAnimFrame()
		}, l.prototype.SetAnimSpeed = function(t) {
			this.cur_anim_speed = cr.abs(t), this.animForwards = t >= 0, this.isTicking || (this.runtime.tickMe(this), this.isTicking = !0)
		}, l.prototype.SetMirrored = function(t) {
			var e = cr.abs(this.width) * (0 === t ? -1 : 1);
			this.width !== e && (this.width = e, this.set_bbox_changed())
		}, l.prototype.SetFlipped = function(t) {
			var e = cr.abs(this.height) * (0 === t ? -1 : 1);
			this.height !== e && (this.height = e, this.set_bbox_changed())
		}, l.prototype.SetScale = function(t) {
			var e = this.curFrame,
				i = this.width < 0 ? -1 : 1,
				r = this.height < 0 ? -1 : 1,
				s = e.width * t * i,
				n = e.height * t * r;
			(this.width !== s || this.height !== n) && (this.width = s, this.height = n, this.set_bbox_changed())
		}, l.prototype.LoadURL = function(t, e) {
			var i = new Image,
				r = this,
				s = this.curFrame;
			i.onload = function() {
				return s.texture_img.src === i.src ? (r.runtime.glwrap && r.curFrame === s && (r.curWebGLTexture = s.webGL_texture), 0 === e && (r.width = i.width, r.height = i.height, r.set_bbox_changed()), r.runtime.redraw = !0, void r.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, r)) : (s.texture_img = i, s.offx = 0, s.offy = 0, s.width = i.width, s.height = i.height, s.spritesheeted = !1, s.datauri = "", s.pixelformat = 0, r.runtime.glwrap && (s.webGL_texture && r.runtime.glwrap.deleteTexture(s.webGL_texture), s.webGL_texture = r.runtime.glwrap.loadTexture(i, !1, r.runtime.linearSampling), r.curFrame === s && (r.curWebGLTexture = s.webGL_texture), r.type.updateAllCurrentTexture()), 0 === e && (r.width = i.width, r.height = i.height, r.set_bbox_changed()), r.runtime.redraw = !0, void r.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, r))
			}, "data:" !== t.substr(0, 5) && (i.crossOrigin = "anonymous"), i.src = t
		}, l.prototype.SetCollisions = function(t) {
			this.collisionsEnabled !== (0 !== t) && (this.collisionsEnabled = 0 !== t, this.collisionsEnabled ? this.set_bbox_changed() : (this.collcells.right >= this.collcells.left && this.type.collision_grid.update(this, this.collcells, null), this.collcells.set(0, 0, -1, -1)))
		}, p.acts = new l, u.prototype.AnimationFrame = function(t) {
			t.set_int(this.cur_frame)
		}, u.prototype.AnimationFrameCount = function(t) {
			t.set_int(this.cur_animation.frames.length)
		}, u.prototype.AnimationName = function(t) {
			t.set_string(this.cur_animation.name)
		}, u.prototype.AnimationSpeed = function(t) {
			t.set_float(this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed)
		}, u.prototype.ImagePointX = function(t, e) {
			t.set_float(this.getImagePoint(e, !0))
		}, u.prototype.ImagePointY = function(t, e) {
			t.set_float(this.getImagePoint(e, !1))
		}, u.prototype.ImagePointCount = function(t) {
			t.set_int(this.curFrame.image_points.length)
		}, u.prototype.ImageWidth = function(t) {
			t.set_float(this.curFrame.width)
		}, u.prototype.ImageHeight = function(t) {
			t.set_float(this.curFrame.height)
		}, p.exps = new u
	}();
var jText = "";
cr.plugins_.SpriteFontPlus = function(t) {
		this.runtime = t
	},
	function() {
		function t(t) {
			return t.replace(/\s\s*$/, "")
		}

		function e(t, e) {
			return t.length ? t.pop() : new e
		}

		function i(t, e) {
			t.length < v && t.push(e)
		}

		function r(t, e, r) {
			if (r) {
				var s, n;
				for (s = 0, n = e.length; n > s; s++) i(t, e[s]);
				e.length = 0
			} else {
				var a;
				for (a in e) Object.prototype.hasOwnProperty.call(e, a) && (i(t, e[a]), delete e[a])
			}
		}

		function s(e, i, r) {
			var s, a = e.lines;
			r = t(r), i >= a.length && a.push(n()), s = a[i], s.text = r, s.width = e.measureWidth(r), e.textWidth = cr.max(e.textWidth, s.width)
		}

		function n() {
			return e(b, Object)
		}

		function a(t) {
			i(b, t)
		}

		function o(t) {
			r(b, t, !0)
		}

		function h(t, i, r, s, n, a) {
			void 0 === t[i] && (t[i] = e(w, Object)), t[i].x = r, t[i].y = s, t[i].w = n, t[i].h = a
		}

		function c(t) {
			r(w, t, !1)
		}

		function l(t, i, r, s, n, a) {
			void 0 === t[i] && (t[i] = e(x, cr.rect)), t[i].left = r, t[i].top = s, t[i].right = n, t[i].bottom = a
		}

		function u(t) {
			r(x, t, !1)
		}

		function p(t, e, i) {
			var r;
			r = t.tlx * e - t.tly * i, t.tly = t.tly * e + t.tlx * i, t.tlx = r, r = t.trx * e - t.try_ * i, t.try_ = t.try_ * e + t.trx * i, t.trx = r, r = t.blx * e - t.bly * i, t.bly = t.bly * e + t.blx * i, t.blx = r, r = t.brx * e - t.bry * i, t.bry = t.bry * e + t.brx * i, t.brx = r
		}

		function d() {}

		function f() {}

		function g() {}
		var m = cr.plugins_.SpriteFontPlus.prototype;
		m.onCreate = function() {}, m.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var y = m.Type.prototype;
		y.onCreate = function() {
			this.is_family || (this.texture_img = new Image, this.texture_img.idtkLoadDisposed = !0, this.texture_img.src = this.texture_file, this.runtime.wait_for_textures.push(this.texture_img), this.webGL_texture = null)
		}, y.onLostWebGLContext = function() {
			this.is_family || (this.webGL_texture = null)
		}, y.onRestoreWebGLContext = function() {
			if (!this.is_family && this.instances.length) {
				this.webGL_texture || (this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, !1, this.runtime.linearSampling, this.texture_pixelformat));
				var t, e;
				for (t = 0, e = this.instances.length; e > t; t++) this.instances[t].webGL_texture = this.webGL_texture
			}
		}, y.unloadTextures = function() {
			this.is_family || this.instances.length || !this.webGL_texture || (this.runtime.glwrap.deleteTexture(this.webGL_texture), this.webGL_texture = null)
		}, y.preloadCanvas2D = function(t) {
			t.drawImage(this.texture_img, 0, 0)
		}, m.Instance = function(t) {
			this.type = t, this.runtime = t.runtime
		};
		var _ = m.Instance.prototype;
		_.onDestroy = function() {
			o(this.lines), c(this.clipList), u(this.clipUV), cr.wipe(this.characterWidthList)
		}, _.onCreate = function() {
			this.texture_img = this.type.texture_img, this.characterWidth = this.properties[0], this.characterHeight = this.properties[1], this.characterSet = this.properties[2], this.text = this.properties[3], this.characterScale = this.properties[4], this.visible = 0 === this.properties[5], this.halign = this.properties[6] / 2, this.valign = this.properties[7] / 2, this.wrapbyword = 0 === this.properties[9], this.characterSpacing = this.properties[10], this.lineHeight = this.properties[11], this.textWidth = 0, this.textHeight = 0, this.charWidthJSON = this.properties[12], this.spaceWidth = this.properties[13], console.log(this.charWidthJSON), jText = this.charWidthJSON, this.recycled ? (this.lines.length = 0, cr.wipe(this.clipList), cr.wipe(this.clipUV), cr.wipe(this.characterWidthList)) : (this.lines = [], this.clipList = {}, this.clipUV = {}, this.characterWidthList = {});
			try {
				if (this.charWidthJSON)
					if (-1 !== this.charWidthJSON.indexOf('""c2array""'))
						for (var t = jQuery.parseJSON(this.charWidthJSON.replace(/""/g, '"')), e = t.size[1], i = 0; e > i; i++)
							for (var r = t.data[1][i][0], s = t.data[0][i][0], n = 0; n < r.length; n++) this.characterWidthList[r.charAt(n)] = s;
					else
						for (var t = jQuery.parseJSON(this.charWidthJSON), e = t.length, i = 0; e > i; i++)
							for (var r = t[i][1], s = t[i][0], n = 0; n < r.length; n++) this.characterWidthList[r.charAt(n)] = s; - 1 !== this.spaceWidth && (this.characterWidthList[" "] = this.spaceWidth)
			} catch (a) {
				window.console && window.console.log && window.console.log("SpriteFont+ Failure: " + a)
			}
			this.text_changed = !0, this.lastwrapwidth = this.width, this.runtime.glwrap && (this.type.webGL_texture || (this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, !1, this.runtime.linearSampling, this.type.texture_pixelformat)), this.webGL_texture = this.type.webGL_texture), this.SplitSheet()
		}, _.saveToJSON = function() {
			var t = {
				t: this.text,
				csc: this.characterScale,
				csp: this.characterSpacing,
				lh: this.lineHeight,
				tw: this.textWidth,
				th: this.textHeight,
				lrt: this.last_render_tick,
				cw: {}
			};
			for (var e in this.characterWidthList) t.cw[e] = this.characterWidthList[e];
			return t
		}, _.loadFromJSON = function(t) {
			this.text = t.t, this.characterScale = t.csc, this.characterSpacing = t.csp, this.lineHeight = t.lh, this.textWidth = t.tw, this.textHeight = t.th, this.last_render_tick = t.lrt;
			for (var e in t.cw) this.characterWidthList[e] = t.cw[e];
			this.text_changed = !0, this.lastwrapwidth = this.width
		};
		var v = 1e3,
			b = [],
			w = [],
			x = [];
		_.SplitSheet = function() {
			for (var t = this.texture_img, e = t.width, i = t.height, r = this.characterWidth, s = this.characterHeight, n = r / e, a = s / i, o = this.characterSet, c = Math.floor(e / r), u = Math.floor(i / s), p = 0; p < o.length && !(p >= c * u); p++) {
				var d = p % c,
					f = Math.floor(p / c),
					g = o.charAt(p);
				this.runtime.glwrap ? l(this.clipUV, g, d * n, f * a, (d + 1) * n, (f + 1) * a) : h(this.clipList, g, d * r, f * s, r, s)
			}
		};
		var S = [];
		m.TokeniseWords = function(t) {
			S.length = 0;
			for (var e, i = "", r = 0; r < t.length;)
				if (e = t.charAt(r), "\n" === e) i.length && (S.push(i), i = ""), S.push("\n"), ++r;
				else if (" " === e || "	" === e || "-" === e) {
				do i += t.charAt(r), r++; while (r < t.length && (" " === t.charAt(r) || "	" === t.charAt(r)));
				S.push(i), i = ""
			} else r < t.length && (i += e, r++);
			i.length && S.push(i)
		}, m.WordWrap = function(t) {
			var e = t.text,
				i = t.lines;
			if (!e || !e.length) return void o(i);
			var r = t.width;
			if (2 >= r) return void o(i);
			var s = t.characterWidth,
				a = t.characterScale,
				h = t.characterSpacing;
			if (e.length * (s * a + h) - h <= r && -1 === e.indexOf("\n")) {
				var c = t.measureWidth(e);
				if (r >= c) return o(i), i.push(n()), i[0].text = e, i[0].width = c, t.textWidth = c, void(t.textHeight = t.characterHeight * a + t.lineHeight)
			}
			t.wrapbyword;
			this.WrapText(t), t.textHeight = i.length * (t.characterHeight * a + t.lineHeight)
		}, m.WrapText = function(e) {
			var i, r = e.wrapbyword,
				n = e.text,
				o = e.lines,
				h = e.width;
			r ? (this.TokeniseWords(n), i = S) : i = n;
			var c, l, u, p = "",
				d = 0,
				f = !1;
			for (u = 0; u < i.length; u++) "\n" !== i[u] ? (f = !1, c = p, p += i[u], l = e.measureWidth(t(p)), l > h && ("" === c ? (s(e, d, p), p = "", f = !0) : (s(e, d, c), p = i[u]), d++, r || " " !== p || (p = ""))) : (f === !0 ? f = !1 : (s(e, d, p), d++), p = "");
			for (t(p).length && (s(e, d, p), d++), u = d; u < o.length; u++) a(o[u]);
			o.length = d
		}, _.measureWidth = function(t) {
			for (var e = this.characterSpacing, i = t.length, r = 0, s = 0; i > s; s++) r += this.getCharacterWidth(t.charAt(s)) * this.characterScale + e;
			return r -= r > 0 ? e : 0
		}, _.getCharacterWidth = function(t) {
			var e = this.characterWidthList;
			return void 0 !== e[t] ? e[t] : this.characterWidth
		}, _.rebuildText = function() {
			(this.text_changed || this.width !== this.lastwrapwidth) && (this.textWidth = 0, this.textHeight = 0, this.type.plugin.WordWrap(this), this.text_changed = !1, this.lastwrapwidth = this.width)
		};
		var T = 1e-5;
		_.draw = function(t) {
			var e = this.texture_img;
			if ("" !== this.text && null != e) {
				if (this.rebuildText(), this.height < this.characterHeight * this.characterScale + this.lineHeight) return;
				t.globalAlpha = this.opacity;
				var i = this.x,
					r = this.y;
				this.runtime.pixel_rounding && (i = i + .5 | 0, r = r + .5 | 0), t.save(), t.translate(i, r), t.rotate(this.angle);
				var s, n = this.halign,
					a = this.valign,
					o = this.characterScale,
					h = this.characterHeight * o,
					c = this.lineHeight,
					l = this.characterSpacing,
					u = this.lines,
					p = this.textHeight,
					d = a * cr.max(0, this.height - p),
					f = -(this.hotspotX * this.width),
					g = -(this.hotspotY * this.height);
				g += d;
				for (var m, y = g, _ = 0; _ < u.length; _++) {
					var v = u[_].text,
						b = u[_].width;
					s = n * cr.max(0, this.width - b), m = f + s, y += c;
					for (var w = 0; w < v.length; w++) {
						var x = v.charAt(w),
							S = this.clipList[x];
						if (m + this.getCharacterWidth(x) * o > this.width + T) break;
						void 0 !== S && t.drawImage(this.texture_img, S.x, S.y, S.w, S.h, Math.round(m), Math.round(y), S.w * o, S.h * o), m += this.getCharacterWidth(x) * o + l
					}
					if (y += h, y + h + c > this.height) break
				}
				t.restore()
			}
		};
		var C = new cr.quad;
		_.drawGL = function(t) {
			if (t.setTexture(this.webGL_texture), t.setOpacity(this.opacity), "" !== this.text) {
				if (this.rebuildText(), this.height < this.characterHeight * this.characterScale + this.lineHeight) return;
				this.update_bbox();
				var e = this.bquad,
					i = 0,
					r = 0;
				this.runtime.pixel_rounding && (i = (this.x + .5 | 0) - this.x, r = (this.y + .5 | 0) - this.y);
				var s, n, a = this.angle,
					o = this.halign,
					h = this.valign,
					c = this.characterScale,
					l = this.characterHeight * c,
					u = this.lineHeight,
					d = this.characterSpacing,
					f = this.lines,
					g = this.textHeight;
				0 !== a && (s = Math.cos(a), n = Math.sin(a));
				for (var m, y, _ = h * cr.max(0, this.height - g), v = e.tlx + i, b = e.tly + r, w = _, x = 0; x < f.length; x++) {
					var S = f[x].text,
						k = f[x].width;
					m = o * cr.max(0, this.width - k), y = m, w += u;
					for (var O = 0; O < S.length; O++) {
						var A = S.charAt(O),
							E = this.clipUV[A];
						if (y + this.getCharacterWidth(A) * c > this.width + T) break;
						if (void 0 !== E) {
							var I = this.characterWidth * c,
								P = this.characterHeight * c;
							C.tlx = y, C.tly = w, C.trx = y + I, C.try_ = w, C.blx = y, C.bly = w + P, C.brx = y + I, C.bry = w + P, 0 !== a && p(C, s, n), C.offset(v, b), t.quadTex(C.tlx, C.tly, C.trx, C.try_, C.brx, C.bry, C.blx, C.bly, E)
						}
						y += this.getCharacterWidth(A) * c + d
					}
					if (w += l, w + l + u > this.height) break
				}
			}
		}, d.prototype.CompareText = function(t, e) {
			return e ? this.text == t : cr.equals_nocase(this.text, t)
		}, m.cnds = new d, f.prototype.SetText = function(t) {
			cr.is_number(t) && 1e9 > t && (t = Math.round(1e10 * t) / 1e10);
			var e = t.toString();
			this.text !== e && (this.text = e, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.AppendText = function(t) {
			cr.is_number(t) && (t = Math.round(1e10 * t) / 1e10);
			var e = t.toString();
			e && (this.text += e, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetScale = function(t) {
			t !== this.characterScale && (this.characterScale = t, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetCharacterSpacing = function(t) {
			t !== this.CharacterSpacing && (this.characterSpacing = t, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetLineHeight = function(t) {
			t !== this.lineHeight && (this.lineHeight = t, this.text_changed = !0, this.runtime.redraw = !0)
		}, _.SetCharWidth = function(t, e) {
			var i = parseInt(e, 10);
			this.characterWidthList[t] !== i && (this.characterWidthList[t] = i, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetCharacterWidth = function(t, e) {
			if ("" !== t)
				for (var i = 0; i < t.length; i++) this.SetCharWidth(t.charAt(i), e)
		}, f.prototype.SetEffect = function(t) {
			this.compositeOp = cr.effectToCompositeOp(t), cr.setGLBlend(this, t, this.runtime.gl), this.runtime.redraw = !0
		}, m.acts = new f, g.prototype.CharacterWidth = function(t, e) {
			t.set_int(this.getCharacterWidth(e))
		}, g.prototype.CharacterHeight = function(t) {
			t.set_int(this.characterHeight)
		}, g.prototype.CharacterScale = function(t) {
			t.set_float(this.characterScale)
		}, g.prototype.CharacterSpacing = function(t) {
			t.set_int(this.characterSpacing)
		}, g.prototype.LineHeight = function(t) {
			t.set_int(this.lineHeight)
		}, g.prototype.Text = function(t) {
			t.set_string(this.text)
		}, g.prototype.TextWidth = function(t) {
			this.rebuildText(), t.set_float(this.textWidth)
		}, g.prototype.TextHeight = function(t) {
			this.rebuildText(), t.set_float(this.textHeight)
		}, m.exps = new g
	}(), cr.plugins_.Spritefont2 = function(t) {
		this.runtime = t
	},
	function() {
		function t(t) {
			return t.replace(/\s\s*$/, "")
		}

		function e(t, e) {
			return t.length ? t.pop() : new e
		}

		function i(t, e) {
			t.length < v && t.push(e)
		}

		function r(t, e, r) {
			if (r) {
				var s, n;
				for (s = 0, n = e.length; n > s; s++) i(t, e[s]);
				cr.clearArray(e)
			} else {
				var a;
				for (a in e) Object.prototype.hasOwnProperty.call(e, a) && (i(t, e[a]), delete e[a])
			}
		}

		function s(e, i, r) {
			var s, a = e.lines;
			r = t(r), i >= a.length && a.push(n()), s = a[i], s.text = r, s.width = e.measureWidth(r), e.textWidth = cr.max(e.textWidth, s.width)
		}

		function n() {
			return e(b, Object)
		}

		function a(t) {
			i(b, t)
		}

		function o(t) {
			r(b, t, !0)
		}

		function h(t, i, r, s, n, a) {
			void 0 === t[i] && (t[i] = e(w, Object)), t[i].x = r, t[i].y = s, t[i].w = n, t[i].h = a
		}

		function c(t) {
			r(w, t, !1)
		}

		function l(t, i, r, s, n, a) {
			void 0 === t[i] && (t[i] = e(x, cr.rect)), t[i].left = r, t[i].top = s, t[i].right = n, t[i].bottom = a
		}

		function u(t) {
			r(x, t, !1)
		}

		function p(t, e, i) {
			var r;
			r = t.tlx * e - t.tly * i, t.tly = t.tly * e + t.tlx * i, t.tlx = r, r = t.trx * e - t.try_ * i, t.try_ = t.try_ * e + t.trx * i, t.trx = r, r = t.blx * e - t.bly * i, t.bly = t.bly * e + t.blx * i, t.blx = r, r = t.brx * e - t.bry * i, t.bry = t.bry * e + t.brx * i, t.brx = r
		}

		function d() {}

		function f() {}

		function g() {}
		var m = cr.plugins_.Spritefont2.prototype;
		m.onCreate = function() {}, m.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var y = m.Type.prototype;
		y.onCreate = function() {
			this.is_family || (this.texture_img = new Image, this.runtime.waitForImageLoad(this.texture_img, this.texture_file), this.webGL_texture = null)
		}, y.onLostWebGLContext = function() {
			this.is_family || (this.webGL_texture = null)
		}, y.onRestoreWebGLContext = function() {
			if (!this.is_family && this.instances.length) {
				this.webGL_texture || (this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, !1, this.runtime.linearSampling, this.texture_pixelformat));
				var t, e;
				for (t = 0, e = this.instances.length; e > t; t++) this.instances[t].webGL_texture = this.webGL_texture
			}
		}, y.unloadTextures = function() {
			this.is_family || this.instances.length || !this.webGL_texture || (this.runtime.glwrap.deleteTexture(this.webGL_texture), this.webGL_texture = null)
		}, y.preloadCanvas2D = function(t) {
			t.drawImage(this.texture_img, 0, 0)
		}, m.Instance = function(t) {
			this.type = t, this.runtime = t.runtime
		};
		var _ = m.Instance.prototype;
		_.onDestroy = function() {
			o(this.lines), c(this.clipList), u(this.clipUV), cr.wipe(this.characterWidthList)
		}, _.onCreate = function() {
			this.texture_img = this.type.texture_img, this.characterWidth = this.properties[0], this.characterHeight = this.properties[1], this.characterSet = this.properties[2], this.text = this.properties[3], this.characterScale = this.properties[4], this.visible = 0 === this.properties[5], this.halign = this.properties[6] / 2, this.valign = this.properties[7] / 2, this.wrapbyword = 0 === this.properties[9], this.characterSpacing = this.properties[10], this.lineHeight = this.properties[11], this.textWidth = 0, this.textHeight = 0, this.recycled ? (cr.clearArray(this.lines), cr.wipe(this.clipList), cr.wipe(this.clipUV), cr.wipe(this.characterWidthList)) : (this.lines = [], this.clipList = {}, this.clipUV = {}, this.characterWidthList = {}), this.text_changed = !0, this.lastwrapwidth = this.width, this.runtime.glwrap && (this.type.webGL_texture || (this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, !1, this.runtime.linearSampling, this.type.texture_pixelformat)), this.webGL_texture = this.type.webGL_texture), this.SplitSheet()
		}, _.saveToJSON = function() {
			var t = {
				t: this.text,
				csc: this.characterScale,
				csp: this.characterSpacing,
				lh: this.lineHeight,
				tw: this.textWidth,
				th: this.textHeight,
				lrt: this.last_render_tick,
				ha: this.halign,
				va: this.valign,
				cw: {}
			};
			for (var e in this.characterWidthList) t.cw[e] = this.characterWidthList[e];
			return t
		}, _.loadFromJSON = function(t) {
			this.text = t.t, this.characterScale = t.csc, this.characterSpacing = t.csp, this.lineHeight = t.lh, this.textWidth = t.tw, this.textHeight = t.th, this.last_render_tick = t.lrt, t.hasOwnProperty("ha") && (this.halign = t.ha), t.hasOwnProperty("va") && (this.valign = t.va);
			for (var e in t.cw) this.characterWidthList[e] = t.cw[e];
			this.text_changed = !0, this.lastwrapwidth = this.width
		};
		var v = 1e3,
			b = [],
			w = [],
			x = [];
		_.SplitSheet = function() {
			for (var t = this.texture_img, e = t.width, i = t.height, r = this.characterWidth, s = this.characterHeight, n = r / e, a = s / i, o = this.characterSet, c = Math.floor(e / r), u = Math.floor(i / s), p = 0; p < o.length && !(p >= c * u); p++) {
				var d = p % c,
					f = Math.floor(p / c),
					g = o.charAt(p);
				this.runtime.glwrap ? l(this.clipUV, g, d * n, f * a, (d + 1) * n, (f + 1) * a) : h(this.clipList, g, d * r, f * s, r, s)
			}
		};
		var S = [];
		m.TokeniseWords = function(t) {
			cr.clearArray(S);
			for (var e, i = "", r = 0; r < t.length;)
				if (e = t.charAt(r), "\n" === e) i.length && (S.push(i), i = ""), S.push("\n"), ++r;
				else if (" " === e || "	" === e || "-" === e) {
				do i += t.charAt(r), r++; while (r < t.length && (" " === t.charAt(r) || "	" === t.charAt(r)));
				S.push(i), i = ""
			} else r < t.length && (i += e, r++);
			i.length && S.push(i)
		}, m.WordWrap = function(t) {
			var e = t.text,
				i = t.lines;
			if (!e || !e.length) return void o(i);
			var r = t.width;
			if (2 >= r) return void o(i);
			var s = t.characterWidth,
				a = t.characterScale,
				h = t.characterSpacing;
			if (e.length * (s * a + h) - h <= r && -1 === e.indexOf("\n")) {
				var c = t.measureWidth(e);
				if (r >= c) return o(i), i.push(n()), i[0].text = e, i[0].width = c, t.textWidth = c, void(t.textHeight = t.characterHeight * a + t.lineHeight)
			}
			t.wrapbyword;
			this.WrapText(t), t.textHeight = i.length * (t.characterHeight * a + t.lineHeight)
		}, m.WrapText = function(e) {
			var i, r = e.wrapbyword,
				n = e.text,
				o = e.lines,
				h = e.width;
			r ? (this.TokeniseWords(n), i = S) : i = n;
			var c, l, u, p = "",
				d = 0,
				f = !1;
			for (u = 0; u < i.length; u++) "\n" !== i[u] ? (f = !1, c = p, p += i[u], l = e.measureWidth(t(p)), l > h && ("" === c ? (s(e, d, p), p = "", f = !0) : (s(e, d, c), p = i[u]), d++, r || " " !== p || (p = ""))) : (f === !0 ? f = !1 : (s(e, d, p), d++), p = "");
			for (t(p).length && (s(e, d, p), d++), u = d; u < o.length; u++) a(o[u]);
			o.length = d
		}, _.measureWidth = function(t) {
			for (var e = this.characterSpacing, i = t.length, r = 0, s = 0; i > s; s++) r += this.getCharacterWidth(t.charAt(s)) * this.characterScale + e;
			return r -= r > 0 ? e : 0
		}, _.getCharacterWidth = function(t) {
			var e = this.characterWidthList;
			return void 0 !== e[t] ? e[t] : this.characterWidth
		}, _.rebuildText = function() {
			(this.text_changed || this.width !== this.lastwrapwidth) && (this.textWidth = 0, this.textHeight = 0, this.type.plugin.WordWrap(this), this.text_changed = !1, this.lastwrapwidth = this.width)
		};
		var T = 1e-5;
		_.draw = function(t) {
			var e = this.texture_img;
			if ("" !== this.text && null != e) {
				if (this.rebuildText(), this.height < this.characterHeight * this.characterScale + this.lineHeight) return;
				t.globalAlpha = this.opacity;
				var i = this.x,
					r = this.y;
				this.runtime.pixel_rounding && (i = Math.round(i), r = Math.round(r));
				var s = this.layer.viewLeft,
					n = this.layer.viewTop,
					a = this.layer.viewRight,
					o = this.layer.viewBottom;
				t.save(), t.translate(i, r), t.rotate(this.angle);
				var h, c, l = this.halign,
					u = this.valign,
					p = this.characterScale,
					d = this.characterHeight * p,
					f = this.lineHeight,
					g = this.characterSpacing,
					m = this.lines,
					y = this.textHeight,
					_ = u * cr.max(0, this.height - y),
					v = -(this.hotspotX * this.width),
					b = -(this.hotspotY * this.height);
				b += _;
				for (var w, x, S, C = b, k = 0; k < m.length; k++) {
					var O = m[k].text,
						A = m[k].width;
					if (c = l * cr.max(0, this.width - A), w = v + c, C += f, n > r + C + d) C += d;
					else {
						for (var E = 0; E < O.length; E++) {
							var I = O.charAt(E);
							h = this.getCharacterWidth(I);
							var P = this.clipList[I];
							if (s > i + w + h * p + g) w += h * p + g;
							else {
								if (w + h * p > this.width + T) break;
								if (void 0 !== P && (x = w, S = C, 0 === this.angle && (x = Math.round(x), S = Math.round(S)), t.drawImage(this.texture_img, P.x, P.y, P.w, P.h, x, S, P.w * p, P.h * p)), w += h * p + g, i + w > a) break
							}
						}
						if (C += d, C + d + f > this.height || r + C > o) break
					}
				}
				t.restore()
			}
		};
		var C = new cr.quad;
		_.drawGL = function(t) {
			if (t.setTexture(this.webGL_texture), t.setOpacity(this.opacity), this.text && (this.rebuildText(), !(this.height < this.characterHeight * this.characterScale + this.lineHeight))) {
				this.update_bbox();
				var e = this.bquad,
					i = 0,
					r = 0;
				this.runtime.pixel_rounding && (i = Math.round(this.x) - this.x, r = Math.round(this.y) - this.y);
				var s, n, a, o = this.layer.viewLeft,
					h = this.layer.viewTop,
					c = this.layer.viewRight,
					l = this.layer.viewBottom,
					u = this.angle,
					d = this.halign,
					f = this.valign,
					g = this.characterScale,
					m = this.characterHeight * g,
					y = this.lineHeight,
					_ = this.characterSpacing,
					v = this.lines,
					b = this.textHeight;
				0 !== u && (n = Math.cos(u), a = Math.sin(u));
				for (var w, x, S, k, O = f * cr.max(0, this.height - b), A = e.tlx + i, E = e.tly + r, I = O, P = 0; P < v.length; P++) {
					var L = v[P].text,
						R = v[P].width;
					if (w = d * cr.max(0, this.width - R), x = w, I += y, 0 === u && h > E + I + m) I += m;
					else {
						for (var M = 0; M < L.length; M++) {
							var N = L.charAt(M);
							s = this.getCharacterWidth(N);
							var B = this.clipUV[N];
							if (o > A + x + s * g + _) x += s * g + _;
							else {
								if (x + s * g > this.width + T) break;
								if (void 0 !== B) {
									var F = this.characterWidth * g,
										j = this.characterHeight * g;
									S = x, k = I, 0 === u && (S = Math.round(S), k = Math.round(k)), C.tlx = S, C.tly = k, C.trx = S + F, C.try_ = k, C.blx = S, C.bly = k + j, C.brx = S + F, C.bry = k + j, 0 !== u && p(C, n, a), C.offset(A, E), t.quadTex(C.tlx, C.tly, C.trx, C.try_, C.brx, C.bry, C.blx, C.bly, B)
								}
								if (x += s * g + _, 0 === u && A + x > c) break
							}
						}
						if (I += m, I + m + y > this.height || E + I > l) break
					}
				}
			}
		}, d.prototype.CompareText = function(t, e) {
			return e ? this.text == t : cr.equals_nocase(this.text, t)
		}, m.cnds = new d, f.prototype.SetText = function(t) {
			cr.is_number(t) && 1e9 > t && (t = Math.round(1e10 * t) / 1e10);
			var e = t.toString();
			this.text !== e && (this.text = e, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.AppendText = function(t) {
			cr.is_number(t) && (t = Math.round(1e10 * t) / 1e10);
			var e = t.toString();
			e && (this.text += e, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetScale = function(t) {
			t !== this.characterScale && (this.characterScale = t, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetCharacterSpacing = function(t) {
			t !== this.CharacterSpacing && (this.characterSpacing = t, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetLineHeight = function(t) {
			t !== this.lineHeight && (this.lineHeight = t, this.text_changed = !0, this.runtime.redraw = !0)
		}, _.SetCharWidth = function(t, e) {
			var i = parseInt(e, 10);
			this.characterWidthList[t] !== i && (this.characterWidthList[t] = i, this.text_changed = !0, this.runtime.redraw = !0)
		}, f.prototype.SetCharacterWidth = function(t, e) {
			if ("" !== t)
				for (var i = 0; i < t.length; i++) this.SetCharWidth(t.charAt(i), e)
		}, f.prototype.SetEffect = function(t) {
			this.blend_mode = t, this.compositeOp = cr.effectToCompositeOp(t), cr.setGLBlend(this, t, this.runtime.gl), this.runtime.redraw = !0
		}, f.prototype.SetHAlign = function(t) {
			this.halign = t / 2, this.text_changed = !0, this.runtime.redraw = !0
		}, f.prototype.SetVAlign = function(t) {
			this.valign = t / 2, this.text_changed = !0, this.runtime.redraw = !0
		}, m.acts = new f, g.prototype.CharacterWidth = function(t, e) {
			t.set_int(this.getCharacterWidth(e))
		}, g.prototype.CharacterHeight = function(t) {
			t.set_int(this.characterHeight)
		}, g.prototype.CharacterScale = function(t) {
			t.set_float(this.characterScale)
		}, g.prototype.CharacterSpacing = function(t) {
			t.set_int(this.characterSpacing)
		}, g.prototype.LineHeight = function(t) {
			t.set_int(this.lineHeight)
		}, g.prototype.Text = function(t) {
			t.set_string(this.text)
		}, g.prototype.TextWidth = function(t) {
			this.rebuildText(), t.set_float(this.textWidth)
		}, g.prototype.TextHeight = function(t) {
			this.rebuildText(), t.set_float(this.textHeight)
		}, m.exps = new g
	}(), cr.plugins_.Touch = function(t) {
		this.runtime = t
	},
	function() {
		function t(t) {
			l = t.x, u = t.y, p = t.z
		}

		function e(t, e, i, s) {
			var n;
			return n = f.length ? f.pop() : new r, n.init(t, e, i, s), n
		}

		function i(t) {
			f.length < 100 && f.push(t)
		}

		function r() {
			this.starttime = 0, this.time = 0, this.lasttime = 0, this.startx = 0, this.starty = 0, this.x = 0, this.y = 0, this.lastx = 0, this.lasty = 0, this.id = 0, this.startindex = 0, this.triggeredHold = !1, this.tooFarForHold = !1
		}

		function s() {}

		function n() {}
		var a = cr.plugins_.Touch.prototype;
		a.Type = function(t) {
			this.plugin = t, this.runtime = t.runtime
		};
		var o = a.Type.prototype;
		o.onCreate = function() {}, a.Instance = function(t) {
			this.type = t, this.runtime = t.runtime, this.touches = [], this.mouseDown = !1
		};
		var h = a.Instance.prototype,
			c = {
				left: 0,
				top: 0
			};
		h.findTouch = function(t) {
			var e, i;
			for (e = 0, i = this.touches.length; i > e; e++)
				if (this.touches[e].id === t) return e;
			return -1
		};
		var l = 0,
			u = 0,
			p = 0,
			d = null,
			f = [],
			g = 15,
			m = 500,
			y = 333,
			_ = 25;
		r.prototype.init = function(t, e, i, r) {
			var s = cr.performance_now();
			this.time = s, this.lasttime = s, this.starttime = s, this.startx = t, this.starty = e, this.x = t, this.y = e, this.lastx = t, this.lasty = e, this.id = i, this.startindex = r, this.triggeredHold = !1, this.tooFarForHold = !1
		}, r.prototype.update = function(t, e, i) {
			this.lasttime = this.time, this.time = t, this.lastx = this.x, this.lasty = this.y, this.x = e, this.y = i, !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) >= g && (this.tooFarForHold = !0)
		}, r.prototype.maybeTriggerHold = function(t, e) {
			if (!this.triggeredHold) {
				var i = cr.performance_now();
				i - this.starttime >= m && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < g && (this.triggeredHold = !0, t.trigger_index = this.startindex, t.trigger_id = this.id, t.getTouchIndex = e, t.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGesture, t), t.curTouchX = this.x, t.curTouchY = this.y, t.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGestureObject, t), t.getTouchIndex = 0)
			}
		};
		var v = -1e3,
			b = -1e3,
			w = -1e4;
		r.prototype.maybeTriggerTap = function(t, e) {
			if (!this.triggeredHold) {
				var i = cr.performance_now();
				i - this.starttime <= y && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < g && (t.trigger_index = this.startindex, t.trigger_id = this.id, t.getTouchIndex = e, 2 * y >= i - w && cr.distanceTo(v, b, this.x, this.y) < _ ? (t.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGesture, t), t.curTouchX = this.x, t.curTouchY = this.y, t.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGestureObject, t), v = -1e3, b = -1e3, w = -1e4) : (t.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGesture, t), t.curTouchX = this.x, t.curTouchY = this.y, t.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGestureObject, t), v = this.x, b = this.y, w = i), t.getTouchIndex = 0)
			}
		}, h.onCreate = function() {
			d = this, this.isWindows8 = !("undefined" == typeof window.c2isWindows8 || !window.c2isWindows8), this.orient_alpha = 0, this.orient_beta = 0, this.orient_gamma = 0, this.acc_g_x = 0, this.acc_g_y = 0, this.acc_g_z = 0, this.acc_x = 0, this.acc_y = 0, this.acc_z = 0, this.curTouchX = 0, this.curTouchY = 0, this.trigger_index = 0, this.trigger_id = 0, this.getTouchIndex = 0, this.useMouseInput = 0 !== this.properties[0];
			var e = this.runtime.fullscreen_mode > 0 ? document : this.runtime.canvas,
				i = document;
			this.runtime.isDirectCanvas ? i = e = window.Canvas : this.runtime.isCocoonJs && (i = e = window);
			var r = this;
			if (window.navigator.pointerEnabled ? (e.addEventListener("pointerdown", function(t) {
					r.onPointerStart(t)
				}, !1), e.addEventListener("pointermove", function(t) {
					r.onPointerMove(t)
				}, !1), i.addEventListener("pointerup", function(t) {
					r.onPointerEnd(t, !1)
				}, !1), i.addEventListener("pointercancel", function(t) {
					r.onPointerEnd(t, !0)
				}, !1), this.runtime.canvas && (this.runtime.canvas.addEventListener("MSGestureHold", function(t) {
					t.preventDefault()
				}, !1), document.addEventListener("MSGestureHold", function(t) {
					t.preventDefault()
				}, !1), this.runtime.canvas.addEventListener("gesturehold", function(t) {
					t.preventDefault()
				}, !1), document.addEventListener("gesturehold", function(t) {
					t.preventDefault()
				}, !1))) : window.navigator.msPointerEnabled ? (e.addEventListener("MSPointerDown", function(t) {
					r.onPointerStart(t)
				}, !1), e.addEventListener("MSPointerMove", function(t) {
					r.onPointerMove(t)
				}, !1), i.addEventListener("MSPointerUp", function(t) {
					r.onPointerEnd(t, !1)
				}, !1), i.addEventListener("MSPointerCancel", function(t) {
					r.onPointerEnd(t, !0)
				}, !1), this.runtime.canvas && (this.runtime.canvas.addEventListener("MSGestureHold", function(t) {
					t.preventDefault()
				}, !1), document.addEventListener("MSGestureHold", function(t) {
					t.preventDefault()
				}, !1))) : (e.addEventListener("touchstart", function(t) {
					r.onTouchStart(t)
				}, !1), e.addEventListener("touchmove", function(t) {
					r.onTouchMove(t)
				}, !1), i.addEventListener("touchend", function(t) {
					r.onTouchEnd(t, !1)
				}, !1), i.addEventListener("touchcancel", function(t) {
					r.onTouchEnd(t, !0)
				}, !1)), this.isWindows8) {
				var s = function(t) {
						var e = t.reading;
						r.acc_x = e.accelerationX, r.acc_y = e.accelerationY, r.acc_z = e.accelerationZ
					},
					n = function(t) {
						var e = t.reading;
						r.orient_alpha = e.yawDegrees, r.orient_beta = e.pitchDegrees, r.orient_gamma = e.rollDegrees
					},
					a = Windows.Devices.Sensors.Accelerometer.getDefault();
				a && (a.reportInterval = Math.max(a.minimumReportInterval, 16), a.addEventListener("readingchanged", s));
				var o = Windows.Devices.Sensors.Inclinometer.getDefault();
				o && (o.reportInterval = Math.max(o.minimumReportInterval, 16), o.addEventListener("readingchanged", n)), document.addEventListener("visibilitychange", function() {
					document.hidden || document.msHidden ? (a && a.removeEventListener("readingchanged", s), o && o.removeEventListener("readingchanged", n)) : (a && a.addEventListener("readingchanged", s), o && o.addEventListener("readingchanged", n))
				}, !1)
			} else window.addEventListener("deviceorientation", function(t) {
				r.orient_alpha = t.alpha || 0, r.orient_beta = t.beta || 0, r.orient_gamma = t.gamma || 0
			}, !1), window.addEventListener("devicemotion", function(t) {
				t.accelerationIncludingGravity && (r.acc_g_x = t.accelerationIncludingGravity.x || 0, r.acc_g_y = t.accelerationIncludingGravity.y || 0, r.acc_g_z = t.accelerationIncludingGravity.z || 0), t.acceleration && (r.acc_x = t.acceleration.x || 0, r.acc_y = t.acceleration.y || 0, r.acc_z = t.acceleration.z || 0)
			}, !1);
			this.useMouseInput && !this.runtime.isDomFree && (jQuery(document).mousemove(function(t) {
				r.onMouseMove(t)
			}), jQuery(document).mousedown(function(t) {
				r.onMouseDown(t)
			}), jQuery(document).mouseup(function(t) {
				r.onMouseUp(t)
			})), !this.runtime.isiOS && this.runtime.isCordova && navigator.accelerometer && navigator.accelerometer.watchAcceleration && navigator.accelerometer.watchAcceleration(t, null, {
				frequency: 40
			}), this.runtime.tick2Me(this)
		}, h.onPointerMove = function(t) {
			if (t.pointerType !== t.MSPOINTER_TYPE_MOUSE && "mouse" !== t.pointerType) {
				t.preventDefault && t.preventDefault();
				var e = this.findTouch(t.pointerId),
					i = cr.performance_now();
				if (e >= 0) {
					var r = this.runtime.isDomFree ? c : jQuery(this.runtime.canvas).offset(),
						s = this.touches[e];
					if (i - s.time < 2) return;
					s.update(i, t.pageX - r.left, t.pageY - r.top)
				}
			}
		}, h.onPointerStart = function(t) {
			if (t.pointerType !== t.MSPOINTER_TYPE_MOUSE && "mouse" !== t.pointerType) {
				t.preventDefault && cr.isCanvasInputEvent(t) && t.preventDefault(); {
					var i = this.runtime.isDomFree ? c : jQuery(this.runtime.canvas).offset(),
						r = t.pageX - i.left,
						s = t.pageY - i.top;
					cr.performance_now()
				}
				this.trigger_index = this.touches.length, this.trigger_id = t.pointerId, this.touches.push(e(r, s, t.pointerId, this.trigger_index)), this.runtime.isInUserInputEvent = !0, this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this), this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this), this.curTouchX = r, this.curTouchY = s, this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this), this.runtime.isInUserInputEvent = !1
			}
		}, h.onPointerEnd = function(t, e) {
			if (t.pointerType !== t.MSPOINTER_TYPE_MOUSE && "mouse" !== t.pointerType) {
				t.preventDefault && cr.isCanvasInputEvent(t) && t.preventDefault();
				var r = this.findTouch(t.pointerId);
				this.trigger_index = r >= 0 ? this.touches[r].startindex : -1, this.trigger_id = r >= 0 ? this.touches[r].id : -1, this.runtime.isInUserInputEvent = !0, this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this), this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this), r >= 0 && (e || this.touches[r].maybeTriggerTap(this, r), i(this.touches[r]), this.touches.splice(r, 1)), this.runtime.isInUserInputEvent = !1
			}
		}, h.onTouchMove = function(t) {
			t.preventDefault && t.preventDefault();
			var e, i, r, s, n = cr.performance_now();
			for (e = 0, i = t.changedTouches.length; i > e; e++) {
				r = t.changedTouches[e];
				var a = this.findTouch(r.identifier);
				if (a >= 0) {
					var o = this.runtime.isDomFree ? c : jQuery(this.runtime.canvas).offset();
					if (s = this.touches[a], n - s.time < 2) continue;
					s.update(n, r.pageX - o.left, r.pageY - o.top)
				}
			}
		}, h.onTouchStart = function(t) {
			t.preventDefault && cr.isCanvasInputEvent(t) && t.preventDefault(); {
				var i = this.runtime.isDomFree ? c : jQuery(this.runtime.canvas).offset();
				cr.performance_now()
			}
			this.runtime.isInUserInputEvent = !0;
			var r, s, n, a;
			for (r = 0, s = t.changedTouches.length; s > r; r++)
				if (n = t.changedTouches[r], a = this.findTouch(n.identifier), -1 === a) {
					var o = n.pageX - i.left,
						h = n.pageY - i.top;
					this.trigger_index = this.touches.length, this.trigger_id = n.identifier, this.touches.push(e(o, h, n.identifier, this.trigger_index)), this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this), this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this), this.curTouchX = o, this.curTouchY = h, this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this)
				}
			this.runtime.isInUserInputEvent = !1
		}, h.onTouchEnd = function(t, e) {
			t.preventDefault && cr.isCanvasInputEvent(t) && t.preventDefault(), this.runtime.isInUserInputEvent = !0;
			var r, s, n, a;
			for (r = 0, s = t.changedTouches.length; s > r; r++) n = t.changedTouches[r], a = this.findTouch(n.identifier), a >= 0 && (this.trigger_index = this.touches[a].startindex, this.trigger_id = this.touches[a].id, this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this), this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this), e || this.touches[a].maybeTriggerTap(this, a), i(this.touches[a]), this.touches.splice(a, 1));
			this.runtime.isInUserInputEvent = !1
		}, h.getAlpha = function() {
			return this.runtime.isCordova && 0 === this.orient_alpha && 0 !== p ? 90 * p : this.orient_alpha
		}, h.getBeta = function() {
			return this.runtime.isCordova && 0 === this.orient_beta && 0 !== u ? 90 * u : this.orient_beta
		}, h.getGamma = function() {
			return this.runtime.isCordova && 0 === this.orient_gamma && 0 !== l ? 90 * l : this.orient_gamma
		};
		h.onMouseDown = function(t) {
			var e = {
					pageX: t.pageX,
					pageY: t.pageY,
					identifier: 0
				},
				i = {
					changedTouches: [e]
				};
			this.onTouchStart(i), this.mouseDown = !0
		}, h.onMouseMove = function(t) {
			if (this.mouseDown) {
				var e = {
						pageX: t.pageX,
						pageY: t.pageY,
						identifier: 0
					},
					i = {
						changedTouches: [e]
					};
				this.onTouchMove(i)
			}
		}, h.onMouseUp = function(t) {
			t.preventDefault && this.runtime.had_a_click && !this.runtime.isMobile && t.preventDefault(), this.runtime.had_a_click = !0;
			var e = {
					pageX: t.pageX,
					pageY: t.pageY,
					identifier: 0
				},
				i = {
					changedTouches: [e]
				};
			this.onTouchEnd(i), this.mouseDown = !1
		}, h.tick2 = function() {
			var t, e, i, r = cr.performance_now();
			for (t = 0, e = this.touches.length; e > t; ++t) i = this.touches[t], i.time <= r - 50 && (i.lasttime = r), i.maybeTriggerHold(this, t)
		}, s.prototype.OnTouchStart = function() {
			return !0
		}, s.prototype.OnTouchEnd = function() {
			return !0
		}, s.prototype.IsInTouch = function() {
			return this.touches.length
		}, s.prototype.OnTouchObject = function(t) {
			return t ? this.runtime.testAndSelectCanvasPointOverlap(t, this.curTouchX, this.curTouchY, !1) : !1
		};
		var x = [];
		s.prototype.IsTouchingObject = function(t) {
			if (!t) return !1;
			var e, i, r, s, n, a, o = t.getCurrentSol(),
				h = o.getObjects();
			for (r = 0, s = h.length; s > r; r++) {
				var c = h[r];
				for (c.update_bbox(), n = 0, a = this.touches.length; a > n; n++) {
					var l = this.touches[n];
					if (e = c.layer.canvasToLayer(l.x, l.y, !0), i = c.layer.canvasToLayer(l.x, l.y, !1), c.contains_pt(e, i)) {
						x.push(c);
						break
					}
				}
			}
			return x.length ? (o.select_all = !1, cr.shallowAssignArray(o.instances, x), t.applySolToContainer(), cr.clearArray(x), !0) : !1
		}, s.prototype.CompareTouchSpeed = function(t, e, i) {
			if (t = Math.floor(t), 0 > t || t >= this.touches.length) return !1;
			var r = this.touches[t],
				s = cr.distanceTo(r.x, r.y, r.lastx, r.lasty),
				n = (r.time - r.lasttime) / 1e3,
				a = 0;
			return n > 0 && (a = s / n), cr.do_cmp(a, e, i)
		}, s.prototype.OrientationSupported = function() {
			return "undefined" != typeof window.DeviceOrientationEvent
		}, s.prototype.MotionSupported = function() {
			return "undefined" != typeof window.DeviceMotionEvent
		}, s.prototype.CompareOrientation = function(t, e, i) {
			var r = 0;
			return r = 0 === t ? this.getAlpha() : 1 === t ? this.getBeta() : this.getGamma(), cr.do_cmp(r, e, i)
		}, s.prototype.CompareAcceleration = function(t, e, i) {
			var r = 0;
			return 0 === t ? r = this.acc_g_x : 1 === t ? r = this.acc_g_y : 2 === t ? r = this.acc_g_z : 3 === t ? r = this.acc_x : 4 === t ? r = this.acc_y : 5 === t && (r = this.acc_z), cr.do_cmp(r, e, i)
		}, s.prototype.OnNthTouchStart = function(t) {
			return t = Math.floor(t), t === this.trigger_index
		}, s.prototype.OnNthTouchEnd = function(t) {
			return t = Math.floor(t), t === this.trigger_index
		}, s.prototype.HasNthTouch = function(t) {
			return t = Math.floor(t), this.touches.length >= t + 1
		}, s.prototype.OnHoldGesture = function() {
			return !0
		}, s.prototype.OnTapGesture = function() {
			return !0
		}, s.prototype.OnDoubleTapGesture = function() {
			return !0
		}, s.prototype.OnHoldGestureObject = function(t) {
			return t ? this.runtime.testAndSelectCanvasPointOverlap(t, this.curTouchX, this.curTouchY, !1) : !1
		}, s.prototype.OnTapGestureObject = function(t) {
			return t ? this.runtime.testAndSelectCanvasPointOverlap(t, this.curTouchX, this.curTouchY, !1) : !1
		}, s.prototype.OnDoubleTapGestureObject = function(t) {
			return t ? this.runtime.testAndSelectCanvasPointOverlap(t, this.curTouchX, this.curTouchY, !1) : !1
		}, a.cnds = new s, n.prototype.TouchCount = function(t) {
			t.set_int(this.touches.length)
		}, n.prototype.X = function(t, e) {
			var i = this.getTouchIndex;
			if (0 > i || i >= this.touches.length) return void t.set_float(0);
			var r, s, n, a, o;
			cr.is_undefined(e) ? (r = this.runtime.getLayerByNumber(0), s = r.scale, n = r.zoomRate, a = r.parallaxX, o = r.angle, r.scale = 1, r.zoomRate = 1, r.parallaxX = 1, r.angle = 0, t.set_float(r.canvasToLayer(this.touches[i].x, this.touches[i].y, !0)), r.scale = s, r.zoomRate = n, r.parallaxX = a, r.angle = o) : (r = cr.is_number(e) ? this.runtime.getLayerByNumber(e) : this.runtime.getLayerByName(e), t.set_float(r ? r.canvasToLayer(this.touches[i].x, this.touches[i].y, !0) : 0))
		}, n.prototype.XAt = function(t, e, i) {
			if (e = Math.floor(e), 0 > e || e >= this.touches.length) return void t.set_float(0);
			var r, s, n, a, o;
			cr.is_undefined(i) ? (r = this.runtime.getLayerByNumber(0), s = r.scale, n = r.zoomRate, a = r.parallaxX, o = r.angle, r.scale = 1, r.zoomRate = 1, r.parallaxX = 1, r.angle = 0, t.set_float(r.canvasToLayer(this.touches[e].x, this.touches[e].y, !0)), r.scale = s, r.zoomRate = n, r.parallaxX = a, r.angle = o) : (r = cr.is_number(i) ? this.runtime.getLayerByNumber(i) : this.runtime.getLayerByName(i), t.set_float(r ? r.canvasToLayer(this.touches[e].x, this.touches[e].y, !0) : 0))
		}, n.prototype.XForID = function(t, e, i) {
			var r = this.findTouch(e);
			if (0 > r) return void t.set_float(0);
			var s, n, a, o, h, c = this.touches[r];
			cr.is_undefined(i) ? (s = this.runtime.getLayerByNumber(0), n = s.scale, a = s.zoomRate, o = s.parallaxX, h = s.angle, s.scale = 1, s.zoomRate = 1, s.parallaxX = 1, s.angle = 0, t.set_float(s.canvasToLayer(c.x, c.y, !0)), s.scale = n, s.zoomRate = a, s.parallaxX = o, s.angle = h) : (s = cr.is_number(i) ? this.runtime.getLayerByNumber(i) : this.runtime.getLayerByName(i), t.set_float(s ? s.canvasToLayer(c.x, c.y, !0) : 0))
		}, n.prototype.Y = function(t, e) {
			var i = this.getTouchIndex;
			if (0 > i || i >= this.touches.length) return void t.set_float(0);
			var r, s, n, a, o;
			cr.is_undefined(e) ? (r = this.runtime.getLayerByNumber(0), s = r.scale, n = r.zoomRate, a = r.parallaxY, o = r.angle, r.scale = 1, r.zoomRate = 1, r.parallaxY = 1, r.angle = 0, t.set_float(r.canvasToLayer(this.touches[i].x, this.touches[i].y, !1)), r.scale = s, r.zoomRate = n, r.parallaxY = a, r.angle = o) : (r = cr.is_number(e) ? this.runtime.getLayerByNumber(e) : this.runtime.getLayerByName(e), t.set_float(r ? r.canvasToLayer(this.touches[i].x, this.touches[i].y, !1) : 0))
		}, n.prototype.YAt = function(t, e, i) {
			if (e = Math.floor(e), 0 > e || e >= this.touches.length) return void t.set_float(0);
			var r, s, n, a, o;
			cr.is_undefined(i) ? (r = this.runtime.getLayerByNumber(0), s = r.scale, n = r.zoomRate, a = r.parallaxY, o = r.angle, r.scale = 1, r.zoomRate = 1, r.parallaxY = 1, r.angle = 0, t.set_float(r.canvasToLayer(this.touches[e].x, this.touches[e].y, !1)), r.scale = s, r.zoomRate = n, r.parallaxY = a, r.angle = o) : (r = cr.is_number(i) ? this.runtime.getLayerByNumber(i) : this.runtime.getLayerByName(i), t.set_float(r ? r.canvasToLayer(this.touches[e].x, this.touches[e].y, !1) : 0))
		}, n.prototype.YForID = function(t, e, i) {
			var r = this.findTouch(e);
			if (0 > r) return void t.set_float(0);
			var s, n, a, o, h, c = this.touches[r];
			cr.is_undefined(i) ? (s = this.runtime.getLayerByNumber(0), n = s.scale, a = s.zoomRate, o = s.parallaxY, h = s.angle, s.scale = 1, s.zoomRate = 1, s.parallaxY = 1, s.angle = 0, t.set_float(s.canvasToLayer(c.x, c.y, !1)), s.scale = n, s.zoomRate = a, s.parallaxY = o, s.angle = h) : (s = cr.is_number(i) ? this.runtime.getLayerByNumber(i) : this.runtime.getLayerByName(i), t.set_float(s ? s.canvasToLayer(c.x, c.y, !1) : 0))
		}, n.prototype.AbsoluteX = function(t) {
			t.set_float(this.touches.length ? this.touches[0].x : 0)
		}, n.prototype.AbsoluteXAt = function(t, e) {
			return e = Math.floor(e), 0 > e || e >= this.touches.length ? void t.set_float(0) : void t.set_float(this.touches[e].x)
		}, n.prototype.AbsoluteXForID = function(t, e) {
			var i = this.findTouch(e);
			if (0 > i) return void t.set_float(0);
			var r = this.touches[i];
			t.set_float(r.x)
		}, n.prototype.AbsoluteY = function(t) {
			t.set_float(this.touches.length ? this.touches[0].y : 0)
		}, n.prototype.AbsoluteYAt = function(t, e) {
			return e = Math.floor(e), 0 > e || e >= this.touches.length ? void t.set_float(0) : void t.set_float(this.touches[e].y)
		}, n.prototype.AbsoluteYForID = function(t, e) {
			var i = this.findTouch(e);
			if (0 > i) return void t.set_float(0);
			var r = this.touches[i];
			t.set_float(r.y)
		}, n.prototype.SpeedAt = function(t, e) {
			if (e = Math.floor(e), 0 > e || e >= this.touches.length) return void t.set_float(0);
			var i = this.touches[e],
				r = cr.distanceTo(i.x, i.y, i.lastx, i.lasty),
				s = (i.time - i.lasttime) / 1e3;
			t.set_float(0 === s ? 0 : r / s)
		}, n.prototype.SpeedForID = function(t, e) {
			var i = this.findTouch(e);
			if (0 > i) return void t.set_float(0);
			var r = this.touches[i],
				s = cr.distanceTo(r.x, r.y, r.lastx, r.lasty),
				n = (r.time - r.lasttime) / 1e3;
			t.set_float(0 === n ? 0 : s / n)
		}, n.prototype.AngleAt = function(t, e) {
			if (e = Math.floor(e), 0 > e || e >= this.touches.length) return void t.set_float(0);
			var i = this.touches[e];
			t.set_float(cr.to_degrees(cr.angleTo(i.lastx, i.lasty, i.x, i.y)))
		}, n.prototype.AngleForID = function(t, e) {
			var i = this.findTouch(e);
			if (0 > i) return void t.set_float(0);
			var r = this.touches[i];
			t.set_float(cr.to_degrees(cr.angleTo(r.lastx, r.lasty, r.x, r.y)))
		}, n.prototype.Alpha = function(t) {
			t.set_float(this.getAlpha())
		}, n.prototype.Beta = function(t) {
			t.set_float(this.getBeta())
		}, n.prototype.Gamma = function(t) {
			t.set_float(this.getGamma())
		}, n.prototype.AccelerationXWithG = function(t) {
			t.set_float(this.acc_g_x)
		}, n.prototype.AccelerationYWithG = function(t) {
			t.set_float(this.acc_g_y)
		}, n.prototype.AccelerationZWithG = function(t) {
			t.set_float(this.acc_g_z)
		}, n.prototype.AccelerationX = function(t) {
			t.set_float(this.acc_x)
		}, n.prototype.AccelerationY = function(t) {
			t.set_float(this.acc_y)
		}, n.prototype.AccelerationZ = function(t) {
			t.set_float(this.acc_z)
		}, n.prototype.TouchIndex = function(t) {
			t.set_int(this.trigger_index)
		}, n.prototype.TouchID = function(t) {
			t.set_float(this.trigger_id)
		}, a.exps = new n
	}(), cr.behaviors.Anchor = function(t) {
		this.runtime = t
	},
	function() {
		function t() {}

		function e() {}

		function i() {}
		var r = cr.behaviors.Anchor.prototype;
		r.Type = function(t, e) {
			this.behavior = t, this.objtype = e, this.runtime = t.runtime
		};
		var s = r.Type.prototype;
		s.onCreate = function() {}, r.Instance = function(t, e) {
			this.type = t, this.behavior = t.behavior, this.inst = e, this.runtime = t.runtime
		};
		var n = r.Instance.prototype;
		n.onCreate = function() {
			this.anch_left = this.properties[0], this.anch_top = this.properties[1], this.anch_right = this.properties[2], this.anch_bottom = this.properties[3], this.inst.update_bbox(), this.xleft = this.inst.bbox.left, this.ytop = this.inst.bbox.top, this.xright = this.runtime.original_width - this.inst.bbox.left, this.ybottom = this.runtime.original_height - this.inst.bbox.top, this.rdiff = this.runtime.original_width - this.inst.bbox.right, this.bdiff = this.runtime.original_height - this.inst.bbox.bottom, this.enabled = 0 !== this.properties[4]
		}, n.saveToJSON = function() {
			return {
				xleft: this.xleft,
				ytop: this.ytop,
				xright: this.xright,
				ybottom: this.ybottom,
				rdiff: this.rdiff,
				bdiff: this.bdiff,
				enabled: this.enabled
			}
		}, n.loadFromJSON = function(t) {
			this.xleft = t.xleft, this.ytop = t.ytop, this.xright = t.xright, this.ybottom = t.ybottom, this.rdiff = t.rdiff, this.bdiff = t.bdiff, this.enabled = t.enabled
		}, n.tick = function() {
			if (this.enabled) {
				var t, e = this.inst.layer,
					i = this.inst,
					r = this.inst.bbox;
				0 === this.anch_left ? (i.update_bbox(), t = e.viewLeft + this.xleft - r.left, 0 !== t && (i.x += t, i.set_bbox_changed())) : 1 === this.anch_left && (i.update_bbox(), t = e.viewRight - this.xright - r.left, 0 !== t && (i.x += t, i.set_bbox_changed())), 0 === this.anch_top ? (i.update_bbox(), t = e.viewTop + this.ytop - r.top, 0 !== t && (i.y += t, i.set_bbox_changed())) : 1 === this.anch_top && (i.update_bbox(), t = e.viewBottom - this.ybottom - r.top, 0 !== t && (i.y += t, i.set_bbox_changed())), 1 === this.anch_right && (i.update_bbox(), t = e.viewRight - this.rdiff - r.right, 0 !== t && (i.width += t, i.width < 0 && (i.width = 0), i.set_bbox_changed())), 1 === this.anch_bottom && (i.update_bbox(), t = e.viewBottom - this.bdiff - r.bottom, 0 !== t && (i.height += t, i.height < 0 && (i.height = 0), i.set_bbox_changed()))
			}
		}, r.cnds = new t, e.prototype.SetEnabled = function(t) {
			this.enabled && 0 === t ? this.enabled = !1 : this.enabled || 0 === t || (this.inst.update_bbox(), this.xleft = this.inst.bbox.left, this.ytop = this.inst.bbox.top, this.xright = this.runtime.original_width - this.inst.bbox.left, this.ybottom = this.runtime.original_height - this.inst.bbox.top, this.rdiff = this.runtime.original_width - this.inst.bbox.right, this.bdiff = this.runtime.original_height - this.inst.bbox.bottom, this.enabled = !0)
		}, r.acts = new e, r.exps = new i
	}(), cr.behaviors.Bullet = function(t) {
		this.runtime = t
	},
	function() {
		function t() {}

		function e() {}

		function i() {}
		var r = cr.behaviors.Bullet.prototype;
		r.Type = function(t, e) {
			this.behavior = t, this.objtype = e, this.runtime = t.runtime
		};
		var s = r.Type.prototype;
		s.onCreate = function() {}, r.Instance = function(t, e) {
			this.type = t, this.behavior = t.behavior, this.inst = e, this.runtime = t.runtime
		};
		var n = r.Instance.prototype;
		n.onCreate = function() {
			var t = this.properties[0];
			this.acc = this.properties[1], this.g = this.properties[2], this.bounceOffSolid = 0 !== this.properties[3], this.setAngle = 0 !== this.properties[4], this.dx = Math.cos(this.inst.angle) * t, this.dy = Math.sin(this.inst.angle) * t, this.lastx = this.inst.x, this.lasty = this.inst.y, this.lastKnownAngle = this.inst.angle, this.travelled = 0, this.enabled = 0 !== this.properties[5]
		}, n.saveToJSON = function() {
			return {
				acc: this.acc,
				g: this.g,
				dx: this.dx,
				dy: this.dy,
				lx: this.lastx,
				ly: this.lasty,
				lka: this.lastKnownAngle,
				t: this.travelled,
				e: this.enabled
			}
		}, n.loadFromJSON = function(t) {
			this.acc = t.acc, this.g = t.g, this.dx = t.dx, this.dy = t.dy, this.lastx = t.lx, this.lasty = t.ly, this.lastKnownAngle = t.lka, this.travelled = t.t, this.enabled = t.e
		}, n.tick = function() {
			if (this.enabled) {
				var t, e, i, r, s = this.runtime.getDt(this.inst);
				this.inst.angle !== this.lastKnownAngle && (this.setAngle && (t = cr.distanceTo(0, 0, this.dx, this.dy), this.dx = Math.cos(this.inst.angle) * t, this.dy = Math.sin(this.inst.angle) * t), this.lastKnownAngle = this.inst.angle), 0 !== this.acc && (t = cr.distanceTo(0, 0, this.dx, this.dy), e = 0 === this.dx && 0 === this.dy ? this.inst.angle : cr.angleTo(0, 0, this.dx, this.dy), t += this.acc * s, 0 > t && (t = 0), this.dx = Math.cos(e) * t, this.dy = Math.sin(e) * t), 0 !== this.g && (this.dy += this.g * s), this.lastx = this.inst.x, this.lasty = this.inst.y, (0 !== this.dx || 0 !== this.dy) && (this.inst.x += this.dx * s, this.inst.y += this.dy * s, this.travelled += cr.distanceTo(0, 0, this.dx * s, this.dy * s), this.setAngle && (this.inst.angle = cr.angleTo(0, 0, this.dx, this.dy), this.inst.set_bbox_changed(), this.lastKnownAngle = this.inst.angle), this.inst.set_bbox_changed(), this.bounceOffSolid && (i = this.runtime.testOverlapSolid(this.inst), i && (this.runtime.registerCollision(this.inst, i), t = cr.distanceTo(0, 0, this.dx, this.dy), r = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty), this.dx = Math.cos(r) * t, this.dy = Math.sin(r) * t, this.inst.x += this.dx * s, this.inst.y += this.dy * s, this.inst.set_bbox_changed(), this.setAngle && (this.inst.angle = r, this.lastKnownAngle = r, this.inst.set_bbox_changed()), this.runtime.pushOutSolid(this.inst, this.dx / t, this.dy / t, Math.max(2.5 * t * s, 30)) || this.runtime.pushOutSolidNearest(this.inst, 100))))
			}
		}, t.prototype.CompareSpeed = function(t, e) {
			return cr.do_cmp(cr.distanceTo(0, 0, this.dx, this.dy), t, e)
		}, t.prototype.CompareTravelled = function(t, e) {
			return cr.do_cmp(this.travelled, t, e)
		}, r.cnds = new t, e.prototype.SetSpeed = function(t) {
			var e = cr.angleTo(0, 0, this.dx, this.dy);
			this.dx = Math.cos(e) * t, this.dy = Math.sin(e) * t
		}, e.prototype.SetAcceleration = function(t) {
			this.acc = t
		}, e.prototype.SetGravity = function(t) {
			this.g = t
		}, e.prototype.SetAngleOfMotion = function(t) {
			t = cr.to_radians(t);
			var e = cr.distanceTo(0, 0, this.dx, this.dy);
			this.dx = Math.cos(t) * e, this.dy = Math.sin(t) * e
		}, e.prototype.Bounce = function(t) {
			if (t) {
				var e = t.getFirstPicked(this.inst);
				if (e) {
					var i = this.runtime.getDt(this.inst),
						r = cr.distanceTo(0, 0, this.dx, this.dy),
						s = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty, e);
					this.dx = Math.cos(s) * r, this.dy = Math.sin(s) * r, this.inst.x += this.dx * i, this.inst.y += this.dy * i, this.inst.set_bbox_changed(), this.setAngle && (this.inst.angle = s, this.lastKnownAngle = s, this.inst.set_bbox_changed()), this.bounceOffSolid ? this.runtime.pushOutSolid(this.inst, this.dx / r, this.dy / r, Math.max(2.5 * r * i, 30)) || this.runtime.pushOutSolidNearest(this.inst, 100) : this.runtime.pushOut(this.inst, this.dx / r, this.dy / r, Math.max(2.5 * r * i, 30), e)
				}
			}
		}, e.prototype.SetDistanceTravelled = function(t) {
			this.travelled = t
		}, e.prototype.SetEnabled = function(t) {
			this.enabled = 1 === t
		}, r.acts = new e, i.prototype.Speed = function(t) {
			var e = cr.distanceTo(0, 0, this.dx, this.dy);
			e = cr.round6dp(e), t.set_float(e)
		}, i.prototype.Acceleration = function(t) {
			t.set_float(this.acc)
		}, i.prototype.AngleOfMotion = function(t) {
			t.set_float(cr.to_degrees(cr.angleTo(0, 0, this.dx, this.dy)))
		}, i.prototype.DistanceTravelled = function(t) {
			t.set_float(this.travelled)
		}, r.exps = new i
	}(), cr.behaviors.Timer = function(t) {
		this.runtime = t
	},
	function() {
		function t() {}

		function e() {}

		function i() {}
		var r = cr.behaviors.Timer.prototype;
		r.Type = function(t, e) {
			this.behavior = t, this.objtype = e, this.runtime = t.runtime
		};
		var s = r.Type.prototype;
		s.onCreate = function() {}, r.Instance = function(t, e) {
			this.type = t, this.behavior = t.behavior, this.inst = e, this.runtime = t.runtime
		};
		var n = r.Instance.prototype;
		n.onCreate = function() {
			this.timers = {}
		}, n.onDestroy = function() {
			cr.wipe(this.timers)
		}, n.saveToJSON = function() {
			var t, e, i = {};
			for (t in this.timers) this.timers.hasOwnProperty(t) && (e = this.timers[t], i[t] = {
				c: e.current.sum,
				t: e.total.sum,
				d: e.duration,
				r: e.regular
			});
			return i
		}, n.loadFromJSON = function(t) {
			this.timers = {};
			var e;
			for (e in t) t.hasOwnProperty(e) && (this.timers[e] = {
				current: new cr.KahanAdder,
				total: new cr.KahanAdder,
				duration: t[e].d,
				regular: t[e].r
			}, this.timers[e].current.sum = t[e].c, this.timers[e].total.sum = t[e].t)
		}, n.tick = function() {
			var t, e, i = this.runtime.getDt(this.inst);
			for (t in this.timers) this.timers.hasOwnProperty(t) && (e = this.timers[t], e.current.add(i), e.total.add(i))
		}, n.tick2 = function() {
			var t, e;
			for (t in this.timers) this.timers.hasOwnProperty(t) && (e = this.timers[t], e.current.sum >= e.duration && (e.regular ? e.current.sum -= e.duration : delete this.timers[t]))
		}, t.prototype.OnTimer = function(t) {
			t = t.toLowerCase();
			var e = this.timers[t];
			return e ? e.current.sum >= e.duration : !1
		}, r.cnds = new t, e.prototype.StartTimer = function(t, e, i) {
			this.timers[i.toLowerCase()] = {
				current: new cr.KahanAdder,
				total: new cr.KahanAdder,
				duration: t,
				regular: 1 === e
			}
		}, e.prototype.StopTimer = function(t) {
			t = t.toLowerCase(), this.timers.hasOwnProperty(t) && delete this.timers[t]
		}, r.acts = new e, i.prototype.CurrentTime = function(t, e) {
			var i = this.timers[e.toLowerCase()];
			t.set_float(i ? i.current.sum : 0)
		}, i.prototype.TotalTime = function(t, e) {
			var i = this.timers[e.toLowerCase()];
			t.set_float(i ? i.total.sum : 0)
		}, i.prototype.Duration = function(t, e) {
			var i = this.timers[e.toLowerCase()];
			t.set_float(i ? i.duration : 0)
		}, r.exps = new i
	}();
var easeOutBounceArray = [],
	easeInElasticArray = [],
	easeOutElasticArray = [],
	easeInOutElasticArray = [],
	easeInCircle = [],
	easeOutCircle = [],
	easeInOutCircle = [],
	easeOutBack = [],
	easeInOutBack = [],
	litetween_precision = 1e4,
	updateLimit = 0;
! function() {
	for (var t = 1, e = 0, i = 1, r = 0, s = 0, n = 0, a = 0, o = 0, h = 0; litetween_precision >= h; h++) {
		if (a = h / litetween_precision, r = (a /= t) < 1 / 2.75 ? 7.5625 * i * a * a + e : 2 / 2.75 > a ? i * (7.5625 * (a -= 1.5 / 2.75) * a + .75) + e : 2.5 / 2.75 > a ? i * (7.5625 * (a -= 2.25 / 2.75) * a + .9375) + e : i * (7.5625 * (a -= 2.625 / 2.75) * a + .984375) + e, easeOutBounceArray[h] = easeOutBounce(h / litetween_precision, e, i, t), a = h / litetween_precision, s = 0, n = 0, 0 == a && (r = e), 1 == (a /= t) && (r = e + i), 0 == n && (n = .3 * t), 0 == s || s < Math.abs(i)) {
			s = i;
			var o = n / 4
		} else var o = n / (2 * Math.PI) * Math.asin(i / s);
		if (r = -(s * Math.pow(2, 10 * (a -= 1)) * Math.sin(2 * (a * t - o) * Math.PI / n)) + e, easeInElasticArray[h] = r, a = h / litetween_precision, s = 0, n = 0, 0 == a && (r = e), 1 == (a /= t) && (r = e + i), 0 == n && (n = .3 * t), 0 == s || s < Math.abs(i)) {
			s = i;
			var o = n / 4
		} else var o = n / (2 * Math.PI) * Math.asin(i / s);
		if (r = s * Math.pow(2, -10 * a) * Math.sin(2 * (a * t - o) * Math.PI / n) + i + e, easeOutElasticArray[h] = r, a = h / litetween_precision, s = 0, n = 0, 0 == a && (r = e), 2 == (a /= t / 2) && (r = e + i), 0 == n && (n = .3 * t * 1.5), 0 == s || s < Math.abs(i)) {
			s = i;
			var o = n / 4
		} else var o = n / (2 * Math.PI) * Math.asin(i / s);
		r = 1 > a ? -.5 * s * Math.pow(2, 10 * (a -= 1)) * Math.sin(2 * (a * t - o) * Math.PI / n) + e : s * Math.pow(2, -10 * (a -= 1)) * Math.sin(2 * (a * t - o) * Math.PI / n) * .5 + i + e, easeInOutElasticArray[h] = r, a = h / litetween_precision, easeInCircle[h] = -(Math.sqrt(1 - a * a) - 1), a = h / litetween_precision, easeOutCircle[h] = Math.sqrt(1 - (a - 1) * (a - 1)), a = h / litetween_precision, r = (a /= t / 2) < 1 ? -i / 2 * (Math.sqrt(1 - a * a) - 1) + e : i / 2 * (Math.sqrt(1 - (a -= 2) * a) + 1) + e, easeInOutCircle[h] = r, a = h / litetween_precision, o = 0, 0 == o && (o = 1.70158), r = i * ((a = a / t - 1) * a * ((o + 1) * a + o) + 1) + e, easeOutBack[h] = r, a = h / litetween_precision, o = 0, 0 == o && (o = 1.70158), r = (a /= t / 2) < 1 ? i / 2 * a * a * (((o *= 1.525) + 1) * a - o) + e : i / 2 * ((a -= 2) * a * (((o *= 1.525) + 1) * a + o) + 2) + e, easeInOutBack[h] = r
	}
}();
var TweenObject = function() {
	var t = function(t, e, i, r, s, n, a) {
		this.name = t, this.value = 0, this.setInitial(r), this.setTarget(s), this.easefunc = i, this.tweened = e, this.duration = n, this.progress = 0, this.state = 0, this.onStart = !1, this.onEnd = !1, this.onReverseStart = !1, this.onReverseEnd = !1, this.lastKnownValue = 0, this.lastKnownValue2 = 0, this.enforce = a, this.pingpong = 1, this.flipEase = !1
	};
	return t
}();
! function() {
	TweenObject.prototype = {}, TweenObject.prototype.flipTarget = function() {
		var t = this.initialparam1,
			e = this.initialparam2;
		this.initialparam1 = this.targetparam1, this.initialparam2 = this.targetparam2, this.targetparam1 = t, this.targetparam2 = e, this.lastKnownValue = 0, this.lastKnownValue2 = 0
	}, TweenObject.prototype.setInitial = function(t) {
		this.initialparam1 = parseFloat(t.split(",")[0]), this.initialparam2 = parseFloat(t.split(",")[1]), this.lastKnownValue = 0, this.lastKnownValue2 = 0
	}, TweenObject.prototype.setTarget = function(t) {
		this.targetparam1 = parseFloat(t.split(",")[0]), this.targetparam2 = parseFloat(t.split(",")[1]), isNaN(this.targetparam2) && (this.targetparam2 = this.targetparam1)
	}, TweenObject.prototype.OnTick = function(t) {
		if (0 === this.state) return -1;
		if (1 === this.state && (this.progress += t), 2 === this.state && (this.progress -= t), 3 === this.state && (this.state = 0), (4 === this.state || 6 === this.state) && (this.progress += t * this.pingpong), 5 === this.state && (this.progress += t * this.pingpong), this.progress < 0) return this.progress = 0, 4 === this.state ? this.pingpong = 1 : 6 === this.state ? (this.pingpong = 1, this.flipEase = !1) : this.state = 0, this.onReverseEnd = !0, 0;
		if (this.progress > this.duration) return this.progress = this.duration, 4 === this.state ? this.pingpong = -1 : 6 === this.state ? (this.pingpong = -1, this.flipEase = !0) : 5 === this.state ? this.progress = 0 : this.state = 0, this.onEnd = !0, 1;
		if (this.flipEase) var e = easeFunc(this.easefunc, this.duration - this.progress, 0, 1, this.duration, this.flipEase);
		else var e = easeFunc(this.easefunc, this.progress, 0, 1, this.duration, this.flipEase);
		return e
	}
}(), cr.behaviors.lunarray_LiteTween = function(t) {
		this.runtime = t
	},
	function() {
		var t = cr.behaviors.lunarray_LiteTween.prototype;
		t.Type = function(t, e) {
			this.behavior = t, this.objtype = e, this.runtime = t.runtime
		};
		var e = t.Type.prototype;
		e.onCreate = function() {}, t.Instance = function(t, e) {
			this.type = t, this.behavior = t.behavior, this.inst = e, this.runtime = t.runtime, this.i = 0
		};
		var i = t.Instance.prototype;
		i.onCreate = function() {
			this.playmode = this.properties[0], this.active = 1 == this.playmode || 2 == this.playmode || 3 == this.playmode || 4 == this.playmode, this.tweened = this.properties[1], this.easing = this.properties[2], this.target = this.properties[3], this.targetmode = this.properties[4], this.useCurrent = !1, 1 === this.targetmode && (this.target = "relative(" + this.target + ")"), this.duration = this.properties[5], this.enforce = 1 === this.properties[6], this.value = 0, this.tween_list = {}, this.addToTweenList("default", this.tweened, this.easing, "current", this.target, this.duration, this.enforce), 1 === this.properties[0] && this.startTween(0), 2 === this.properties[0] && this.startTween(2), 3 === this.properties[0] && this.startTween(3), 4 === this.properties[0] && this.startTween(4)
		}, i.parseCurrent = function(t, e) {
			void 0 === e && (e = "current");
			var i = trim(e);
			e = trim(e);
			var r = this.value;
			if ("current" === e) switch (t) {
				case 0:
					i = this.inst.x + "," + this.inst.y;
					break;
				case 1:
					i = this.inst.width + "," + this.inst.height;
					break;
				case 2:
					i = this.inst.width + "," + this.inst.height;
					break;
				case 3:
					i = this.inst.width + "," + this.inst.height;
					break;
				case 4:
					i = cr.to_degrees(this.inst.angle) + "," + cr.to_degrees(this.inst.angle);
					break;
				case 5:
					i = 100 * this.inst.opacity + "," + 100 * this.inst.opacity;
					break;
				case 6:
					i = r + "," + r;
					break;
				case 7:
					i = this.inst.x + "," + this.inst.y;
					break;
				case 8:
					i = this.inst.x + "," + this.inst.y;
					break;
				case 9:
					i = void 0 !== this.inst.curFrame ? this.inst.width / this.inst.curFrame.width + "," + this.inst.height / this.inst.curFrame.height : "1,1"
			}
			if ("relative" === e.substring(0, 8)) {
				var s = e.match(/\((.*?)\)/);
				if (s) var n = parseFloat(s[1].split(",")[0]),
					a = parseFloat(s[1].split(",")[1]);
				switch (isNaN(n) && (n = 0), isNaN(a) && (a = 0), t) {
					case 0:
						i = this.inst.x + n + "," + (this.inst.y + a);
						break;
					case 1:
						i = this.inst.width + n + "," + (this.inst.height + a);
						break;
					case 2:
						i = this.inst.width + n + "," + (this.inst.height + a);
						break;
					case 3:
						i = this.inst.width + n + "," + (this.inst.height + a);
						break;
					case 4:
						i = cr.to_degrees(this.inst.angle) + n + "," + (cr.to_degrees(this.inst.angle) + a);
						break;
					case 5:
						i = 100 * this.inst.opacity + n + "," + (100 * this.inst.opacity + a);
						break;
					case 6:
						i = r + n + "," + r + n;
						break;
					case 7:
						i = this.inst.x + n + "," + this.inst.y;
						break;
					case 8:
						i = this.inst.x + "," + (this.inst.y + n);
						break;
					case 9:
						i = n + "," + a
				}
			}
			return i
		}, i.addToTweenList = function(t, e, i, r, s, n, a) {
			r = this.parseCurrent(e, r), s = this.parseCurrent(e, s), void 0 !== this.tween_list[t] && delete this.tween_list[t], this.tween_list[t] = new TweenObject(t, e, i, r, s, n, a), this.tween_list[t].dt = 0
		}, i.saveToJSON = function() {
			JSON.stringify(this.tween_list["default"]);
			return {
				playmode: this.playmode,
				active: this.active,
				tweened: this.tweened,
				easing: this.easing,
				target: this.target,
				targetmode: this.targetmode,
				useCurrent: this.useCurrent,
				duration: this.duration,
				enforce: this.enforce,
				value: this.value,
				tweenlist: JSON.stringify(this.tween_list["default"])
			}
		}, TweenObject.Load = function(t, e, i, r, s, n, a, o) {
			var h = new TweenObject(e, i, r, s, n, a, o);
			for (var c in t) h[c] = t[c];
			return h
		}, i.loadFromJSON = function(t) {
			var e = JSON.parse(t.tweenlist),
				i = TweenObject.Load(e, e.name, e.tweened, e.easefunc, e.initialparam1 + "," + e.initialparam2, e.targetparam1 + "," + e.targetparam2, e.duration, e.enforce);
			this.tween_list["default"] = i, this.playmode = t.playmode, this.active = t.active, this.movement = t.tweened, this.easing = t.easing, this.target = t.target, this.targetmode = t.targetmode, this.useCurrent = t.useCurrent, this.duration = t.duration, this.enforce = t.enforce, this.value = t.value
		}, i.setProgressTo = function(t) {
			t > 1 && (t = 1), 0 > t && (t = 0);
			for (var e in this.tween_list) {
				var i = this.tween_list[e];
				i.lastKnownValue = 0, i.lastKnownValue2 = 0, i.state = 3, i.progress = t * i.duration;
				var r = i.OnTick(0);
				this.updateTween(i, r)
			}
		}, i.startTween = function(t) {
			for (var e in this.tween_list) {
				var i = this.tween_list[e];
				if (this.useCurrent) {
					var r = this.parseCurrent(i.tweened, "current"),
						s = this.parseCurrent(i.tweened, this.target);
					i.setInitial(r), i.setTarget(s)
				}
				0 === t && (i.progress = 1e-6, i.lastKnownValue = 0, i.lastKnownValue2 = 0, i.onStart = !0, i.state = 1), 1 === t && (i.state = 1), (2 === t || 4 === t) && (i.progress = 1e-6, i.lastKnownValue = 0, i.lastKnownValue2 = 0, i.onStart = !0, 2 == t && (i.state = 4), 4 == t && (i.state = 6)), 3 === t && (i.progress = 1e-6, i.lastKnownValue = 0, i.lastKnownValue2 = 0, i.onStart = !0, i.state = 5)
			}
		}, i.stopTween = function(t) {
			for (var e in this.tween_list) {
				var i = this.tween_list[e];
				1 === t && (i.progress = 0), 2 === t && (i.progress = i.duration), i.state = 3;
				var r = i.OnTick(0);
				this.updateTween(i, r)
			}
		}, i.reverseTween = function(t) {
			for (var e in this.tween_list) {
				var i = this.tween_list[e];
				1 === t && (i.progress = i.duration, i.lastKnownValue = 0, i.lastKnownValue2 = 0, i.onReverseStart = !0), i.state = 2
			}
		}, i.updateTween = function(t, e) {
			if (0 === t.tweened) t.enforce ? (this.inst.x = t.initialparam1 + (t.targetparam1 - t.initialparam1) * e, this.inst.y = t.initialparam2 + (t.targetparam2 - t.initialparam2) * e) : (this.inst.x += (t.targetparam1 - t.initialparam1) * e - t.lastKnownValue, this.inst.y += (t.targetparam2 - t.initialparam2) * e - t.lastKnownValue2, t.lastKnownValue = (t.targetparam1 - t.initialparam1) * e, t.lastKnownValue2 = (t.targetparam2 - t.initialparam2) * e);
			else if (1 === t.tweened) t.enforce ? (this.inst.width = t.initialparam1 + (t.targetparam1 - t.initialparam1) * e, this.inst.height = t.initialparam2 + (t.targetparam2 - t.initialparam2) * e) : (this.inst.width += (t.targetparam1 - t.initialparam1) * e - t.lastKnownValue, this.inst.height += (t.targetparam2 - t.initialparam2) * e - t.lastKnownValue2, t.lastKnownValue = (t.targetparam1 - t.initialparam1) * e, t.lastKnownValue2 = (t.targetparam2 - t.initialparam2) * e);
			else if (2 === t.tweened) t.enforce ? this.inst.width = t.initialparam1 + (t.targetparam1 - t.initialparam1) * e : (this.inst.width += (t.targetparam1 - t.initialparam1) * e - t.lastKnownValue, t.lastKnownValue = (t.targetparam1 - t.initialparam1) * e);
			else if (3 === t.tweened) t.enforce ? this.inst.height = t.initialparam2 + (t.targetparam2 - t.initialparam2) * e : (this.inst.height += (t.targetparam2 - t.initialparam2) * e - t.lastKnownValue2, t.lastKnownValue2 = (t.targetparam2 - t.initialparam2) * e);
			else if (4 === t.tweened)
				if (t.enforce) {
					var i = t.initialparam1 + (t.targetparam1 - t.initialparam1) * e;
					this.inst.angle = cr.clamp_angle(cr.to_radians(i))
				} else {
					var i = (t.targetparam1 - t.initialparam1) * e - t.lastKnownValue;
					this.inst.angle = cr.clamp_angle(this.inst.angle + cr.to_radians(i)), t.lastKnownValue = (t.targetparam1 - t.initialparam1) * e
				} else if (5 === t.tweened) t.enforce ? this.inst.opacity = (t.initialparam1 + (t.targetparam1 - t.initialparam1) * e) / 100 : (this.inst.opacity += ((t.targetparam1 - t.initialparam1) * e - t.lastKnownValue) / 100, t.lastKnownValue = (t.targetparam1 - t.initialparam1) * e);
			else if (6 === t.tweened) t.enforce ? this.value = t.initialparam1 + (t.targetparam1 - t.initialparam1) * e : (this.value += (t.targetparam1 - t.initialparam1) * e - t.lastKnownValue, t.lastKnownValue = (t.targetparam1 - t.initialparam1) * e);
			else if (7 === t.tweened) t.enforce ? this.inst.x = t.initialparam1 + (t.targetparam1 - t.initialparam1) * e : (this.inst.x += (t.targetparam1 - t.initialparam1) * e - t.lastKnownValue, t.lastKnownValue = (t.targetparam1 - t.initialparam1) * e);
			else if (8 === t.tweened) t.enforce ? this.inst.y = t.initialparam2 + (t.targetparam2 - t.initialparam2) * e : (this.inst.y += (t.targetparam2 - t.initialparam2) * e - t.lastKnownValue2, t.lastKnownValue2 = (t.targetparam2 - t.initialparam2) * e);
			else if (9 === t.tweened) {
				var r = t.initialparam1 + (t.targetparam1 - t.initialparam1) * e,
					s = t.initialparam2 + (t.targetparam2 - t.initialparam2) * e;
				this.inst.width < 0 && (r = t.initialparam1 + (t.targetparam1 + t.initialparam1) * -e), this.inst.height < 0 && (s = t.initialparam2 + (t.targetparam2 + t.initialparam2) * -e), t.enforce ? (this.inst.width = this.inst.curFrame.width * r, this.inst.height = this.inst.curFrame.height * s) : (this.inst.width < 0 ? (this.inst.width = r * (this.inst.width / (-1 + t.lastKnownValue)), t.lastKnownValue = r + 1) : (this.inst.width = r * (this.inst.width / (1 + t.lastKnownValue)), t.lastKnownValue = r - 1), this.inst.height < 0 ? (this.inst.height = s * (this.inst.height / (-1 + t.lastKnownValue2)), t.lastKnownValue2 = s + 1) : (this.inst.height = s * (this.inst.height / (1 + t.lastKnownValue2)), t.lastKnownValue2 = s - 1))
			}
			this.inst.set_bbox_changed()
		}, i.tick = function() {
			var t = this.runtime.getDt(this.inst),
				e = this.tween_list["default"];
			if (0 !== e.state) {
				e.onStart && (this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnStart, this.inst), e.onStart = !1), e.onReverseStart && (this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnReverseStart, this.inst), e.onReverseStart = !1), this.active = 1 == e.state || 2 == e.state || 4 == e.state || 5 == e.state || 6 == e.state;
				var i = e.OnTick(t);
				this.updateTween(e, i), e.onEnd && (this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnEnd, this.inst), e.onEnd = !1), e.onReverseEnd && (this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnReverseEnd, this.inst), e.onReverseEnd = !1)
			}
		}, t.cnds = {};
		var r = t.cnds;
		r.IsActive = function() {
			return 0 !== this.tween_list["default"].state
		}, r.IsReversing = function() {
			return 2 == this.tween_list["default"].state
		}, r.CompareProgress = function(t, e) {
			var i = this.tween_list["default"];
			return cr.do_cmp(i.progress / i.duration, t, e)
		}, r.OnStart = function() {
			return void 0 === this.tween_list["default"] ? !1 : this.tween_list["default"].onStart
		}, r.OnReverseStart = function() {
			return void 0 === this.tween_list["default"] ? !1 : this.tween_list["default"].onReverseStart
		}, r.OnEnd = function() {
			return void 0 === this.tween_list["default"] ? !1 : this.tween_list["default"].onEnd
		}, r.OnReverseEnd = function() {
			return void 0 === this.tween_list["default"] ? !1 : this.tween_list["default"].onReverseEnd
		}, t.acts = {};
		var s = t.acts;
		s.Start = function(t, e) {
			this.useCurrent = 1 == e, this.startTween(t)
		}, s.Stop = function(t) {
			this.stopTween(t)
		}, s.Reverse = function(t) {
			this.reverseTween(t)
		}, s.ProgressTo = function(t) {
			this.setProgressTo(t)
		}, s.SetDuration = function(t) {
			isNaN(t) || 0 > t || void 0 !== this.tween_list["default"] && (this.tween_list["default"].duration = t)
		}, s.SetEnforce = function(t) {
			void 0 !== this.tween_list["default"] && (this.tween_list["default"].enforce = 1 === t)
		}, s.SetInitial = function(t) {
			if (void 0 !== this.tween_list["default"]) {
				var e = this.parseCurrent(this.tween_list["default"].tweened, t);
				this.tween_list["default"].setInitial(e)
			}
		}, s.SetTarget = function(t, e, i) {
			if (void 0 !== this.tween_list["default"] && !isNaN(i)) {
				var r = this.tween_list["default"],
					s = i + "";
				this.targetmode = e;
				var n = "",
					a = "";
				if (1 === e) {
					switch (this.target = "relative(" + s + ")", t) {
						case 0:
							n = this.inst.x + i, a = r.targetparam2;
							break;
						case 1:
							n = r.targetparam1, a = this.inst.y + i;
							break;
						case 2:
							n = "" + cr.to_degrees(this.inst.angle + cr.to_radians(i)), a = n;
							break;
						case 3:
							n = "" + 100 * this.inst.opacity + i, a = n;
							break;
						case 4:
							n = this.inst.width + i, a = r.targetparam2;
							break;
						case 5:
							n = r.targetparam1, a = this.inst.height + i;
							break;
						case 6:
							n = i, a = i
					}
					s = n + "," + a
				} else {
					switch (t) {
						case 0:
							n = i, a = r.targetparam2;
							break;
						case 1:
							n = r.targetparam1, a = i;
							break;
						case 2:
							n = i, a = i;
							break;
						case 3:
							n = i, a = i;
							break;
						case 4:
							n = i, a = r.targetparam2;
							break;
						case 5:
							n = r.targetparam1, a = i;
							break;
						case 6:
							n = i, a = i
					}
					s = n + "," + a, this.target = s
				}
				var o = this.parseCurrent(this.tween_list["default"].tweened, "current"),
					h = this.parseCurrent(this.tween_list["default"].tweened, s);
				r.setInitial(o), r.setTarget(h)
			}
		}, s.SetTweenedProperty = function(t) {
			void 0 !== this.tween_list["default"] && (this.tween_list["default"].tweened = t)
		}, s.SetEasing = function(t) {
			void 0 !== this.tween_list["default"] && (this.tween_list["default"].easefunc = t)
		}, s.SetValue = function(t) {
			var e = this.tween_list["default"];
			this.value = t, 6 === e.tweened && e.setInitial(this.parseCurrent(e.tweened, "current"))
		}, s.SetParameter = function(t, e, i, r, s) {
			if (void 0 === this.tween_list["default"]) this.addToTweenList("default", t, e, initial, i, r, s, 0);
			else {
				var n = this.tween_list["default"];
				n.tweened = t, n.easefunc = e, n.setInitial(this.parseCurrent(t, "current")), n.setTarget(this.parseCurrent(t, i)), n.duration = r, n.enforce = 1 === s
			}
		}, t.exps = {};
		var n = t.exps;
		n.State = function(t) {
			var e = "N/A";
			switch (this.tween_list["default"].state) {
				case 0:
					e = "paused";
					break;
				case 1:
					e = "playing";
					break;
				case 2:
					e = "reversing";
					break;
				case 3:
					e = "seeking"
			}
			t.set_string(e)
		}, n.Progress = function(t) {
			var e = this.tween_list["default"].progress / this.tween_list["default"].duration;
			t.set_float(e)
		}, n.Duration = function(t) {
			t.set_float(this.tween_list["default"].duration)
		}, n.Target = function(t) {
			var e = this.tween_list["default"],
				i = "N/A";
			switch (e.tweened) {
				case 0:
					i = e.targetparam1;
					break;
				case 1:
					i = e.targetparam2;
					break;
				case 2:
					i = e.targetparam1;
					break;
				case 3:
					i = e.targetparam1;
					break;
				case 4:
					i = e.targetparam1;
					break;
				case 5:
					i = e.targetparam2;
					break;
				case 6:
					i = e.targetparam1
			}
			t.set_float(i)
		}, n.Value = function(t) {
			var e = this.value;
			t.set_float(e)
		}
	}(), cr.behaviors.scrollto = function(t) {
		this.runtime = t, this.shakeMag = 0, this.shakeStart = 0, this.shakeEnd = 0, this.shakeMode = 0
	},
	function() {
		function t(t) {
			var e, i, r;
			for (e = 0, i = t.behavior_insts.length; i > e; ++e)
				if (r = t.behavior_insts[e], r.behavior instanceof cr.behaviors.scrollto) return r;
			return null
		}

		function e() {}
		var i = cr.behaviors.scrollto.prototype;
		i.Type = function(t, e) {
			this.behavior = t, this.objtype = e, this.runtime = t.runtime
		};
		var r = i.Type.prototype;
		r.onCreate = function() {}, i.Instance = function(t, e) {
			this.type = t, this.behavior = t.behavior, this.inst = e, this.runtime = t.runtime
		};
		var s = i.Instance.prototype;
		s.onCreate = function() {
			this.enabled = 0 !== this.properties[0]
		}, s.saveToJSON = function() {
			return {
				smg: this.behavior.shakeMag,
				ss: this.behavior.shakeStart,
				se: this.behavior.shakeEnd,
				smd: this.behavior.shakeMode
			}
		}, s.loadFromJSON = function(t) {
			this.behavior.shakeMag = t.smg, this.behavior.shakeStart = t.ss, this.behavior.shakeEnd = t.se, this.behavior.shakeMode = t.smd
		}, s.tick = function() {}, s.tick2 = function() {
			if (this.enabled) {
				var e, i, r, s = this.behavior.my_instances.valuesRef(),
					n = 0,
					a = 0,
					o = 0;
				for (e = 0, i = s.length; i > e; e++) r = t(s[e]), r && r.enabled && (n += s[e].x, a += s[e].y, ++o);
				var h = this.inst.layer.layout,
					c = this.runtime.kahanTime.sum,
					l = 0,
					u = 0;
				if (c >= this.behavior.shakeStart && c < this.behavior.shakeEnd) {
					var p = this.behavior.shakeMag * Math.min(this.runtime.timescale, 1);
					0 === this.behavior.shakeMode && (p *= 1 - (c - this.behavior.shakeStart) / (this.behavior.shakeEnd - this.behavior.shakeStart));
					var d = Math.random() * Math.PI * 2,
						f = Math.random() * p;
					l = Math.cos(d) * f, u = Math.sin(d) * f
				}
				h.scrollToX(n / o + l), h.scrollToY(a / o + u)
			}
		}, e.prototype.Shake = function(t, e, i) {
			this.behavior.shakeMag = t, this.behavior.shakeStart = this.runtime.kahanTime.sum, this.behavior.shakeEnd = this.behavior.shakeStart + e, this.behavior.shakeMode = i
		}, e.prototype.SetEnabled = function(t) {
			this.enabled = 0 !== t
		}, i.acts = new e
	}(), cr.getObjectRefTable = function() {
		return [cr.plugins_.Keyboard, cr.plugins_.LocalStorage, cr.plugins_.Mouse, cr.plugins_.Sprite, cr.plugins_.Spritefont2, cr.plugins_.Touch, cr.plugins_.MagiCam, cr.plugins_.SpriteFontPlus, cr.plugins_.Audio, cr.plugins_.Browser, cr.plugins_.Famobi, cr.behaviors.Bullet, cr.behaviors.lunarray_LiteTween, cr.behaviors.scrollto, cr.behaviors.Timer, cr.behaviors.Anchor, cr.system_object.prototype.cnds.Every, cr.plugins_.Browser.prototype.cnds.IsPortraitLandscape, cr.system_object.prototype.acts.SetLayoutScale, cr.system_object.prototype.cnds.Else, cr.system_object.prototype.cnds.OnLayoutStart, cr.plugins_.Sprite.prototype.acts.SetX, cr.system_object.prototype.exps.viewportleft, cr.system_object.prototype.exps.viewportright, cr.plugins_.Sprite.prototype.acts.SetY, cr.system_object.prototype.exps.viewporttop, cr.system_object.prototype.exps.viewportbottom, cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth, cr.plugins_.Spritefont2.prototype.acts.SetText, cr.plugins_.Famobi.prototype.exps.Translate, cr.system_object.prototype.exps.newline, cr.system_object.prototype.cnds.CompareVar, cr.plugins_.Audio.prototype.cnds.IsAnyPlaying, cr.plugins_.Audio.prototype.acts.PlayByName, cr.system_object.prototype.cnds.EveryTick, cr.plugins_.Sprite.prototype.acts.RotateClockwise, cr.system_object.prototype.exps.dt, cr.plugins_.Sprite.prototype.acts.SetPos, cr.plugins_.Sprite.prototype.exps.X, cr.plugins_.Sprite.prototype.exps.Y, cr.plugins_.Sprite.prototype.acts.RotateCounterclockwise, cr.system_object.prototype.cnds.IsGroupActive, cr.plugins_.Sprite.prototype.acts.SetInstanceVar, cr.system_object.prototype.exps.choose, cr.system_object.prototype.acts.Wait, cr.system_object.prototype.acts.CreateObject, cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar, cr.system_object.prototype.cnds.TriggerOnce, cr.plugins_.Sprite.prototype.cnds.IsOverlapping, cr.system_object.prototype.exps.random, cr.plugins_.Sprite.prototype.cnds.CompareX, cr.plugins_.Sprite.prototype.cnds.CompareY, cr.plugins_.Touch.prototype.cnds.OnTouchStart, cr.plugins_.Sprite.prototype.acts.SetAnim, cr.system_object.prototype.acts.SetVar, cr.behaviors.Bullet.prototype.cnds.CompareSpeed, cr.plugins_.Sprite.prototype.acts.SetAngle, cr.plugins_.Sprite.prototype.exps.Angle, cr.behaviors.Bullet.prototype.acts.SetEnabled, cr.behaviors.Bullet.prototype.acts.SetSpeed, cr.plugins_.Sprite.prototype.acts.SetVisible, cr.behaviors.Timer.prototype.acts.StartTimer, cr.plugins_.Spritefont2.prototype.cnds.IsOnScreen, cr.plugins_.Spritefont2.prototype.acts.Destroy, cr.behaviors.Timer.prototype.cnds.OnTimer, cr.system_object.prototype.acts.GoToLayout, cr.plugins_.Sprite.prototype.cnds.OnCreated, cr.plugins_.Sprite.prototype.acts.SetScale, cr.behaviors.lunarray_LiteTween.prototype.acts.SetTarget, cr.behaviors.lunarray_LiteTween.prototype.acts.Start, cr.plugins_.Sprite.prototype.cnds.OnCollision, cr.plugins_.Audio.prototype.acts.Stop, cr.behaviors.Timer.prototype.acts.StopTimer, cr.system_object.prototype.acts.AddVar, cr.behaviors.lunarray_LiteTween.prototype.cnds.OnEnd, cr.plugins_.Sprite.prototype.acts.SetAnimFrame, cr.plugins_.Sprite.prototype.acts.Destroy, cr.plugins_.Sprite.prototype.acts.Spawn, cr.plugins_.Sprite.prototype.acts.SetOpacity, cr.plugins_.Sprite.prototype.exps.Opacity, cr.plugins_.Sprite.prototype.acts.SetSize, cr.plugins_.Sprite.prototype.exps.ImageWidth, cr.plugins_.Sprite.prototype.exps.ImageHeight, cr.plugins_.Sprite.prototype.cnds.CompareOpacity, cr.plugins_.Sprite.prototype.acts.LoadURL, cr.plugins_.Famobi.prototype.exps.GetMoreGamesButtonImage, cr.plugins_.Audio.prototype.acts.PreloadByName, cr.plugins_.Touch.prototype.cnds.IsTouchingObject, cr.plugins_.Audio.prototype.acts.StopAll, cr.plugins_.Touch.prototype.cnds.OnTouchObject, cr.plugins_.Famobi.prototype.acts.MoreGamesLink, cr.plugins_.LocalStorage.prototype.acts.CheckItemExists, cr.plugins_.LocalStorage.prototype.cnds.OnItemExists, cr.plugins_.LocalStorage.prototype.acts.GetItem, cr.plugins_.LocalStorage.prototype.cnds.OnItemGet, cr.plugins_.LocalStorage.prototype.exps.ItemValue, cr.plugins_.Famobi.prototype.acts.SubmitHighscore, cr.plugins_.SpriteFontPlus.prototype.acts.SetVisible, cr.plugins_.LocalStorage.prototype.acts.SetItem, cr.plugins_.SpriteFontPlus.prototype.acts.SetText]
	};